!function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=5)}([function(n,t,e){window,n.exports=function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";e.r(t),e.d(t,"register",(function(){return h})),e.d(t,"override",(function(){return f})),e.d(t,"e",(function(){return g})),e.d(t,"getHandle",(function(){return b}));const o={class:"className"},i="textContent|innerText|innerHTML|className|value|style".split("|").reduce((n,t)=>(n[t]=1,n),{}),r={},a={attach:function(n){this.parentElement=n;let t=this.elem;return t||(t=document.createElement(this.tagName),n.appendChild(t)),t},addEventListener:function(n,t){let e=this;this.elem.addEventListener(n,(function(n){t.apply(e,[n,e.elem])}))},setProp:function(n,t){this.elem[n]=t},addEmitHandler:function(n,t){this[n]=t},setAttribute:function(n,t){let e=o[n]||n;this.elem?function(n,t,e){let r=o[t]||t,a=p(t,"v_"),c=p(t,"_"),A=n.elem;if(c)return n[r]=e,e;var s={set:(o,r)=>{if(e!==o||r){if(a){n.setVirtual(t,o);let e=n=>(n.renderedChildren||[]).reduce((n,t)=>n.concat([t],e(t)),[]);e(n).forEach(n=>{if(!n.hasOwnProperty(t))return;n[t]=o;let e=t.replace("v_","set_");n[e]&&n[e].apply(n,[o])})}else i[t]||l(o)?n.setProp(t,o):A.setAttribute(t,o);e=o}},get:()=>"style"===t&&n.element&&n.element.style||e};Object.defineProperty(n,r,s),s.set(e,1),n[r]}(this,e,t):this.attr[n]=t},setVirtual:function(n,t){},renderChildren:function(n,t){return t.map(t=>(t.render||m("child must have render function"),t.parent=this,t.render(n)))},processRender:function(n){let t=this.attach(n,this);this.elem=t,this.element=t,d(this,A.ATTACH),this.renderedChildren=this.renderChildren(t,this.children);const e=n=>p(n,"e_")||p(n,"set_");return Object.getOwnPropertyNames(this.attr.__proto__).forEach(n=>{e(n)&&this.addEmitHandler(n,this.attr[n])}),Object.keys(this.attr).forEach(n=>{let t=this.attr[n];if(!(c.indexOf(n)>-1)&&n)return p(n,"on")?this.addEventListener(n.slice(2),t):e(n)?this.addEmitHandler(n,t):void this.setAttribute(n,t)}),d(this,A.RENDER),this},remove:function(){this.renderedChildren.forEach(n=>n.remove()),r[this.handle]=null;let n=this.parentElement;n&&n!==this.elem&&n.removeChild(this.elem),this.parent=null,this.parentElement=null,d(this,A.DESTROY)},emit:function(n){if(!this.parent)return;let t="e_"+n,e=Array.from(arguments);this.parent[t]&&this.parent[t].apply(this.parent,e.slice(1)),(this.parent||{}).emit&&this.parent.emit.apply(this.parent,e)}},c=["onRender","onAttach","onDestroy"],A={RENDER:c[0],ATTACH:c[1],DESTROY:c[2]},s=C("string"),l=(C("undefined"),C("boolean")),u=function(){};function d(n,t){n.attr[t]&&n.attr[t].call(n)}function h(n,t){return n||m("tagName must be defined"),function(e){e=e||{};let o=Array.from(arguments).slice(1);return e.render||Array.isArray(e)&&e[0].render?(o.unshift(e),e={}):s(e)?e={textContent:e}:s(o[0])&&(e.textContent=o[0],o=o.slice(1)),Object.assign({tagName:n,children:[].concat.apply([],o),attr:e||{},render:function(n){let t=this.processRender(n);return this.handle=this.handle||t.attr.id||t.attr._id||Symbol(t.tagName),t.elem&&(t.elem.remove=t.remove),r[this.handle]=t,t}},u.prototype,t)}}function p(n,t){return n.slice(0,t.length)===t}function f(n){return function(t,e){return h(t,Object.assign({},n,e))}}Object.keys(a).forEach(n=>u.prototype[n]=a[n]);const g=h;function b(n){return r[n]}function m(n){throw new Error(n)}function C(n){return function(t){return typeof t===n}}}])},function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=function(n,t){var e=n[1]||"",o=n[3];if(!o)return e;if(t&&"function"==typeof btoa){var i=(a=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(A," */")),r=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([i]).join("\n")}var a,c,A;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,o){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(o)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&i[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),t.push(A))}},t}},function(n,t,e){var o=e(3),i=e(4);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var r={insert:"head",singleton:!1};o(i,r);n.exports=i.locals||{}},function(n,t,e){"use strict";var o,i=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},r=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}(),a=[];function c(n){for(var t=-1,e=0;e<a.length;e++)if(a[e].identifier===n){t=e;break}return t}function A(n,t){for(var e={},o=[],i=0;i<n.length;i++){var r=n[i],A=t.base?r[0]+t.base:r[0],s=e[A]||0,l="".concat(A," ").concat(s);e[A]=s+1;var u=c(l),d={css:r[1],media:r[2],sourceMap:r[3]};-1!==u?(a[u].references++,a[u].updater(d)):a.push({identifier:l,updater:g(d,t),references:1}),o.push(l)}return o}function s(n){var t=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var i=e.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(n){t.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(t);else{var a=r(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var l,u=(l=[],function(n,t){return l[n]=t,l.filter(Boolean).join("\n")});function d(n,t,e,o){var i=e?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=u(t,i);else{var r=document.createTextNode(i),a=n.childNodes;a[t]&&n.removeChild(a[t]),a.length?n.insertBefore(r,a[t]):n.appendChild(r)}}function h(n,t,e){var o=e.css,i=e.media,r=e.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var p=null,f=0;function g(n,t){var e,o,i;if(t.singleton){var r=f++;e=p||(p=s(t)),o=d.bind(null,e,r,!1),i=d.bind(null,e,r,!0)}else e=s(t),o=h.bind(null,e,t),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return o(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;o(n=t)}else i()}}n.exports=function(n,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var e=A(n=n||[],t);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<e.length;o++){var i=c(e[o]);a[i].references--}for(var r=A(n,t),s=0;s<e.length;s++){var l=c(e[s]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}e=r}}}},function(n,t,e){"use strict";e.r(t);var o=e(1),i=e.n(o)()(!0);i.push([n.i,'*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  overflow: hidden;\n  font-family: "Helvetica";\n  font-size: 1rem;\n}\n\nbutton {\n  outline: none;\n  color: rgb(70, 70, 70);\n}\n\n#app {\n  pointer-events: none;\n  position: relative;\n  top: 0;\n  width: 100vw;\n  left: 0;\n  height: 100vh;\n  background-color: #fff;\n}\n\n.canvas {\n  position: fixed;\n  margin: auto;\n  background: transparent;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;\n}\n\n.canvas.base {\n  background: #fff;\n  z-index: 2;\n}\n\n/* Rules for sizing the icon. */\n.material-icons.md-13 {\n  font-size: 13px;\n}\n.material-icons.md-18 {\n  font-size: 18px;\n}\n.material-icons.md-24 {\n  font-size: 24px;\n}\n.material-icons.md-36 {\n  font-size: 36px;\n}\n.material-icons.md-48 {\n  font-size: 48px;\n}\n\n/* Rules for using icons as black on a light background. */\n.material-icons.md-dark {\n  color: rgba(0, 0, 0, 0.54);\n}\n.material-icons.md-dark.md-inactive {\n  color: rgba(0, 0, 0, 0.26);\n}\n\n/* Rules for using icons as white on a dark background. */\n.material-icons.md-light {\n  color: rgba(255, 255, 255, 1);\n}\n.material-icons.md-light.md-inactive {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.btn {\n  border-radius: 5px;\n  pointer-events: all;\n  font-size: 24px;\n  padding: 7px 20px;\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  outline: none;\n}\n\n.circle {\n  border-radius: 50%;\n}\n\n.btn.circle {\n  border-radius: 50%;\n  width: 55px;\n  height: 55px;\n  padding: 7px 5px 5px 5px;\n}\n\n.o-relative {\n  position: relative;\n}\n\n.o-absolute {\n  position: absolute;\n}\n\n.o-fixed {\n  position: fixed;\n}\n\n.o-hide {\n  opacity: 0;\n}\n\n.o-margin--auto {\n  margin: auto;\n}\n\n.o-margin--v-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.o-margin--t-auto {\n  margin-top: auto;\n}\n\n.o-margin--h-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.o-margin--b-20 {\n  margin-bottom: 20px;\n}\n\n.o-flex {\n  display: flex;\n}\n.o-flex--space-btw {\n  justify-content: space-between;\n}\n\n.o-flex--column {\n  display: flex;\n  flex-direction: column;\n}\n\n.o-none,\n.o-none.o-flex {\n  display: none;\n}\n.o-none.active {\n  display: block;\n}\n.o-none.o-flex.active {\n  display: flex;\n}\n\n.o-bkg--black {\n  background-color: #202020;\n}\n\n.o-width--100 {\n  width: 100%;\n}\n\n.o-height--100 {\n  height: 100%;\n}\n\n.o-width--80 {\n  width: 80%;\n}\n\n.o-height--80 {\n  height: 80%;\n}\n\n.o-width--20 {\n  width: 20%;\n}\n\n.o-height--20 {\n  height: 20%;\n}\n\n.o-hide.active {\n  opacity: 1;\n}\n\n.c-drag-overlay {\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  pointer-events: all;\n}\n.c-drag-overlay > * {\n  display: none;\n}\n\n.c-drag-overlay.active {\n  position: fixed;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(120, 120, 120, 0.5);\n  pointer-events: all;\n}\n\n.c-drag-overlay.active > * {\n  display: block;\n}\n\n.c-overlay-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  z-index: 4;\n  pointer-events: none;\n}\n\n.c-editing-buttons {\n  z-index: 10;\n  width: 60px;\n  position: absolute;\n  justify-content: center;\n  right: 15px;\n  bottom: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.c-editing-buttons .btn {\n  margin-top: 20px;\n}\n\n/** Brush size button**/\n.brush-size-btn {\n  padding: 5px;\n  background-color: rgb(120, 120, 120);\n}\n.brush-size-btn .md-18 {\n  margin-left: 6px;\n}\n.brush-size-btn .md-36 {\n  margin-left: -12px;\n}\n.brush-size-btn.active {\n  z-index: 4;\n  pointer-events: none;\n  padding-top: 6px;\n}\n\n.c-brush-size__editing-overlay {\n  display: flex;\n  padding: 35px;\n  border-radius: 5px;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n}\n\n.c-brush-size__indicator-container {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: calc(100% - 180px);\n  left: 20px;\n  bottom: 40px;\n  height: 100px;\n}\n\n.c-brush-size__indicator {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n}\n\n.c-brush-size__indicator-line {\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  border-radius: 1px;\n}\n\n.c-brush-size__drag-arrows {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 80px;\n  right: 80px;\n  bottom: 15px;\n  height: 50px;\n}\n\n.download-btn {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  background-color: rgb(102, 187, 106);\n}\n\n.download-btn i {\n  margin: 2px 0 0 3px;\n}\n\n.download-btn:hover,\n.download-btn:focus {\n  background-color: rgb(76, 175, 80);\n}\n\n.clear-btn {\n  background-color: rgb(200, 80, 80);\n}\n.clear-btn:hover,\n.clear-btn:focus {\n  background-color: rgba(200, 80, 80, 0.85);\n}\n\n.undo-btn {\n  background-color: rgb(120, 120, 120);\n}\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/* \n.color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 5px;\n  width: 0;\n  padding: 10px;\n  overflow: hidden;\n  transition: width 0.35s, opacity 0.85s ease-out;\n  opacity: 0;\n}\n\n.color-container.active {\n  opacity: 1;\n  width: calc(100vw - 80px);\n  transition: width 0.35s, opacity 0.05s ease-in;\n}\n\n.inner-color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  opacity: 1;\n  z-index: 0;\n} */\n\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/** modal **/\n\n.c-modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 10;\n  /* opacity: 0; */\n  transition: opacity 2s ease-in;\n}\n/* .c-modal:not(:empty) {\n  opacity: 1;\n} */\n\n.c-modal__overlay {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(120, 120, 120, 0.8);\n}\n.c-modal__inner-container {\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n  width: 400px;\n  height: 500px;\n  max-width: 79%;\n  max-height: 95%;\n}\n.c-modal__content {\n  width: 100%;\n  height: calc(100% - 60px);\n}\n.c-modal__btn-container {\n  display: flex;\n  width: 100%;\n}\n.c-modal__btn-close {\n  box-shadow: none;\n  width: 100%;\n  border-radius: 0;\n  height: 60px;\n  /*   background-color: rgba(40,90,190, .5) */\n}\n\n/** Tabs **/\n\n.c-tab-layout {\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.c-tab-layout__container {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.c-tab-layout__button-container {\n  display: flex;\n  width: 100%;\n}\n\n.c-tab-layout__tab {\n  display: none;\n}\n\n.c-tab-layout__tab.active {\n  display: block;\n  overflow: hidden;\n}\n\n.c-tab-layout__button {\n  display: flex;\n  flex-grow: 1;\n  margin: 0;\n  line-height: 20px;\n  font-size: 16px;\n  border: none;\n  padding: 15px;\n  background-color: rgba(90, 90, 90, 0.2);\n  text-transform: uppercase;\n  text-align: center;\n}\n\n.c-tab-layout__button {\n  border-right: solid 1px rgba(70, 70, 100, 0.5);\n}\n.c-tab-layout__button:last-child {\n  border-right: none;\n}\n\n.c-tab-layout__button.active {\n  /*   border-top: solid 5px rgb(95, 151, 224); */\n  background-color: #fff;\n}\n/** color picker **/\n\n.c-color-picker__tabs {\n  min-width: 250px;\n  min-height: 350px;\n  max-height: 100%;\n}\n\n.c-color-picker {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 10px auto;\n}\n\n.c-color-picker__display {\n  width: 130px;\n  height: 90px;\n  border-radius: 30px;\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  margin: 10px auto;\n}\n\n.c-color-picker__sliders {\n  display: flex;\n  flex-direction: column;\n  margin: 5px auto;\n}\n\n.c-color-picker__range-label {\n  display: block;\n}\n\n.c-color-picker__range {\n  display: block;\n  height: 20px;\n  width: 200px;\n}\n\n/** Swatches **/\n\n.c-color-swatches__container {\n  margin: 10px auto;\n  overflow: hidden;\n}\n\n.c-color-swatches {\n  overflow: auto;\n  max-height: 270px;\n  height: 100%;\n  padding: 5px 20px;\n  margin: 0 auto;\n}\n\n.c-color-swatches .btn {\n  margin: 5px;\n}\n\n.txt {\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n}\n\n.hdg {\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.hdg--1 {\n  font-size: 2rem;\n}\n\n.hdg--2 {\n  font-size: 1.5rem;\n}\n\n.hdg--3 {\n  font-size: 1.3rem;\n}\n',"",{version:3,sources:["webpack://app.css"],names:[],mappings:"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",sourcesContent:['*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  overflow: hidden;\n  font-family: "Helvetica";\n  font-size: 1rem;\n}\n\nbutton {\n  outline: none;\n  color: rgb(70, 70, 70);\n}\n\n#app {\n  pointer-events: none;\n  position: relative;\n  top: 0;\n  width: 100vw;\n  left: 0;\n  height: 100vh;\n  background-color: #fff;\n}\n\n.canvas {\n  position: fixed;\n  margin: auto;\n  background: transparent;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;\n}\n\n.canvas.base {\n  background: #fff;\n  z-index: 2;\n}\n\n/* Rules for sizing the icon. */\n.material-icons.md-13 {\n  font-size: 13px;\n}\n.material-icons.md-18 {\n  font-size: 18px;\n}\n.material-icons.md-24 {\n  font-size: 24px;\n}\n.material-icons.md-36 {\n  font-size: 36px;\n}\n.material-icons.md-48 {\n  font-size: 48px;\n}\n\n/* Rules for using icons as black on a light background. */\n.material-icons.md-dark {\n  color: rgba(0, 0, 0, 0.54);\n}\n.material-icons.md-dark.md-inactive {\n  color: rgba(0, 0, 0, 0.26);\n}\n\n/* Rules for using icons as white on a dark background. */\n.material-icons.md-light {\n  color: rgba(255, 255, 255, 1);\n}\n.material-icons.md-light.md-inactive {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.btn {\n  border-radius: 5px;\n  pointer-events: all;\n  font-size: 24px;\n  padding: 7px 20px;\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  outline: none;\n}\n\n.circle {\n  border-radius: 50%;\n}\n\n.btn.circle {\n  border-radius: 50%;\n  width: 55px;\n  height: 55px;\n  padding: 7px 5px 5px 5px;\n}\n\n.o-relative {\n  position: relative;\n}\n\n.o-absolute {\n  position: absolute;\n}\n\n.o-fixed {\n  position: fixed;\n}\n\n.o-hide {\n  opacity: 0;\n}\n\n.o-margin--auto {\n  margin: auto;\n}\n\n.o-margin--v-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.o-margin--t-auto {\n  margin-top: auto;\n}\n\n.o-margin--h-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.o-margin--b-20 {\n  margin-bottom: 20px;\n}\n\n.o-flex {\n  display: flex;\n}\n.o-flex--space-btw {\n  justify-content: space-between;\n}\n\n.o-flex--column {\n  display: flex;\n  flex-direction: column;\n}\n\n.o-none,\n.o-none.o-flex {\n  display: none;\n}\n.o-none.active {\n  display: block;\n}\n.o-none.o-flex.active {\n  display: flex;\n}\n\n.o-bkg--black {\n  background-color: #202020;\n}\n\n.o-width--100 {\n  width: 100%;\n}\n\n.o-height--100 {\n  height: 100%;\n}\n\n.o-width--80 {\n  width: 80%;\n}\n\n.o-height--80 {\n  height: 80%;\n}\n\n.o-width--20 {\n  width: 20%;\n}\n\n.o-height--20 {\n  height: 20%;\n}\n\n.o-hide.active {\n  opacity: 1;\n}\n\n.c-drag-overlay {\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  pointer-events: all;\n}\n.c-drag-overlay > * {\n  display: none;\n}\n\n.c-drag-overlay.active {\n  position: fixed;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(120, 120, 120, 0.5);\n  pointer-events: all;\n}\n\n.c-drag-overlay.active > * {\n  display: block;\n}\n\n.c-overlay-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  z-index: 4;\n  pointer-events: none;\n}\n\n.c-editing-buttons {\n  z-index: 10;\n  width: 60px;\n  position: absolute;\n  justify-content: center;\n  right: 15px;\n  bottom: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.c-editing-buttons .btn {\n  margin-top: 20px;\n}\n\n/** Brush size button**/\n.brush-size-btn {\n  padding: 5px;\n  background-color: rgb(120, 120, 120);\n}\n.brush-size-btn .md-18 {\n  margin-left: 6px;\n}\n.brush-size-btn .md-36 {\n  margin-left: -12px;\n}\n.brush-size-btn.active {\n  z-index: 4;\n  pointer-events: none;\n  padding-top: 6px;\n}\n\n.c-brush-size__editing-overlay {\n  display: flex;\n  padding: 35px;\n  border-radius: 5px;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n}\n\n.c-brush-size__indicator-container {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: calc(100% - 180px);\n  left: 20px;\n  bottom: 40px;\n  height: 100px;\n}\n\n.c-brush-size__indicator {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n}\n\n.c-brush-size__indicator-line {\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  border-radius: 1px;\n}\n\n.c-brush-size__drag-arrows {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 80px;\n  right: 80px;\n  bottom: 15px;\n  height: 50px;\n}\n\n.download-btn {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  background-color: rgb(102, 187, 106);\n}\n\n.download-btn i {\n  margin: 2px 0 0 3px;\n}\n\n.download-btn:hover,\n.download-btn:focus {\n  background-color: rgb(76, 175, 80);\n}\n\n.clear-btn {\n  background-color: rgb(200, 80, 80);\n}\n.clear-btn:hover,\n.clear-btn:focus {\n  background-color: rgba(200, 80, 80, 0.85);\n}\n\n.undo-btn {\n  background-color: rgb(120, 120, 120);\n}\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/* \n.color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 5px;\n  width: 0;\n  padding: 10px;\n  overflow: hidden;\n  transition: width 0.35s, opacity 0.85s ease-out;\n  opacity: 0;\n}\n\n.color-container.active {\n  opacity: 1;\n  width: calc(100vw - 80px);\n  transition: width 0.35s, opacity 0.05s ease-in;\n}\n\n.inner-color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  opacity: 1;\n  z-index: 0;\n} */\n\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/** modal **/\n\n.c-modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 10;\n  /* opacity: 0; */\n  transition: opacity 2s ease-in;\n}\n/* .c-modal:not(:empty) {\n  opacity: 1;\n} */\n\n.c-modal__overlay {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(120, 120, 120, 0.8);\n}\n.c-modal__inner-container {\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n  width: 400px;\n  height: 500px;\n  max-width: 79%;\n  max-height: 95%;\n}\n.c-modal__content {\n  width: 100%;\n  height: calc(100% - 60px);\n}\n.c-modal__btn-container {\n  display: flex;\n  width: 100%;\n}\n.c-modal__btn-close {\n  box-shadow: none;\n  width: 100%;\n  border-radius: 0;\n  height: 60px;\n  /*   background-color: rgba(40,90,190, .5) */\n}\n\n/** Tabs **/\n\n.c-tab-layout {\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.c-tab-layout__container {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.c-tab-layout__button-container {\n  display: flex;\n  width: 100%;\n}\n\n.c-tab-layout__tab {\n  display: none;\n}\n\n.c-tab-layout__tab.active {\n  display: block;\n  overflow: hidden;\n}\n\n.c-tab-layout__button {\n  display: flex;\n  flex-grow: 1;\n  margin: 0;\n  line-height: 20px;\n  font-size: 16px;\n  border: none;\n  padding: 15px;\n  background-color: rgba(90, 90, 90, 0.2);\n  text-transform: uppercase;\n  text-align: center;\n}\n\n.c-tab-layout__button {\n  border-right: solid 1px rgba(70, 70, 100, 0.5);\n}\n.c-tab-layout__button:last-child {\n  border-right: none;\n}\n\n.c-tab-layout__button.active {\n  /*   border-top: solid 5px rgb(95, 151, 224); */\n  background-color: #fff;\n}\n/** color picker **/\n\n.c-color-picker__tabs {\n  min-width: 250px;\n  min-height: 350px;\n  max-height: 100%;\n}\n\n.c-color-picker {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 10px auto;\n}\n\n.c-color-picker__display {\n  width: 130px;\n  height: 90px;\n  border-radius: 30px;\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  margin: 10px auto;\n}\n\n.c-color-picker__sliders {\n  display: flex;\n  flex-direction: column;\n  margin: 5px auto;\n}\n\n.c-color-picker__range-label {\n  display: block;\n}\n\n.c-color-picker__range {\n  display: block;\n  height: 20px;\n  width: 200px;\n}\n\n/** Swatches **/\n\n.c-color-swatches__container {\n  margin: 10px auto;\n  overflow: hidden;\n}\n\n.c-color-swatches {\n  overflow: auto;\n  max-height: 270px;\n  height: 100%;\n  padding: 5px 20px;\n  margin: 0 auto;\n}\n\n.c-color-swatches .btn {\n  margin: 5px;\n}\n\n.txt {\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n}\n\n.hdg {\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.hdg--1 {\n  font-size: 2rem;\n}\n\n.hdg--2 {\n  font-size: 1.5rem;\n}\n\n.hdg--3 {\n  font-size: 1.3rem;\n}\n'],sourceRoot:""}]),t.default=i},function(n,t,e){"use strict";function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function i(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}e.r(t);var r=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.storage=localStorage}var t,e,r;return t=n,(e=[{key:"save",value:function(n,t){var e=this;return this.verifyStorage().then((function(){return e.serialize(t)})).then((function(t){return e.insert(n,t)}))}},{key:"load",value:function(n){var t=this;return this.verifyStorage().then((function(){return t.storage.getItem(n)})).then((function(n){return n?t.deserialize(n):null}))}},{key:"clear",value:function(){return this.storage.clear(),Promise.resolve()}},{key:"remove",value:function(n){return this.storage.removeItem(n),Promise.resolve(!0)}},{key:"getKeys",value:function(){return Promise.resolve(Object.keys(this.storage))}},{key:"verifyStorage",value:function(){return this.storage?Promise.resolve():Promise.reject("localStorage is not available")}},{key:"serialize",value:function(n){return this.isDate(n)&&(n=n.toISOString()),"string"!=typeof n&&(n=JSON.stringify(n)),n}},{key:"deserialize",value:function(n){return n&&(n.indexOf("{")>-1||n.indexOf("[")>-1)?this.getObjectProps(JSON.parse(n)):"true"===n||"false"===n?"true"===n:isNaN(Number(n))?this.isSerializedDate(n)?this.convertToDate(n):"undefined"===n?null:n:Number(n)}},{key:"getObjectProps",value:function(n){var t=this;return Object.keys(n).map((function(e){n[e]=t.getPropValue(n[e])})),n}},{key:"getPropValue",value:function(n){var t=this;return this.isArray(n)?n.map((function(n){return t.getPropValue(n)})):"object"===o(n)?this.getObjectProps(n):"string"==typeof n&&this.isSerializedDate(n)?this.convertToDate(n):n}},{key:"convertToDate",value:function(n){var t=Date.parse(n);return isNaN(t)?n:new Date(t)}},{key:"isSerializedDate",value:function(n){var t=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/.test(n);return t||/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+/.test(n)}},{key:"insert",value:function(n,t){try{return this.storage.setItem(n,t),Promise.resolve(!0)}catch(n){return Promise.reject(n)}}},{key:"isDate",value:function(n){return"[object Date]"===Object.prototype.toString.call(n)}},{key:"isArray",value:function(n){return"[object Array]"===Object.prototype.toString.call(n)}}])&&i(t.prototype,e),r&&i(t,r),n}();function a(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}var c=function(){function n(t,e,o,i){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.r=Math.round(t),this.g=Math.round(e),this.b=Math.round(o),this.a=isNaN(i)?1:i}var t,e,o;return t=n,(e=[{key:"setOpacity",value:function(n){var t=isNaN(n)?1:n;this.a=Math.min(t,1)}},{key:"update",value:function(n){this.r=Math.round(n.r||this.r),this.g=Math.round(n.g||this.g),this.b=Math.round(n.b||this.b),this.a=isNaN(n.a)?1:Math.min(n.a,this.a)}},{key:"getAsCssValue",value:function(){return"rgba(".concat(this.r,", ").concat(this.g,", ").concat(this.b,", ").concat(this.a,")")}},{key:"copy",value:function(){return n.fromObject(this)}}])&&a(t.prototype,e),o&&a(t,o),n}();function A(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}c.fromObject=function(n){var t=new c(1,1,1);return t.update(n),t};var s=function(){function n(t,e,o){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),isNaN(o)&&(o=t.a||1),this.color=t,this.lineWidth=e,this.opacity=o,isNaN(o)||this.color.setOpacity(o)}var t,e,o;return t=n,(e=[{key:"copy",value:function(){return new n(this.color.copy(),this.lineWidth,this.opacity)}}])&&A(t.prototype,e),o&&A(t,o),n}();function l(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}s.fromObject=function(n){return new s(c.fromObject(n.color),n.lineWidth||5)};var u=new r,d=function(){function n(t,e,o){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.ctx=t.getContext("2d"),this.scratchCtx=e.getContext("2d"),this.clear=o,this.paths=[],this.redo=[],this.canvas=t,this.canvasScratch=e,this.settings=new s(new c(20,45,200),5,1),this.restorePath()}var t,e,o;return t=n,(e=[{key:"undo",value:function(){this.clear(this.ctx),this.redo.push(this.paths.pop()),this.drawAllPaths(this.paths)}},{key:"updateSettings",value:function(n){this.settings=Object.assign(this.settings,n),n.color&&1!==n.color.a&&(this.settings.opacity=n.color.a)}},{key:"startDrawing",value:function(){var n=this,t=[];return{start:function(n,e,o){t=[o],Object.assign({},o)},move:function(e,o,i){e.preventDefault(),e.stopPropagation(),t.push(i),n.drawLine(t.slice(-2),n.settings,n.scratchCtx,n.clear)},finish:function(){n.savePath(t,n.settings)}}}},{key:"drawLine",value:function(n,t,e,o){var i=e||this.ctx;n&&n.length&&(n=n.filter((function(n){return!!n})),"function"==typeof o&&o(i),i.beginPath(),i.moveTo(n[0].x,n[0].y),n.forEach((function(n){i.lineTo(n.x,n.y)})),i.lineWidth=t.lineWidth,i.lineCap="round",i.strokeStyle=t.color.getAsCssValue(),i.stroke())}},{key:"savePath",value:function(n,t){this.paths.push({path:n,settings:t.copy()}),this.clear(this.ctx),this.clear(this.scratchCtx),this.drawAllPaths(this.paths),u.save("paths",this.paths)}},{key:"restorePath",value:function(){var n=this;u.load("paths").then((function(t){n.paths=t||[],n.drawAllPaths(t)}))}},{key:"drawAllPaths",value:function(n,t){var e=this;n&&n.length&&n.forEach((function(n){console.log(n);var o=s.fromObject(n.settings);e.drawLine(n.path,o,t)}))}},{key:"clearBackstack",value:function(){this.paths=[]}}])&&l(t.prototype,e),o&&l(t,o),n}(),h={click:"click",mousedown:"touchstart",mouseup:"touchend",mousemove:"touchmove"};function p(n,t){f(n,"mousedown",(function(e,o,i){t.start.call(n,e,n,i);var r=null,a=function(e,o,i){clearTimeout(r),t.finish.call(n,e,o,i),A(),c()},c=f(n,"mouseup",a,!0),A=f(n,"mousemove",(function(e,o,i){clearTimeout(r),t.move.call(n,e,o,i),r=setTimeout((function(){a(e,o,i)}),500)}),!0)}),!0)}function f(n,t,e,o){var i=function(t){o&&t.preventDefault(),e.call(n,t,n,function(n){if(n.clientX)return{x:n.clientX,y:n.clientY};if(n.type.indexOf("touch")>-1&&n.touches&&n.touches[0])return function(n){var t=n.touches[0].clientX,e=n.touches[0].clientY;if(n.touches.length>1){var o=Array.from(n.touches).filter((function(n){return g(n.clientX,window.innerWidth)&&g(n.clientY,window.innerHeight)}));o.length&&(t=o[0].clientX,e=o[0].clientY)}return{x:t,y:e}}(n);return null}(t))};return n.element.addEventListener(t,i),h[t]&&h[t]!==t?(n.element.addEventListener(h[t],i),function(){n.element.removeEventListener(t,i),n.element.removeEventListener(h[t],i)}):function(){n.element.removeEventListener(t,i)}}function g(n,t){return n>70&&n<t-70}new r;var b=document.getElementById("canvas"),m=document.getElementById("canvas-scratch-pad"),C=window.devicePixelRatio,E=window.innerHeight,v=window.innerWidth;function x(n){return n.width=v*C,n.height=E*C,n.style.width=v+"px",n.style.height=E+"px",n.getContext("2d").scale(C,C),n}x(b),x(m);var y=new d(x(b),x(m),B);function B(n,t){t&&y.clearBackstack(),n.clearRect(0,0,b.width/C,b.height/C)}function w(){y.undo()}function _(n){this.download="image.png",this.href=b.toDataURL("image/png")}function k(n){y.updateSettings(n)}var j=e(0),z=function(){};z.prototype.addEventListener=function(n,t){if(n==="oncustomdrag".slice(2))return void p(this,t);f(this,n,t)},z.prototype.windowOffset=function(){var n={x:this.elem.offsetLeft,y:this.elem.offsetTop},t=this.parentElement;for(;t.parentElement;)n.x+=t.offsetLeft,n.y+=t.offsetTop,t=t.parentElement;return n},z.prototype.setActive=function(n){this[n?"addClass":"removeClass"]("active")},z.prototype.addClass=function(n){if(!this.className)return void this.setAttribute(this.elem,"className",n);if(this.className.split(" ").indexOf(n)>-1)return;this.className=[this.className,n].join(" ")},z.prototype.removeClass=function(n){if(!this.className||-1===this.className.indexOf(n))return;this.className=this.className.split(" ").filter((function(t){return t!==n})).join(" ")},z.prototype.clone=function(n,t){var e=(this.children||[]).map((function(n){return n.clone()})),o=O(this.tagName)(Object.assign({},this.attr,t),e);return this.handle=n,o};var O=Object(j.override)(z.prototype),S="a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|rtc|ruby|s|samp|script|section|select|slot|small|source|span|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr".split("|").reduce((function(n,t){return n[t]=O(t),n}),{});S.virtual=O("virtual",{attach:function(n){return this.parentElement=n,this.parentElement}});var Y={register:O,elements:S,getHandle:j.getHandle};var W=Y.elements,N=W.div,P=W.button,M=Y.elements,T=M.div,D=M.button,Z=Y.register("d-tab");function H(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return Z({_id:n.id||Symbol("tab"),class:"c-tab-layout__tab".concat(n.active?" active":""),_active:n.active,_title:n.title},e)}function L(n,t,e){return D({class:"c-tab-layout__button".concat(n.attr._active?" active":""),onclick:e(t)},n.attr._title)}var U=[{r:244,g:67,b:54,a:1},{r:233,g:30,b:99,a:1},{r:156,g:39,b:176,a:1},{r:103,g:58,b:183,a:1},{r:63,g:81,b:181,a:1},{r:33,g:150,b:243,a:1},{r:3,g:169,b:244,a:1},{r:0,g:188,b:212,a:1},{r:0,g:150,b:136,a:1},{r:76,g:175,b:80,a:1},{r:139,g:195,b:74,a:1},{r:205,g:220,b:57,a:1},{r:255,g:235,b:59,a:1},{r:255,g:193,b:7,a:1},{r:255,g:152,b:0,a:1},{r:255,g:87,b:34,a:1},{r:121,g:85,b:72,a:1},{r:158,g:158,b:158,a:1},{r:96,g:125,b:139,a:1}];var R=Y.elements,X=R.div,V=R.input,I=R.button,q=(R.p,R.label),J=(Y.getHandle,{red:"r",green:"g",blue:"b",opacity:"a"});function G(n){return t=X({class:"c-color-picker__tabs",v_color:n.currentColor,e_onColorChanged:function(t){this.v_color=t,n.colorSelected(t)}},function(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];var i=e.map((function(n,t){return L(n,t,r)}));function r(n){return function(t){e.forEach((function(t,e){return t.setActive(e===n)})),i.forEach((function(t,e){return t.setActive(e===n)}))}}return T({class:"c-tab-layout"},T({class:"c-tab-layout__button-container"},i),T({class:"c-tab-layout__container"},e))}({},H({title:"swatches",active:!0},X({class:"c-color-swatches__container"},$(),X({class:"c-color-swatches"},U.map(K)))),H({title:"custom",active:!1},X({class:"c-color-picker"},$(),X({class:"c-color-picker__sliders"},Object.keys(J).map(F)))))),N({class:"c-modal",e_onremove:function(){this.remove()}},N({class:"c-modal__overlay o-flex"},N({class:"c-modal__inner-container"},N({class:"c-modal__content"},t),N({class:"c-modal__btn-container"},P({class:"btn c-modal__btn-close",onclick:function(){this.emit("onremove")}},"OK"))))).render(document.body);var t}function $(){return X({class:"c-color-picker__display",style:"",v_color:null,set_color:function(n){this.style="background-color: ".concat(this.v_color.getAsCssValue())}})}function F(n){var t,e=J[n],o="opacity"===n?1:256,i="opacity"===n?.01:1;return X({class:"c-color-picker__option"},q({class:"c-color-picker__range-label"},n),V({class:"c-color-picker__range",type:"range",min:0,max:o,step:i,v_color:null,set_color:function(n){this.value=n[e]},value:"",oninput:(t=e,function(n){this.value=Number(n.target.value);var e=c.fromObject(Object.assign({},this.v_color,function(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}({},t,this.value)));this.emit("onColorChanged",e)})}))}function K(n){var t=c.fromObject(n);return I({class:"btn circle",onclick:Q(t),style:"background-color: ".concat(t.getAsCssValue(),";")})}function Q(n){return function(t){this.emit("onColorChanged",n)}}var nn=Y.elements,tn=nn.button,en=nn.i;nn.div,Y.getHandle;function on(){return tn({class:"btn circle custom-color-btn",onclick:function(n,t){var e,o,i=this;e=this.v_color,o=function(n){i.emit("updateColor",n)},G({colorSelected:function(n){this.v_color=n,o(n)},currentColor:e})},v_color:null,set_color:rn,style:"background-color: rgb(40,40,40)"},en({class:"material-icons md-light md-36"},"brush"))}function rn(){this.style.backgroundColor="".concat(this.v_color.getAsCssValue())}var an=Y.elements,cn=(an.button,an.i,an.div);Y.getHandle;function An(n){var t={win:{x:0,y:0},view:{x:0,y:0}},e=!1,o=!0,i=null,r={start:function(n,i,r){o=!0,e=!0,t.view=r,t.win=this.windowOffset(),a.call(this,n,i,r,500),this.emit("onDragLocationChanged",{x:t.win.x,y:t.win.y}),this.emit("dragging",!0)},move:function(n,i,r){if(e&&r){a.call(this,n,i,r,500);var c=r.x-t.view.x,A=c+t.win.x;Math.abs(c)>10&&(o=!1),this.emit("onDragLocationChanged",{x:A,y:t.win.y}),this.emit("onMove",n,r.x)}},finish:function(t,r,a){clearTimeout(i),e&&(e=!1,this.emit("dragging",!1),o&&this.emit("onlick",t,n),this.emit("onDragLocationChanged",null))}};function a(n,t,e,o){var a=this;clearTimeout(i),i=setTimeout((function(){return r.finish.call(a,n,t,e)}),o)}return r}function sn(n){this.v_dragging=n}var ln=Y.elements,un=ln.button,dn=ln.i,hn=ln.div;Y.getHandle;function pn(){return function(n,t){t.setAttribute("v_dragging",!1),t.setAttribute("set_dragging",(function(n){this[n?"addClass":"removeClass"]("o-hide")})),n=Object.assign(n,{class:"o-relative",v_dragging:!1,e_dragging:sn,v_dragLocation:null,e_onDragLocationChanged:function(n){this.v_dragLocation=n}});for(var e=arguments.length,o=new Array(e>2?e-2:0),i=2;i<e;i++)o[i-2]=arguments[i];return cn(n,t,cn({class:"c-drag-overlay",v_dragging:!1,set_dragging:function(n){this.setActive(n)},oncustomdrag:An(t)},o),t.clone("dragbutton",{onRender:function(){this.addClass("o-fixed o-none"),this.setAttribute("style",""),this.setAttribute("v_dragLocation",null),this.addEmitHandler("set_dragging",(function(n){this.setActive(n)})),this.addEmitHandler("set_dragLocation",(function(n){this.style=n?"left: ".concat(n.x,"px; top: ").concat(n.y,"px;"):""}))}}))}({e_onMove:fn,e_onclick:gn,_updateSize:bn},un({class:"btn circle brush-size-btn o-flex"},dn({class:"material-icons md-light md-18"},"brush"),dn({class:"material-icons md-light md-36"},"brush")),hn({class:"o-width--100 o-height--100 o-relative"},hn({class:"o-flex--column o-width--100 o-height--100"},hn({class:"o-flex--column o-margin--auto"},hn({class:"c-brush-size__editing-overlay"},hn({class:"circle o-bkg--black o-margin--h-auto o-margin--b-20",v_size:1,set_size:function(n){this.style="width: ".concat(n,"px; height: ").concat(n,"px;")},style:"",handle:"sizeDisplay"}),hn({class:"hdg hdg--2",v_size:1,set_size:function(n){this.textContent="".concat(n,"px line width")}},"")))),hn({class:"c-brush-size__indicator-container"},hn({class:"c-brush-size__indicator"},[50,39,27,15,3].map((function(n){return hn({class:"circle o-bkg--black o-margin--t-auto",style:"width: ".concat(n,"px; height: ").concat(n,"px")})}))),hn({class:"c-brush-size__indicator-line o-bkg--black"}))))}function fn(n,t){console.log("handlingMove");var e=window.innerWidth-150;if(!(t>e)){var o=(e-t)/(e/50);this._updateSize(o)}}function gn(n,t){return console.warn("clicked!!!"),!1}function bn(n){n=Math.round(Math.max(n,1)),this.emit("updateSize",n)}var mn=Y.elements,Cn=(mn.div,mn.button,mn.i,mn.virtual);Y.getHandle;var En={$:function(n){return document.querySelector(n)},$$:function(n){return Array.from(document.querySelectorAll(n))}};var vn=Y.elements,xn=vn.button,yn=vn.i,Bn=vn.div,wn=vn.a,_n=(Y.getHandle,function(){var n=localStorage.getItem("v_color");if(n)return c.fromObject(JSON.parse(n));return new c(40,40,40,1)}()),kn=function(){var n=localStorage.getItem("v_size");if(n)return Number(n);return 5}();function jn(n){var t=new s(_n,kn,_n.a);return k(t),Bn({class:"c-overlay-container",_updateSettings:function(){k(this.v_settings)},v_settings:t,set_settings:On,v_color:_n,v_size:kn,e_updateColor:zn("v_color"),e_updateSize:zn("v_size")},function(){var n=[Bn({class:"c-editing-buttons"},xn({class:"btn circle clear-btn",onclick:function(){B(!0)}},yn({class:"material-icons md-light md-36"},"delete_forever")),xn({class:"btn circle undo-btn",onclick:w},yn({class:"material-icons md-light md-36"},"undo")),Cn({},on(),pn()))];["iPhone","iPad","iPod"].includes(navigator.platform)||n.unshift(wn({class:"btn circle download-btn",href:"#",download:"drawing.png",onclick:_},yn({class:"material-icons md-light md-36",textContent:"save"})));return n}())}function zn(n){return function(t){this[n]=t,localStorage.setItem(n,JSON.stringify(t)),this.v_settings=new s(this.v_color,this.v_size,this.v_color.a),this._updateSettings()}}function On(n){this.v_settings=n,this._updateSettings()}p({element:m},y.startDrawing());e(2);jn().render(En.$("#app")),"serviceWorker"in navigator?navigator.serviceWorker.register("./sw.js").then((function(n){console.log("Service worker registration succeeded:",n)})).catch((function(n){console.log("Service worker registration failed:",n)})):console.log("Service workers are not supported.")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VsZS1taW50L2Rpc3QvZWxlTWludC5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9hcHAuY3NzPzRiMzMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovLy8uL2FwcC5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JhZ2UvbG9jYWxTdG9yYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9jb2xvci9Db2xvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2V0dGluZ3MvU2V0dGluZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZHJhd2luZy9wYXRoLmpzIiwid2VicGFjazovLy8uL3NyYy9ldmVudEhhbmRsaW5nL2V2ZW50LmpzIiwid2VicGFjazovLy8uL3NyYy9kcmF3aW5nL2RyYXdpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlci9yZW5kZXJlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9tb2RhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy90YWJzLmpzIiwid2VicGFjazovLy8uL3NyYy9jb2xvci9zd2F0Y2hlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb2xvclBpY2tlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb2xvckJ1dHRvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9kcmFnQnV0dG9uLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2JydXNoU2l6ZUJ1dHRvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9icnVzaENvbnRyb2wuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbnRyb2xPdmVybGF5LmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ3aW5kb3ciLCJlIiwiZGVmYXVsdCIsImgiLCJ5IiwiYiIsImNsYXNzIiwic3BsaXQiLCJyZWR1Y2UiLCJhdHRhY2giLCJ0aGlzIiwicGFyZW50RWxlbWVudCIsImVsZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0YWdOYW1lIiwiYXBwZW5kQ2hpbGQiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwbHkiLCJzZXRQcm9wIiwiYWRkRW1pdEhhbmRsZXIiLCJzZXRBdHRyaWJ1dGUiLCJ1IiwiYSIsInNldCIsInNldFZpcnR1YWwiLCJyZW5kZXJlZENoaWxkcmVuIiwiY29uY2F0IiwiZm9yRWFjaCIsInJlcGxhY2UiLCJlbGVtZW50Iiwic3R5bGUiLCJhdHRyIiwicmVuZGVyQ2hpbGRyZW4iLCJtYXAiLCJyZW5kZXIiLCJ2IiwicGFyZW50IiwicHJvY2Vzc1JlbmRlciIsImYiLCJBVFRBQ0giLCJjaGlsZHJlbiIsImdldE93blByb3BlcnR5TmFtZXMiLCJfX3Byb3RvX18iLCJrZXlzIiwiaW5kZXhPZiIsInNsaWNlIiwiUkVOREVSIiwicmVtb3ZlIiwiaGFuZGxlIiwicmVtb3ZlQ2hpbGQiLCJERVNUUk9ZIiwiZW1pdCIsIkFycmF5IiwiZnJvbSIsImFyZ3VtZW50cyIsIkUiLCJpc0FycmF5IiwidW5zaGlmdCIsInRleHRDb250ZW50IiwiYXNzaWduIiwiaWQiLCJfaWQiLCJsZW5ndGgiLCJFcnJvciIsInVzZVNvdXJjZU1hcCIsImxpc3QiLCJ0b1N0cmluZyIsIml0ZW0iLCJjb250ZW50IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlTWFwIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImpvaW4iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJfaSIsInB1c2giLCJhcGkiLCJvcHRpb25zIiwibG9jYWxzIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXgiLCJvYmoiLCJjc3MiLCJtZWRpYSIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJpbnNlcnQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiTG9jYWxTdG9yZSIsInN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJ0aGVWYWx1ZSIsInZlcmlmeVN0b3JhZ2UiLCJ0aGVuIiwic2VyaWFsaXplIiwic2VyaWFsaXplZCIsImdldEl0ZW0iLCJ2YWwiLCJkZXNlcmlhbGl6ZSIsImNsZWFyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZW1vdmVJdGVtIiwicmVqZWN0IiwiaXNEYXRlIiwidG9JU09TdHJpbmciLCJmb3VuZCIsImdldE9iamVjdFByb3BzIiwicGFyc2UiLCJpc05hTiIsIk51bWJlciIsImlzU2VyaWFsaXplZERhdGUiLCJjb252ZXJ0VG9EYXRlIiwiZ2V0UHJvcFZhbHVlIiwiZXBvY2giLCJEYXRlIiwidGVzdCIsInNldEl0ZW0iLCJlcnJvciIsIkNvbG9yIiwiZyIsIk1hdGgiLCJyb3VuZCIsIm9wYWNpdHkiLCJvcCIsIm1pbiIsImNvbG9yQ29uZmlnIiwiZnJvbU9iamVjdCIsImNvbG9yIiwicHJvdG8iLCJTZXR0aW5nIiwibGluZVdpZHRoIiwic2V0T3BhY2l0eSIsImNvcHkiLCJzZXR0aW5ncyIsInN0b3JlIiwiUGF0aCIsImNhbnZhcyIsImNhbnZhc1NjcmF0Y2giLCJjdHgiLCJnZXRDb250ZXh0Iiwic2NyYXRjaEN0eCIsInBhdGhzIiwicmVkbyIsInJlc3RvcmVQYXRoIiwicG9wIiwiZHJhd0FsbFBhdGhzIiwibmFtZVZhbHVlU2V0dGluZyIsInBhdGgiLCJzdGFydCIsImV2IiwieHkiLCJtb3ZlIiwibW92ZVJFIiwibW92ZUVsZW0iLCJtb3ZlWFkiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImRyYXdMaW5lIiwiZmluaXNoIiwic2F2ZVBhdGgiLCJwb2ludHMiLCJjb250ZXh0IiwiYmVnaW5QYXRoIiwibW92ZVRvIiwieCIsImxpbmVUbyIsImxpbmVDYXAiLCJzdHJva2VTdHlsZSIsImdldEFzQ3NzVmFsdWUiLCJzdHJva2UiLCJzYXZlIiwibG9hZCIsInBhdGhEZWYiLCJjb25zb2xlIiwibG9nIiwiVE9VQ0hfRVZFTlRfTUFQIiwiY2xpY2siLCJtb3VzZWRvd24iLCJtb3VzZXVwIiwibW91c2Vtb3ZlIiwiYWRkRHJhZ0hhbmRsZXIiLCJoYW5kbGVyIiwiYWRkRXZlbnQiLCJmaW5pc2hUaW1lb3V0IiwiX2ZpbmlzaCIsImVuZEV2IiwiZW5kWFkiLCJjbGVhclRpbWVvdXQiLCJyZW1vdmVNb3ZlRXZlbnQiLCJyZW1vdmVTdG9wRXZlbnQiLCJtRVYiLCJtWFkiLCJzZXRUaW1lb3V0IiwiZXZlbnROYW1lIiwiY2xpZW50WCIsImNsaWVudFkiLCJ0eXBlIiwidG91Y2hlcyIsInRvdWNoWCIsInRvdWNoWSIsInRvdWNoIiwiaW5zaWRlRWRnZVRocmVzaG9sZCIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsImdldFRvdWNoWFkiLCJnZXRYWSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwb2ludCIsInRvdGFsRGlzdCIsImdldEVsZW1lbnRCeUlkIiwicmF0aW8iLCJkZXZpY2VQaXhlbFJhdGlvIiwiY2FudmFzSGVpZ2h0IiwiY2FudmFzV2lkdGgiLCJzZXR1cENhbnZhcyIsImNzIiwid2lkdGgiLCJoZWlnaHQiLCJzY2FsZSIsImNsZWFyQmFja3N0YWNrIiwiY2xlYXJSZWN0IiwidW5kbyIsImRvd25sb2FkSW1hZ2UiLCJkb3dubG9hZCIsImhyZWYiLCJ0b0RhdGFVUkwiLCJ1cGRhdGVTZXR0aW5ncyIsIm5ld1NldHRpbmciLCJvdmVycmlkZXMiLCJldk5hbWUiLCJ3aW5kb3dPZmZzZXQiLCJvZmZzZXQiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwiY3VycmVudCIsInNldEFjdGl2ZSIsImFjdGl2ZSIsImFkZENsYXNzIiwiY2xhc3NOYW1lIiwicmVtb3ZlQ2xhc3MiLCJjbiIsImNsb25lIiwiYXR0ck92ZXJyaWRlcyIsImNocyIsImVsIiwibmUiLCJyZWdpc3RlciIsIm92ZXJyaWRlIiwiZWxlbWVudHMiLCJhZ2ciLCJuZXh0IiwidmlydHVhbCIsImdldEhhbmRsZSIsImRpdiIsImJ1dHRvbiIsImVUYWIiLCJ0YWIiLCJ0YWJDb25maWciLCJ0YWJDb250ZW50cyIsIl9hY3RpdmUiLCJfdGl0bGUiLCJ0aXRsZSIsImdldEJ1dHRvbiIsInNldFRhYiIsIm9uY2xpY2siLCJpbnB1dCIsImxhYmVsIiwiSURfTUFQIiwiY29sb3JQaWNrZXIiLCJjb25maWciLCJ2X2NvbG9yIiwiY3VycmVudENvbG9yIiwiZV9vbkNvbG9yQ2hhbmdlZCIsImNvbG9yU2VsZWN0ZWQiLCJ0YWJzIiwidGFiQnV0dG9ucyIsImlkeCIsImJ0biIsImNvbG9yUGlja2VyRGlzcGxheSIsInN3YXRjaGVzIiwiY29sb3JTd2F0Y2giLCJnZXRDb2xvclNsaWRlcnMiLCJlX29ucmVtb3ZlIiwiYm9keSIsInNldF9jb2xvciIsInByb3BOYW1lIiwiY29sb3JLZXkiLCJtYXgiLCJzdGVwIiwib25pbnB1dCIsInNldENvbG9yIiwiY29sb3JCdXR0b24iLCJ1cGRhdGVDb2xvciIsIm5ld0NvbG9yIiwic2V0QmFja2dyb3VuZCIsImJhY2tncm91bmRDb2xvciIsImdldERyYWdIYW5kbGVyIiwibWFpbkJ1dHRvbiIsInNQb2ludCIsIndpbiIsInZpZXciLCJtb3ZpbmciLCJpc0NsaWNrIiwidGltZW91dElkIiwiZXZlbnRIYW5kbGVzIiwic2V0RmluaXNoRGVsYXkiLCJtb3ZlSW5XaW4iLCJhYnMiLCJ0aW1lb3V0Iiwic2V0RHJhZ2dpbmciLCJkcmFnZ2luZyIsInZfZHJhZ2dpbmciLCJicnVzaFNpemVCdXR0b24iLCJlX2RyYWdnaW5nIiwidl9kcmFnTG9jYXRpb24iLCJlX29uRHJhZ0xvY2F0aW9uQ2hhbmdlZCIsImRyYWdMb2NhdGlvbiIsIm92ZXJsYXlDb250ZW50Iiwic2V0X2RyYWdnaW5nIiwib25jdXN0b21kcmFnIiwib25SZW5kZXIiLCJkcmFnQnV0dG9uIiwiZV9vbk1vdmUiLCJoYW5kbGVNb3ZlIiwiZV9vbmNsaWNrIiwiaGFuZGxlQ2xpY2siLCJfdXBkYXRlU2l6ZSIsInVwZGF0ZVNpemUiLCJ2X3NpemUiLCJzZXRfc2l6ZSIsIm5ld1NpemUiLCJzaXplIiwibW92ZVgiLCJicnVzaFNpemUiLCJ3YXJuIiwiJCIsInF1ZXJ5IiwiJCQiLCJxdWVyeVNlbGVjdG9yQWxsIiwic3RvcmVkIiwibG9hZFByZXZpb3VzQ29sb3IiLCJsb2FkUHJldmlvdXNTaXplIiwiY29udHJvbE92ZXJsYXkiLCJfdXBkYXRlU2V0dGluZ3MiLCJ2X3NldHRpbmdzIiwic2V0X3NldHRpbmdzIiwic2V0dGluZ3NDaGFuZ2VkIiwiZV91cGRhdGVDb2xvciIsInNldENoYW5nZSIsImVfdXBkYXRlU2l6ZSIsImJ1dHRvbnMiLCJpbmNsdWRlcyIsIm5hdmlnYXRvciIsInBsYXRmb3JtIiwiZ2V0QnV0dG9ucyIsIm5ld1ZhbCIsInN0YXJ0RHJhd2luZyIsInNlcnZpY2VXb3JrZXIiLCJyZWdpc3RyYXRpb24iXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFT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Mk0sRUFBRSxHQUFHcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxHQUFHcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxHQUFHMk0sRUFBRSxHQUFHcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxHQUFHMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxFQUFFMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxFQUFFMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxFQUFFMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxHQUFHMk0sRUFBRSxJQUFJcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNwQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxFQUFFa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxFQUFFa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxHQUFHcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxHQUFHcEwsRUFBRSxHQUFHa0IsRUFBRSxHQUNuQixDQUFDekMsRUFBRSxJQUFJMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxHQUNyQixDQUFDekMsRUFBRSxHQUFHMk0sRUFBRSxJQUFJcEwsRUFBRSxJQUFJa0IsRUFBRSxJLE1D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QyxTRnRDbkR1VCxHQUFRLEdBQ1h3QyxLQUNBcUIsUUNMRyxDQUFDLFNBQVUsT0FBUSxRQUFRdUMsU0FBU0MsVUFBVUMsV0MrQ2pESCxFQUFRdFcsUUFNTG5DLEdBQUUsQ0FBRWpCLE1BQU8sMEJBQTJCNFIsS0FBTSxJQUFLRCxTQUFVLGNBQWV5QyxRQUFTMUMsR0FDdEZoVSxHQUFFLENBQUVzQyxNQUFPLGdDQUFpQ3FELFlBQWEsV0FMN0QsT0FBT3FXLEVBbkJISSxJQTRCUixTQUFTTixHQUFVdmEsR0FDZixPQUFPLFNBQWtCOGEsR0FDckIzWixLQUFLbkIsR0FBTzhhLEVBQ1oxUSxhQUFhMkIsUUFBUS9MLEVBQUtzRixLQUFLQyxVQUFVdVYsSUFDekMzWixLQUFLZ1osV0FBYSxJQUFJdk4sRUFBUXpMLEtBQUtzVSxRQUFTdFUsS0FBS2dZLE9BQVFoWSxLQUFLc1UsUUFBUXpULEdBQ3RFYixLQUFLK1ksbUJBSWIsU0FBU0csR0FBZ0J2SCxHQUNyQjNSLEtBQUtnWixXQUFhckgsRUFDbEIzUixLQUFLK1ksa0JYekRQbkssRUFBZSxDQUFFeE4sUUFBUzZLLEdBQWlCVSxFQUFLaU4sZ0IsS1lsQmhEZCxLQUFpQnJYLE9BQU9iLEdBQUUyWCxFQUFFLFNBS3hCLGtCQUFtQmlCLFVBQ3JCQSxVQUFVSyxjQUFjL0csU0FBUyxXQUFXMUosTUFBSyxTQUFDMFEsR0FDaER6TCxRQUFRQyxJQUFJLHlDQUEwQ3dMLE1BRHhELE9BR1MsU0FBVWpQLEdBQ2pCd0QsUUFBUUMsSUFBSSxzQ0FBdUN6RCxNQUdyRHdELFFBQVFDLElBQUkiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA1KTtcbiIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZWxlTWludFwiLFtdLHQpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuZWxlTWludD10KCk6ZS5lbGVNaW50PXQoKX0od2luZG93LChmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiBuKHIpe2lmKHRbcl0pcmV0dXJuIHRbcl0uZXhwb3J0czt2YXIgaT10W3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKGkuZXhwb3J0cyxpLGkuZXhwb3J0cyxuKSxpLmw9ITAsaS5leHBvcnRzfXJldHVybiBuLm09ZSxuLmM9dCxuLmQ9ZnVuY3Rpb24oZSx0LHIpe24ubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpyfSl9LG4ucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxuLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPW4oZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHI9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihuLnIociksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBpIGluIGUpbi5kKHIsaSxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLGkpKTtyZXR1cm4gcn0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCxcImFcIix0KSx0fSxuLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LG4ucD1cIlwiLG4obi5zPTApfShbZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO24ucih0KSxuLmQodCxcInJlZ2lzdGVyXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGh9KSksbi5kKHQsXCJvdmVycmlkZVwiLChmdW5jdGlvbigpe3JldHVybiBtfSkpLG4uZCh0LFwiZVwiLChmdW5jdGlvbigpe3JldHVybiB5fSkpLG4uZCh0LFwiZ2V0SGFuZGxlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KSk7Y29uc3Qgcj17Y2xhc3M6XCJjbGFzc05hbWVcIn0saT1cInRleHRDb250ZW50fGlubmVyVGV4dHxpbm5lckhUTUx8Y2xhc3NOYW1lfHZhbHVlfHN0eWxlXCIuc3BsaXQoXCJ8XCIpLnJlZHVjZSgoZSx0KT0+KGVbdF09MSxlKSx7fSksbz17fSxzPXthdHRhY2g6ZnVuY3Rpb24oZSl7dGhpcy5wYXJlbnRFbGVtZW50PWU7bGV0IHQ9dGhpcy5lbGVtO3R8fCh0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGhpcy50YWdOYW1lKSxlLmFwcGVuZENoaWxkKHQpKTtyZXR1cm4gdH0sYWRkRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbihlLHQpe2xldCBuPXRoaXM7dGhpcy5lbGVtLmFkZEV2ZW50TGlzdGVuZXIoZSwoZnVuY3Rpb24oZSl7dC5hcHBseShuLFtlLG4uZWxlbV0pfSkpfSxzZXRQcm9wOmZ1bmN0aW9uKGUsdCl7dGhpcy5lbGVtW2VdPXR9LGFkZEVtaXRIYW5kbGVyOmZ1bmN0aW9uKGUsdCl7dGhpc1tlXT10fSxzZXRBdHRyaWJ1dGU6ZnVuY3Rpb24oZSx0KXtsZXQgbj1yW2VdfHxlO2lmKCF0aGlzLmVsZW0pcmV0dXJuIHZvaWQodGhpcy5hdHRyW2VdPXQpOyFmdW5jdGlvbihlLHQsbil7bGV0IG89clt0XXx8dCxzPXAodCxcInZfXCIpLHU9cCh0LFwiX1wiKSxsPWUuZWxlbTtpZih1KXJldHVybiBlW29dPW4sbjt2YXIgYT17c2V0OihyLG8pPT57aWYobiE9PXJ8fG8pe2lmKHMpe2Uuc2V0VmlydHVhbCh0LHIpO2xldCBuPWU9PihlLnJlbmRlcmVkQ2hpbGRyZW58fFtdKS5yZWR1Y2UoKGUsdCk9PmUuY29uY2F0KFt0XSxuKHQpKSxbXSk7bihlKS5mb3JFYWNoKGU9PntpZighZS5oYXNPd25Qcm9wZXJ0eSh0KSlyZXR1cm47ZVt0XT1yO2xldCBuPXQucmVwbGFjZShcInZfXCIsXCJzZXRfXCIpO2Vbbl0mJmVbbl0uYXBwbHkoZSxbcl0pfSl9ZWxzZSBpW3RdfHxjKHIpP2Uuc2V0UHJvcCh0LHIpOmwuc2V0QXR0cmlidXRlKHQscik7bj1yfX0sZ2V0OigpPT5cInN0eWxlXCI9PT10JiZlLmVsZW1lbnQmJmUuZWxlbWVudC5zdHlsZXx8bn07T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbyxhKSxhLnNldChuLDEpLGVbb119KHRoaXMsbix0KX0sc2V0VmlydHVhbDpmdW5jdGlvbihlLHQpe30scmVuZGVyQ2hpbGRyZW46ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5tYXAodD0+KHQucmVuZGVyfHx2KFwiY2hpbGQgbXVzdCBoYXZlIHJlbmRlciBmdW5jdGlvblwiKSx0LnBhcmVudD10aGlzLHQucmVuZGVyKGUpKSl9LHByb2Nlc3NSZW5kZXI6ZnVuY3Rpb24oZSl7bGV0IHQ9dGhpcy5hdHRhY2goZSx0aGlzKTt0aGlzLmVsZW09dCx0aGlzLmVsZW1lbnQ9dCxmKHRoaXMsbC5BVFRBQ0gpLHRoaXMucmVuZGVyZWRDaGlsZHJlbj10aGlzLnJlbmRlckNoaWxkcmVuKHQsdGhpcy5jaGlsZHJlbik7Y29uc3Qgbj1lPT5wKGUsXCJlX1wiKXx8cChlLFwic2V0X1wiKTtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcy5hdHRyLl9fcHJvdG9fXykuZm9yRWFjaChlPT57bihlKSYmdGhpcy5hZGRFbWl0SGFuZGxlcihlLHRoaXMuYXR0cltlXSl9KSxPYmplY3Qua2V5cyh0aGlzLmF0dHIpLmZvckVhY2goZT0+e2xldCB0PXRoaXMuYXR0cltlXTtpZih1LmluZGV4T2YoZSk+LTF8fCFlKXJldHVybjtpZihwKGUsXCJvblwiKSlyZXR1cm4gdGhpcy5hZGRFdmVudExpc3RlbmVyKGUuc2xpY2UoMiksdCk7aWYobihlKSlyZXR1cm4gdGhpcy5hZGRFbWl0SGFuZGxlcihlLHQpO3RoaXMuc2V0QXR0cmlidXRlKGUsdCl9KSxmKHRoaXMsbC5SRU5ERVIpLHRoaXN9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMucmVuZGVyZWRDaGlsZHJlbi5mb3JFYWNoKGU9PmUucmVtb3ZlKCkpLG9bdGhpcy5oYW5kbGVdPW51bGw7bGV0IGU9dGhpcy5wYXJlbnRFbGVtZW50O2UmJmUhPT10aGlzLmVsZW0mJmUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtKTt0aGlzLnBhcmVudD1udWxsLHRoaXMucGFyZW50RWxlbWVudD1udWxsLGYodGhpcyxsLkRFU1RST1kpfSxlbWl0OmZ1bmN0aW9uKGUpe2lmKCF0aGlzLnBhcmVudClyZXR1cm47bGV0IHQ9YGVfJHtlfWAsbj1BcnJheS5mcm9tKGFyZ3VtZW50cyk7dGhpcy5wYXJlbnRbdF0mJnRoaXMucGFyZW50W3RdLmFwcGx5KHRoaXMucGFyZW50LG4uc2xpY2UoMSkpOyh0aGlzLnBhcmVudHx8e30pLmVtaXQmJnRoaXMucGFyZW50LmVtaXQuYXBwbHkodGhpcy5wYXJlbnQsbil9fSx1PVtcIm9uUmVuZGVyXCIsXCJvbkF0dGFjaFwiLFwib25EZXN0cm95XCJdLGw9e1JFTkRFUjp1WzBdLEFUVEFDSDp1WzFdLERFU1RST1k6dVsyXX0sYT1FKFwic3RyaW5nXCIpLGM9KEUoXCJ1bmRlZmluZWRcIiksRShcImJvb2xlYW5cIikpLGQ9ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIGYoZSx0KXtlLmF0dHJbdF0mJmUuYXR0clt0XS5jYWxsKGUpfWZ1bmN0aW9uIGgoZSx0KXtyZXR1cm4gZXx8dihcInRhZ05hbWUgbXVzdCBiZSBkZWZpbmVkXCIpLGZ1bmN0aW9uKG4pe249bnx8e307bGV0IHI9QXJyYXkuZnJvbShhcmd1bWVudHMpLnNsaWNlKDEpO3JldHVybiBuLnJlbmRlcnx8QXJyYXkuaXNBcnJheShuKSYmblswXS5yZW5kZXI/KHIudW5zaGlmdChuKSxuPXt9KTphKG4pP249e3RleHRDb250ZW50Om59OmEoclswXSkmJihuLnRleHRDb250ZW50PXJbMF0scj1yLnNsaWNlKDEpKSxPYmplY3QuYXNzaWduKHt0YWdOYW1lOmUsY2hpbGRyZW46W10uY29uY2F0LmFwcGx5KFtdLHIpLGF0dHI6bnx8e30scmVuZGVyOmZ1bmN0aW9uKGUpe2xldCB0PXRoaXMucHJvY2Vzc1JlbmRlcihlKTtyZXR1cm4gdGhpcy5oYW5kbGU9dGhpcy5oYW5kbGV8fHQuYXR0ci5pZHx8dC5hdHRyLl9pZHx8U3ltYm9sKHQudGFnTmFtZSksdC5lbGVtJiYodC5lbGVtLnJlbW92ZT10LnJlbW92ZSksb1t0aGlzLmhhbmRsZV09dCx0fX0sZC5wcm90b3R5cGUsdCl9fWZ1bmN0aW9uIHAoZSx0KXtyZXR1cm4gZS5zbGljZSgwLHQubGVuZ3RoKT09PXR9ZnVuY3Rpb24gbShlKXtyZXR1cm4gZnVuY3Rpb24odCxuKXtyZXR1cm4gaCh0LE9iamVjdC5hc3NpZ24oe30sZSxuKSl9fU9iamVjdC5rZXlzKHMpLmZvckVhY2goZT0+ZC5wcm90b3R5cGVbZV09c1tlXSk7Y29uc3QgeT1oO2Z1bmN0aW9uIGIoZSl7cmV0dXJuIG9bZV19ZnVuY3Rpb24gdihlKXt0aHJvdyBuZXcgRXJyb3IoZSl9ZnVuY3Rpb24gRShlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0PT09ZX19fV0pfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZWxlTWludC5taW4uanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKixcXG4qOmJlZm9yZSxcXG4qOmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgbWFyZ2luOiAwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiSGVsdmV0aWNhXFxcIjtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBjb2xvcjogcmdiKDcwLCA3MCwgNzApO1xcbn1cXG5cXG4jYXBwIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdG9wOiAwO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbn1cXG5cXG4uY2FudmFzIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIG1hcmdpbjogYXV0bztcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICB6LWluZGV4OiAzO1xcbn1cXG5cXG4uY2FudmFzLmJhc2Uge1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi8qIFJ1bGVzIGZvciBzaXppbmcgdGhlIGljb24uICovXFxuLm1hdGVyaWFsLWljb25zLm1kLTEzIHtcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG59XFxuLm1hdGVyaWFsLWljb25zLm1kLTE4IHtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG59XFxuLm1hdGVyaWFsLWljb25zLm1kLTI0IHtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG59XFxuLm1hdGVyaWFsLWljb25zLm1kLTM2IHtcXG4gIGZvbnQtc2l6ZTogMzZweDtcXG59XFxuLm1hdGVyaWFsLWljb25zLm1kLTQ4IHtcXG4gIGZvbnQtc2l6ZTogNDhweDtcXG59XFxuXFxuLyogUnVsZXMgZm9yIHVzaW5nIGljb25zIGFzIGJsYWNrIG9uIGEgbGlnaHQgYmFja2dyb3VuZC4gKi9cXG4ubWF0ZXJpYWwtaWNvbnMubWQtZGFyayB7XFxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTtcXG59XFxuLm1hdGVyaWFsLWljb25zLm1kLWRhcmsubWQtaW5hY3RpdmUge1xcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7XFxufVxcblxcbi8qIFJ1bGVzIGZvciB1c2luZyBpY29ucyBhcyB3aGl0ZSBvbiBhIGRhcmsgYmFja2dyb3VuZC4gKi9cXG4ubWF0ZXJpYWwtaWNvbnMubWQtbGlnaHQge1xcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC1saWdodC5tZC1pbmFjdGl2ZSB7XFxuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xcbn1cXG5cXG4uYnRuIHtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICBwYWRkaW5nOiA3cHggMjBweDtcXG4gIGJvcmRlcjogc29saWQgMXB4IHJnYmEoMTIwLCAxMjAsIDEyMCwgMC4zKTtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggMTBweCAzcHggcmdiYSgxNjQsIDE2NCwgMTY1LCAwLjMpO1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuLmNpcmNsZSB7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcblxcbi5idG4uY2lyY2xlIHtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIHdpZHRoOiA1NXB4O1xcbiAgaGVpZ2h0OiA1NXB4O1xcbiAgcGFkZGluZzogN3B4IDVweCA1cHggNXB4O1xcbn1cXG5cXG4uby1yZWxhdGl2ZSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5vLWFic29sdXRlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuXFxuLm8tZml4ZWQge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cXG4uby1oaWRlIHtcXG4gIG9wYWNpdHk6IDA7XFxufVxcblxcbi5vLW1hcmdpbi0tYXV0byB7XFxuICBtYXJnaW46IGF1dG87XFxufVxcblxcbi5vLW1hcmdpbi0tdi1hdXRvIHtcXG4gIG1hcmdpbi10b3A6IGF1dG87XFxuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcbn1cXG4uby1tYXJnaW4tLXQtYXV0byB7XFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcbn1cXG5cXG4uby1tYXJnaW4tLWgtYXV0byB7XFxuICBtYXJnaW4tbGVmdDogYXV0bztcXG4gIG1hcmdpbi1yaWdodDogYXV0bztcXG59XFxuXFxuLm8tbWFyZ2luLS1iLTIwIHtcXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XFxufVxcblxcbi5vLWZsZXgge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuLm8tZmxleC0tc3BhY2UtYnR3IHtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLm8tZmxleC0tY29sdW1uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uby1ub25lLFxcbi5vLW5vbmUuby1mbGV4IHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5vLW5vbmUuYWN0aXZlIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG4uby1ub25lLm8tZmxleC5hY3RpdmUge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLm8tYmtnLS1ibGFjayB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xcbn1cXG5cXG4uby13aWR0aC0tMTAwIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uby1oZWlnaHQtLTEwMCB7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcblxcbi5vLXdpZHRoLS04MCB7XFxuICB3aWR0aDogODAlO1xcbn1cXG5cXG4uby1oZWlnaHQtLTgwIHtcXG4gIGhlaWdodDogODAlO1xcbn1cXG5cXG4uby13aWR0aC0tMjAge1xcbiAgd2lkdGg6IDIwJTtcXG59XFxuXFxuLm8taGVpZ2h0LS0yMCB7XFxuICBoZWlnaHQ6IDIwJTtcXG59XFxuXFxuLm8taGlkZS5hY3RpdmUge1xcbiAgb3BhY2l0eTogMTtcXG59XFxuXFxuLmMtZHJhZy1vdmVybGF5IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDM7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XFxufVxcbi5jLWRyYWctb3ZlcmxheSA+ICoge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmMtZHJhZy1vdmVybGF5LmFjdGl2ZSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB6LWluZGV4OiA1O1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyMCwgMTIwLCAxMjAsIDAuNSk7XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbn1cXG5cXG4uYy1kcmFnLW92ZXJsYXkuYWN0aXZlID4gKiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLmMtb3ZlcmxheS1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBsZWZ0OiAwO1xcbiAgei1pbmRleDogNDtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4uYy1lZGl0aW5nLWJ1dHRvbnMge1xcbiAgei1pbmRleDogMTA7XFxuICB3aWR0aDogNjBweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgcmlnaHQ6IDE1cHg7XFxuICBib3R0b206IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmMtZWRpdGluZy1idXR0b25zIC5idG4ge1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG59XFxuXFxuLyoqIEJydXNoIHNpemUgYnV0dG9uKiovXFxuLmJydXNoLXNpemUtYnRuIHtcXG4gIHBhZGRpbmc6IDVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMjAsIDEyMCwgMTIwKTtcXG59XFxuLmJydXNoLXNpemUtYnRuIC5tZC0xOCB7XFxuICBtYXJnaW4tbGVmdDogNnB4O1xcbn1cXG4uYnJ1c2gtc2l6ZS1idG4gLm1kLTM2IHtcXG4gIG1hcmdpbi1sZWZ0OiAtMTJweDtcXG59XFxuLmJydXNoLXNpemUtYnRuLmFjdGl2ZSB7XFxuICB6LWluZGV4OiA0O1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICBwYWRkaW5nLXRvcDogNnB4O1xcbn1cXG5cXG4uYy1icnVzaC1zaXplX19lZGl0aW5nLW92ZXJsYXkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBhZGRpbmc6IDM1cHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG59XFxuXFxuLmMtYnJ1c2gtc2l6ZV9faW5kaWNhdG9yLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAxODBweCk7XFxuICBsZWZ0OiAyMHB4O1xcbiAgYm90dG9tOiA0MHB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG59XFxuXFxuLmMtYnJ1c2gtc2l6ZV9faW5kaWNhdG9yIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNTBweDtcXG59XFxuXFxuLmMtYnJ1c2gtc2l6ZV9faW5kaWNhdG9yLWxpbmUge1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAycHg7XFxuICBib3JkZXItcmFkaXVzOiAxcHg7XFxufVxcblxcbi5jLWJydXNoLXNpemVfX2RyYWctYXJyb3dzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICB3aWR0aDogODBweDtcXG4gIHJpZ2h0OiA4MHB4O1xcbiAgYm90dG9tOiAxNXB4O1xcbiAgaGVpZ2h0OiA1MHB4O1xcbn1cXG5cXG4uZG93bmxvYWQtYnRuIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxNXB4O1xcbiAgdG9wOiAxNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwMiwgMTg3LCAxMDYpO1xcbn1cXG5cXG4uZG93bmxvYWQtYnRuIGkge1xcbiAgbWFyZ2luOiAycHggMCAwIDNweDtcXG59XFxuXFxuLmRvd25sb2FkLWJ0bjpob3ZlcixcXG4uZG93bmxvYWQtYnRuOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig3NiwgMTc1LCA4MCk7XFxufVxcblxcbi5jbGVhci1idG4ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwMCwgODAsIDgwKTtcXG59XFxuLmNsZWFyLWJ0bjpob3ZlcixcXG4uY2xlYXItYnRuOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCA4MCwgODAsIDAuODUpO1xcbn1cXG5cXG4udW5kby1idG4ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyMCwgMTIwLCAxMjApO1xcbn1cXG4udW5kby1idG46aG92ZXIsXFxuLnVuZG8tYnRuOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIwLCAxMjAsIDEyMCwgMC44NSk7XFxufVxcblxcbi8qIFxcbi5jb2xvci1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDgwcHg7XFxuICBoZWlnaHQ6IDYwcHg7XFxuICBib3R0b206IDVweDtcXG4gIHdpZHRoOiAwO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjM1cywgb3BhY2l0eSAwLjg1cyBlYXNlLW91dDtcXG4gIG9wYWNpdHk6IDA7XFxufVxcblxcbi5jb2xvci1jb250YWluZXIuYWN0aXZlIHtcXG4gIG9wYWNpdHk6IDE7XFxuICB3aWR0aDogY2FsYygxMDB2dyAtIDgwcHgpO1xcbiAgdHJhbnNpdGlvbjogd2lkdGggMC4zNXMsIG9wYWNpdHkgMC4wNXMgZWFzZS1pbjtcXG59XFxuXFxuLmlubmVyLWNvbG9yLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogODBweDtcXG4gIGhlaWdodDogNjBweDtcXG4gIGJvdHRvbTogMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgcGFkZGluZzogMTBweDtcXG4gIG9wYWNpdHk6IDE7XFxuICB6LWluZGV4OiAwO1xcbn0gKi9cXG5cXG4udW5kby1idG46aG92ZXIsXFxuLnVuZG8tYnRuOmZvY3VzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIwLCAxMjAsIDEyMCwgMC44NSk7XFxufVxcblxcbi8qKiBtb2RhbCAqKi9cXG5cXG4uYy1tb2RhbCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIHotaW5kZXg6IDEwO1xcbiAgLyogb3BhY2l0eTogMDsgKi9cXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMnMgZWFzZS1pbjtcXG59XFxuLyogLmMtbW9kYWw6bm90KDplbXB0eSkge1xcbiAgb3BhY2l0eTogMTtcXG59ICovXFxuXFxuLmMtbW9kYWxfX292ZXJsYXkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjAsIDEyMCwgMTIwLCAwLjgpO1xcbn1cXG4uYy1tb2RhbF9faW5uZXItY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIHdpZHRoOiA0MDBweDtcXG4gIGhlaWdodDogNTAwcHg7XFxuICBtYXgtd2lkdGg6IDc5JTtcXG4gIG1heC1oZWlnaHQ6IDk1JTtcXG59XFxuLmMtbW9kYWxfX2NvbnRlbnQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDYwcHgpO1xcbn1cXG4uYy1tb2RhbF9fYnRuLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5jLW1vZGFsX19idG4tY2xvc2Uge1xcbiAgYm94LXNoYWRvdzogbm9uZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogMDtcXG4gIGhlaWdodDogNjBweDtcXG4gIC8qICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0MCw5MCwxOTAsIC41KSAqL1xcbn1cXG5cXG4vKiogVGFicyAqKi9cXG5cXG4uYy10YWItbGF5b3V0IHtcXG4gIG1heC1oZWlnaHQ6IDEwMCU7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X19jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X19idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmMtdGFiLWxheW91dF9fdGFiIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5jLXRhYi1sYXlvdXRfX3RhYi5hY3RpdmUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X19idXR0b24ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZ3JvdzogMTtcXG4gIG1hcmdpbjogMDtcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgYm9yZGVyOiBub25lO1xcbiAgcGFkZGluZzogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTAsIDkwLCA5MCwgMC4yKTtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jLXRhYi1sYXlvdXRfX2J1dHRvbiB7XFxuICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCByZ2JhKDcwLCA3MCwgMTAwLCAwLjUpO1xcbn1cXG4uYy10YWItbGF5b3V0X19idXR0b246bGFzdC1jaGlsZCB7XFxuICBib3JkZXItcmlnaHQ6IG5vbmU7XFxufVxcblxcbi5jLXRhYi1sYXlvdXRfX2J1dHRvbi5hY3RpdmUge1xcbiAgLyogICBib3JkZXItdG9wOiBzb2xpZCA1cHggcmdiKDk1LCAxNTEsIDIyNCk7ICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbn1cXG4vKiogY29sb3IgcGlja2VyICoqL1xcblxcbi5jLWNvbG9yLXBpY2tlcl9fdGFicyB7XFxuICBtaW4td2lkdGg6IDI1MHB4O1xcbiAgbWluLWhlaWdodDogMzUwcHg7XFxuICBtYXgtaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4uYy1jb2xvci1waWNrZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIG1hcmdpbjogMTBweCBhdXRvO1xcbn1cXG5cXG4uYy1jb2xvci1waWNrZXJfX2Rpc3BsYXkge1xcbiAgd2lkdGg6IDEzMHB4O1xcbiAgaGVpZ2h0OiA5MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggMTBweCAzcHggcmdiYSgxNjQsIDE2NCwgMTY1LCAwLjMpO1xcbiAgYm9yZGVyOiBzb2xpZCAxcHggcmdiYSgxMjAsIDEyMCwgMTIwLCAwLjMpO1xcbiAgbWFyZ2luOiAxMHB4IGF1dG87XFxufVxcblxcbi5jLWNvbG9yLXBpY2tlcl9fc2xpZGVycyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbjogNXB4IGF1dG87XFxufVxcblxcbi5jLWNvbG9yLXBpY2tlcl9fcmFuZ2UtbGFiZWwge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5jLWNvbG9yLXBpY2tlcl9fcmFuZ2Uge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICB3aWR0aDogMjAwcHg7XFxufVxcblxcbi8qKiBTd2F0Y2hlcyAqKi9cXG5cXG4uYy1jb2xvci1zd2F0Y2hlc19fY29udGFpbmVyIHtcXG4gIG1hcmdpbjogMTBweCBhdXRvO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLmMtY29sb3Itc3dhdGNoZXMge1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxuICBtYXgtaGVpZ2h0OiAyNzBweDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBhZGRpbmc6IDVweCAyMHB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxufVxcblxcbi5jLWNvbG9yLXN3YXRjaGVzIC5idG4ge1xcbiAgbWFyZ2luOiA1cHg7XFxufVxcblxcbi50eHQge1xcbiAgZm9udC1mYW1pbHk6IEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5oZGcge1xcbiAgZm9udC1mYW1pbHk6IEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XFxufVxcblxcbi5oZGctLTEge1xcbiAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cXG4uaGRnLS0yIHtcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcbn1cXG5cXG4uaGRnLS0zIHtcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vYXBwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0VBR0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxnQkFBZ0I7RUFDaEIsd0JBQXdCO0VBQ3hCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sWUFBWTtFQUNaLE9BQU87RUFDUCxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsTUFBTTtFQUNOLE9BQU87RUFDUCxZQUFZO0VBQ1osYUFBYTtFQUNiLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUEsK0JBQStCO0FBQy9CO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQSwwREFBMEQ7QUFDMUQ7RUFDRSwwQkFBMEI7QUFDNUI7QUFDQTtFQUNFLDBCQUEwQjtBQUM1Qjs7QUFFQSx5REFBeUQ7QUFDekQ7RUFDRSw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLCtCQUErQjtBQUNqQzs7QUFFQTtF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Q0E7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSwrQ0FBK0M7RUFDL0Msc0JBQXNCO0FBQ3hCO0FBQ0EsbUJBQW1COztBQUVuQjtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIscURBQXFEO0VBQ3JELDBDQUEwQztFQUMxQyxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLFlBQVk7QUFDZDs7QUFFQSxlQUFlOztBQUVmO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UseUNBQXlDO0VBQ3pDLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5Q0FBeUM7QUFDM0M7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiosXFxuKjpiZWZvcmUsXFxuKjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5ib2R5IHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIG1hcmdpbjogMDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBmb250LWZhbWlseTogXFxcIkhlbHZldGljYVxcXCI7XFxuICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbmJ1dHRvbiB7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgY29sb3I6IHJnYig3MCwgNzAsIDcwKTtcXG59XFxuXFxuI2FwcCB7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGxlZnQ6IDA7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG59XFxuXFxuLmNhbnZhcyB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBtYXJnaW46IGF1dG87XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgei1pbmRleDogMztcXG59XFxuXFxuLmNhbnZhcy5iYXNlIHtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4vKiBSdWxlcyBmb3Igc2l6aW5nIHRoZSBpY29uLiAqL1xcbi5tYXRlcmlhbC1pY29ucy5tZC0xMyB7XFxuICBmb250LXNpemU6IDEzcHg7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC0xOCB7XFxuICBmb250LXNpemU6IDE4cHg7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC0yNCB7XFxuICBmb250LXNpemU6IDI0cHg7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC0zNiB7XFxuICBmb250LXNpemU6IDM2cHg7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC00OCB7XFxuICBmb250LXNpemU6IDQ4cHg7XFxufVxcblxcbi8qIFJ1bGVzIGZvciB1c2luZyBpY29ucyBhcyBibGFjayBvbiBhIGxpZ2h0IGJhY2tncm91bmQuICovXFxuLm1hdGVyaWFsLWljb25zLm1kLWRhcmsge1xcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XFxufVxcbi5tYXRlcmlhbC1pY29ucy5tZC1kYXJrLm1kLWluYWN0aXZlIHtcXG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjYpO1xcbn1cXG5cXG4vKiBSdWxlcyBmb3IgdXNpbmcgaWNvbnMgYXMgd2hpdGUgb24gYSBkYXJrIGJhY2tncm91bmQuICovXFxuLm1hdGVyaWFsLWljb25zLm1kLWxpZ2h0IHtcXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xcbn1cXG4ubWF0ZXJpYWwtaWNvbnMubWQtbGlnaHQubWQtaW5hY3RpdmUge1xcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcXG59XFxuXFxuLmJ0biB7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgcGFkZGluZzogN3B4IDIwcHg7XFxuICBib3JkZXI6IHNvbGlkIDFweCByZ2JhKDEyMCwgMTIwLCAxMjAsIDAuMyk7XFxuICBib3gtc2hhZG93OiAzcHggM3B4IDEwcHggM3B4IHJnYmEoMTY0LCAxNjQsIDE2NSwgMC4zKTtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5jaXJjbGUge1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbn1cXG5cXG4uYnRuLmNpcmNsZSB7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB3aWR0aDogNTVweDtcXG4gIGhlaWdodDogNTVweDtcXG4gIHBhZGRpbmc6IDdweCA1cHggNXB4IDVweDtcXG59XFxuXFxuLm8tcmVsYXRpdmUge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uby1hYnNvbHV0ZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxufVxcblxcbi5vLWZpeGVkIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuXFxuLm8taGlkZSB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uby1tYXJnaW4tLWF1dG8ge1xcbiAgbWFyZ2luOiBhdXRvO1xcbn1cXG5cXG4uby1tYXJnaW4tLXYtYXV0byB7XFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgbWFyZ2luLWJvdHRvbTogYXV0bztcXG59XFxuLm8tbWFyZ2luLS10LWF1dG8ge1xcbiAgbWFyZ2luLXRvcDogYXV0bztcXG59XFxuXFxuLm8tbWFyZ2luLS1oLWF1dG8ge1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxufVxcblxcbi5vLW1hcmdpbi0tYi0yMCB7XFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcbn1cXG5cXG4uby1mbGV4IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcbi5vLWZsZXgtLXNwYWNlLWJ0dyB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5vLWZsZXgtLWNvbHVtbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLm8tbm9uZSxcXG4uby1ub25lLm8tZmxleCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG4uby1ub25lLmFjdGl2ZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuLm8tbm9uZS5vLWZsZXguYWN0aXZlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5vLWJrZy0tYmxhY2sge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcXG59XFxuXFxuLm8td2lkdGgtLTEwMCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLm8taGVpZ2h0LS0xMDAge1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4uby13aWR0aC0tODAge1xcbiAgd2lkdGg6IDgwJTtcXG59XFxuXFxuLm8taGVpZ2h0LS04MCB7XFxuICBoZWlnaHQ6IDgwJTtcXG59XFxuXFxuLm8td2lkdGgtLTIwIHtcXG4gIHdpZHRoOiAyMCU7XFxufVxcblxcbi5vLWhlaWdodC0tMjAge1xcbiAgaGVpZ2h0OiAyMCU7XFxufVxcblxcbi5vLWhpZGUuYWN0aXZlIHtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbi5jLWRyYWctb3ZlcmxheSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB6LWluZGV4OiAzO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbn1cXG4uYy1kcmFnLW92ZXJsYXkgPiAqIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5jLWRyYWctb3ZlcmxheS5hY3RpdmUge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogNTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjAsIDEyMCwgMTIwLCAwLjUpO1xcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuXFxuLmMtZHJhZy1vdmVybGF5LmFjdGl2ZSA+ICoge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5jLW92ZXJsYXktY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgbGVmdDogMDtcXG4gIHotaW5kZXg6IDQ7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuXFxuLmMtZWRpdGluZy1idXR0b25zIHtcXG4gIHotaW5kZXg6IDEwO1xcbiAgd2lkdGg6IDYwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHJpZ2h0OiAxNXB4O1xcbiAgYm90dG9tOiAxNXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5jLWVkaXRpbmctYnV0dG9ucyAuYnRuIHtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxufVxcblxcbi8qKiBCcnVzaCBzaXplIGJ1dHRvbioqL1xcbi5icnVzaC1zaXplLWJ0biB7XFxuICBwYWRkaW5nOiA1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIwLCAxMjAsIDEyMCk7XFxufVxcbi5icnVzaC1zaXplLWJ0biAubWQtMTgge1xcbiAgbWFyZ2luLWxlZnQ6IDZweDtcXG59XFxuLmJydXNoLXNpemUtYnRuIC5tZC0zNiB7XFxuICBtYXJnaW4tbGVmdDogLTEycHg7XFxufVxcbi5icnVzaC1zaXplLWJ0bi5hY3RpdmUge1xcbiAgei1pbmRleDogNDtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgcGFkZGluZy10b3A6IDZweDtcXG59XFxuXFxuLmMtYnJ1c2gtc2l6ZV9fZWRpdGluZy1vdmVybGF5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nOiAzNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbjogYXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxufVxcblxcbi5jLWJydXNoLXNpemVfX2luZGljYXRvci1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogY2FsYygxMDAlIC0gMTgwcHgpO1xcbiAgbGVmdDogMjBweDtcXG4gIGJvdHRvbTogNDBweDtcXG4gIGhlaWdodDogMTAwcHg7XFxufVxcblxcbi5jLWJydXNoLXNpemVfX2luZGljYXRvciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDUwcHg7XFxufVxcblxcbi5jLWJydXNoLXNpemVfX2luZGljYXRvci1saW5lIHtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMnB4O1xcbiAgYm9yZGVyLXJhZGl1czogMXB4O1xcbn1cXG5cXG4uYy1icnVzaC1zaXplX19kcmFnLWFycm93cyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgd2lkdGg6IDgwcHg7XFxuICByaWdodDogODBweDtcXG4gIGJvdHRvbTogMTVweDtcXG4gIGhlaWdodDogNTBweDtcXG59XFxuXFxuLmRvd25sb2FkLWJ0biB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMTVweDtcXG4gIHRvcDogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDIsIDE4NywgMTA2KTtcXG59XFxuXFxuLmRvd25sb2FkLWJ0biBpIHtcXG4gIG1hcmdpbjogMnB4IDAgMCAzcHg7XFxufVxcblxcbi5kb3dubG9hZC1idG46aG92ZXIsXFxuLmRvd25sb2FkLWJ0bjpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNzYsIDE3NSwgODApO1xcbn1cXG5cXG4uY2xlYXItYnRuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDAsIDgwLCA4MCk7XFxufVxcbi5jbGVhci1idG46aG92ZXIsXFxuLmNsZWFyLWJ0bjpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMCwgODAsIDgwLCAwLjg1KTtcXG59XFxuXFxuLnVuZG8tYnRuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMjAsIDEyMCwgMTIwKTtcXG59XFxuLnVuZG8tYnRuOmhvdmVyLFxcbi51bmRvLWJ0bjpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyMCwgMTIwLCAxMjAsIDAuODUpO1xcbn1cXG5cXG4vKiBcXG4uY29sb3ItY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiA4MHB4O1xcbiAgaGVpZ2h0OiA2MHB4O1xcbiAgYm90dG9tOiA1cHg7XFxuICB3aWR0aDogMDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdHJhbnNpdGlvbjogd2lkdGggMC4zNXMsIG9wYWNpdHkgMC44NXMgZWFzZS1vdXQ7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uY29sb3ItY29udGFpbmVyLmFjdGl2ZSB7XFxuICBvcGFjaXR5OiAxO1xcbiAgd2lkdGg6IGNhbGMoMTAwdncgLSA4MHB4KTtcXG4gIHRyYW5zaXRpb246IHdpZHRoIDAuMzVzLCBvcGFjaXR5IDAuMDVzIGVhc2UtaW47XFxufVxcblxcbi5pbm5lci1jb2xvci1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDgwcHg7XFxuICBoZWlnaHQ6IDYwcHg7XFxuICBib3R0b206IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBvcGFjaXR5OiAxO1xcbiAgei1pbmRleDogMDtcXG59ICovXFxuXFxuLnVuZG8tYnRuOmhvdmVyLFxcbi51bmRvLWJ0bjpmb2N1cyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyMCwgMTIwLCAxMjAsIDAuODUpO1xcbn1cXG5cXG4vKiogbW9kYWwgKiovXFxuXFxuLmMtbW9kYWwge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICB6LWluZGV4OiAxMDtcXG4gIC8qIG9wYWNpdHk6IDA7ICovXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDJzIGVhc2UtaW47XFxufVxcbi8qIC5jLW1vZGFsOm5vdCg6ZW1wdHkpIHtcXG4gIG9wYWNpdHk6IDE7XFxufSAqL1xcblxcbi5jLW1vZGFsX19vdmVybGF5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIwLCAxMjAsIDEyMCwgMC44KTtcXG59XFxuLmMtbW9kYWxfX2lubmVyLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbjogYXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICB3aWR0aDogNDAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgbWF4LXdpZHRoOiA3OSU7XFxuICBtYXgtaGVpZ2h0OiA5NSU7XFxufVxcbi5jLW1vZGFsX19jb250ZW50IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA2MHB4KTtcXG59XFxuLmMtbW9kYWxfX2J0bi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG4uYy1tb2RhbF9fYnRuLWNsb3NlIHtcXG4gIGJveC1zaGFkb3c6IG5vbmU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBoZWlnaHQ6IDYwcHg7XFxuICAvKiAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDAsOTAsMTkwLCAuNSkgKi9cXG59XFxuXFxuLyoqIFRhYnMgKiovXFxuXFxuLmMtdGFiLWxheW91dCB7XFxuICBtYXgtaGVpZ2h0OiAxMDAlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLmMtdGFiLWxheW91dF9fY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLmMtdGFiLWxheW91dF9fYnV0dG9uLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5jLXRhYi1sYXlvdXRfX3RhYiB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X190YWIuYWN0aXZlIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLmMtdGFiLWxheW91dF9fYnV0dG9uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWdyb3c6IDE7XFxuICBtYXJnaW46IDA7XFxuICBsaW5lLWhlaWdodDogMjBweDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIHBhZGRpbmc6IDE1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDkwLCA5MCwgOTAsIDAuMik7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X19idXR0b24ge1xcbiAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAxcHggcmdiYSg3MCwgNzAsIDEwMCwgMC41KTtcXG59XFxuLmMtdGFiLWxheW91dF9fYnV0dG9uOmxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xcbn1cXG5cXG4uYy10YWItbGF5b3V0X19idXR0b24uYWN0aXZlIHtcXG4gIC8qICAgYm9yZGVyLXRvcDogc29saWQgNXB4IHJnYig5NSwgMTUxLCAyMjQpOyAqL1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG59XFxuLyoqIGNvbG9yIHBpY2tlciAqKi9cXG5cXG4uYy1jb2xvci1waWNrZXJfX3RhYnMge1xcbiAgbWluLXdpZHRoOiAyNTBweDtcXG4gIG1pbi1oZWlnaHQ6IDM1MHB4O1xcbiAgbWF4LWhlaWdodDogMTAwJTtcXG59XFxuXFxuLmMtY29sb3ItcGlja2VyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDEwcHggYXV0bztcXG59XFxuXFxuLmMtY29sb3ItcGlja2VyX19kaXNwbGF5IHtcXG4gIHdpZHRoOiAxMzBweDtcXG4gIGhlaWdodDogOTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XFxuICBib3gtc2hhZG93OiAzcHggM3B4IDEwcHggM3B4IHJnYmEoMTY0LCAxNjQsIDE2NSwgMC4zKTtcXG4gIGJvcmRlcjogc29saWQgMXB4IHJnYmEoMTIwLCAxMjAsIDEyMCwgMC4zKTtcXG4gIG1hcmdpbjogMTBweCBhdXRvO1xcbn1cXG5cXG4uYy1jb2xvci1waWNrZXJfX3NsaWRlcnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBtYXJnaW46IDVweCBhdXRvO1xcbn1cXG5cXG4uYy1jb2xvci1waWNrZXJfX3JhbmdlLWxhYmVsIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uYy1jb2xvci1waWNrZXJfX3JhbmdlIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgaGVpZ2h0OiAyMHB4O1xcbiAgd2lkdGg6IDIwMHB4O1xcbn1cXG5cXG4vKiogU3dhdGNoZXMgKiovXFxuXFxuLmMtY29sb3Itc3dhdGNoZXNfX2NvbnRhaW5lciB7XFxuICBtYXJnaW46IDEwcHggYXV0bztcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5jLWNvbG9yLXN3YXRjaGVzIHtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbiAgbWF4LWhlaWdodDogMjcwcHg7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwYWRkaW5nOiA1cHggMjBweDtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbn1cXG5cXG4uYy1jb2xvci1zd2F0Y2hlcyAuYnRuIHtcXG4gIG1hcmdpbjogNXB4O1xcbn1cXG5cXG4udHh0IHtcXG4gIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG5cXG4uaGRnIHtcXG4gIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4uaGRnLS0xIHtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG59XFxuXFxuLmhkZy0tMiB7XFxuICBmb250LXNpemU6IDEuNXJlbTtcXG59XFxuXFxuLmhkZy0tMyB7XFxuICBmb250LXNpemU6IDEuM3JlbTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIFNldHRpbmcgbWF4IHNpemUgdG8gMyBtYnMgc2luY2UgbGltaXQgaXMgb2Z0ZW4gNW1icywgXG4vLyB0aGlzIHdpbGwgYWxsb3cgbG9jYWwgc3RvcmFnZSB0byBzdGlsbCBiZSB1c2VkIGZvciBvdGhlciBwdXJwb3Nlcy5cbmNvbnN0IE1BWF9DQUNIRV9TSVpFID0gMyAqICgxMDI0ICogMTAyNClcblxuXG5leHBvcnQgY2xhc3MgTG9jYWxTdG9yZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zdG9yYWdlID0gbG9jYWxTdG9yYWdlXG4gIH1cblxuICAvKipcbiAgICogUGVyc2lzdHMgdGhlIGlucHV0IHNlc3Npb24gdG8gcGVyc2lzdGVudCBzdG9yYWdlLlxuICAgKi9cbiAgc2F2ZShrZXksIHRoZVZhbHVlKSB7XG4gICAgcmV0dXJuIHRoaXMudmVyaWZ5U3RvcmFnZSgpXG4gICAgICAudGhlbigoKSA9PiB0aGlzLnNlcmlhbGl6ZSh0aGVWYWx1ZSkpXG4gICAgICAudGhlbihzZXJpYWxpemVkID0+IHRoaXMuaW5zZXJ0KGtleSwgc2VyaWFsaXplZCkpXG4gIH1cblxuICAvKipcbiAgICogTG9hZCBmcm9tIGxvY2FsIG9yIHNlc3Npb24gc3RvcmFnZSB3aXRoIGtleVxuICAgKiBSZXR1cm46IG51bGwgaWYgbm90aGluZyBmb3VuZCBvciBjb3VsZG5cInQgbG9hZFxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFxuICAgKiBAcmV0dXJucyBcbiAgICogQG1lbWJlcm9mIExvY2FsU3RvcmVcbiAgICovXG4gIGxvYWQoa2V5KSB7XG4gICAgcmV0dXJuIHRoaXMudmVyaWZ5U3RvcmFnZSgpXG4gICAgICAudGhlbigoKSA9PiB0aGlzLnN0b3JhZ2UuZ2V0SXRlbShrZXkpKVxuICAgICAgLnRoZW4odmFsID0+IHtcbiAgICAgICAgaWYgKCF2YWwpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmRlc2VyaWFsaXplKHZhbClcbiAgICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgbG9jYWwgU3RvcmFnZVxuICAgKiBcbiAgICogQHJldHVybnMgXG4gICAqIEBtZW1iZXJvZiBMb2NhbFN0b3JlXG4gICAqL1xuICBjbGVhcigpIHtcbiAgICB0aGlzLnN0b3JhZ2UuY2xlYXIoKVxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuICB9XG5cbiAgcmVtb3ZlKGtleSkge1xuICAgIHRoaXMuc3RvcmFnZS5yZW1vdmVJdGVtKGtleSlcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpXG4gIH1cblxuICBnZXRLZXlzKCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoT2JqZWN0LmtleXModGhpcy5zdG9yYWdlKSlcbiAgfVxuXG4gIHZlcmlmeVN0b3JhZ2UoKSB7XG4gICAgaWYgKCF0aGlzLnN0b3JhZ2UpIHtcbiAgICAgIC8vIG5vIHN0b3JhZ2UsIHdlIGNhblwidCBkb25cInQgZG8gYW55dGhpbmcuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXCJsb2NhbFN0b3JhZ2UgaXMgbm90IGF2YWlsYWJsZVwiKVxuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcbiAgfVxuXG4gIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgIGlmICh0aGlzLmlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUudG9JU09TdHJpbmcoKTtcbiAgICB9XG4gICAgLy8gZW5zdXJpbmcgdGhlIHN0b3JlZCBvYmplY3QgaXMgdHlwZSBzdHJpbmcsIG9yIGVsc2UgY29udmVydC5cbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyB3b250IGhhbmRsZSByZWN1cnNpdmUgb2JqZWN0cywgcmVjdXJzaXZlIG9iamVjdHMgc2hvdWxkIG5vdCBiZSBzdG9yZWQuXG4gICAgICB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIGRlc2VyaWFsaXplKGZvdW5kKSB7XG4gICAgLy8gUGFyc2UgdG8gYW4gb2JqZWN0fGFycmF5IGlmIGl0IGhhcyBvYmplY3R8YXJyYXkgc3ludGF4XG4gICAgaWYgKGZvdW5kICYmIChmb3VuZC5pbmRleE9mKFwie1wiKSA+IC0xIHx8IGZvdW5kLmluZGV4T2YoXCJbXCIpID4gLTEpKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRPYmplY3RQcm9wcyhKU09OLnBhcnNlKGZvdW5kKSlcbiAgICAgIC8vIFBhcnNlIGJvb2xlYW5cbiAgICB9IGVsc2UgaWYgKGZvdW5kID09PSBcInRydWVcIiB8fCBmb3VuZCA9PT0gXCJmYWxzZVwiKSB7XG4gICAgICByZXR1cm4gKGZvdW5kID09PSBcInRydWVcIikgPyB0cnVlIDogZmFsc2VcbiAgICB9IGVsc2UgaWYgKCFpc05hTihOdW1iZXIoZm91bmQpKSkge1xuICAgICAgcmV0dXJuIE51bWJlcihmb3VuZClcbiAgICB9IGVsc2UgaWYgKHRoaXMuaXNTZXJpYWxpemVkRGF0ZShmb3VuZCkpIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbnZlcnRUb0RhdGUoZm91bmQpXG4gICAgfSBlbHNlIGlmIChmb3VuZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICAgIHJldHVybiBmb3VuZFxuICB9XG5cbiAgZ2V0T2JqZWN0UHJvcHMob2JqKSB7XG4gICAgT2JqZWN0LmtleXMob2JqKS5tYXAoKGtleSkgPT4ge1xuICAgICAgb2JqW2tleV0gPSB0aGlzLmdldFByb3BWYWx1ZShvYmpba2V5XSlcbiAgICB9KVxuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICBnZXRQcm9wVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodGhpcy5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgcmV0dXJuIHZhbHVlLm1hcCh2YWwgPT4gdGhpcy5nZXRQcm9wVmFsdWUodmFsKSlcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0T2JqZWN0UHJvcHModmFsdWUpXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdGhpcy5pc1NlcmlhbGl6ZWREYXRlKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIHRoaXMuY29udmVydFRvRGF0ZSh2YWx1ZSlcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICBjb252ZXJ0VG9EYXRlKHZhbHVlKSB7XG4gICAgbGV0IGVwb2NoID0gRGF0ZS5wYXJzZSh2YWx1ZSlcbiAgICBpZiAoaXNOYU4oZXBvY2gpKSB7XG4gICAgICByZXR1cm4gdmFsdWVcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEYXRlKGVwb2NoKVxuICB9XG5cbiAgaXNTZXJpYWxpemVkRGF0ZSh2YWwpIHtcbiAgICB2YXIgaXNEYXRlID0gL1xcZHs0fS1bMDFdXFxkLVswLTNdXFxkVFswLTJdXFxkOlswLTVdXFxkOlswLTVdXFxkXFwuXFxkKyhbKy1dWzAtMl1cXGQ6WzAtNV1cXGR8WikvLnRlc3QodmFsKVxuICAgIGlmICghaXNEYXRlKSB7XG4gICAgICByZXR1cm4gL1xcZHs0fS1bMDFdXFxkLVswLTNdXFxkVFswLTJdXFxkOlswLTVdXFxkOlswLTVdXFxkXFwuXFxkKy8udGVzdCh2YWwpXG4gICAgfVxuICAgIHJldHVybiBpc0RhdGVcbiAgfVxuXG4gIGluc2VydChrZXksIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcilcbiAgICB9XG4gIH1cblxuICBpc0RhdGUodmFsdWUpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gXCJbb2JqZWN0IERhdGVdXCJcbiAgfVxuXG4gIGlzQXJyYXkodmFsdWUpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gXCJbb2JqZWN0IEFycmF5XVwiXG4gIH1cblxufSIsIlxuZXhwb3J0IGNsYXNzIENvbG9yIHtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgQ29sb3IuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZ1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBiXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFthXVxuICAgICAqIEBtZW1iZXJvZiBDb2xvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHIsZyxiLGEpIHtcbiAgICAgICAgdGhpcy5yID0gTWF0aC5yb3VuZChyKVxuICAgICAgICB0aGlzLmcgPSBNYXRoLnJvdW5kKGcpXG4gICAgICAgIHRoaXMuYiA9IE1hdGgucm91bmQoYilcbiAgICAgICAgdGhpcy5hID0gKGlzTmFOKGEpKSA/IDEgOiBhXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgY29sb3IncyBvcGFjaXR5XG4gICAgICogXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG9wYWNpdHkgLSBOdW1iZXIgYmV0d2VlbiAwIGFuZCAxLCAxIGJlaW5nIGZ1bGwgb3BhY2l0eVxuICAgICAqIEBtZW1iZXJvZiBDb2xvclxuICAgICAqL1xuICAgIHNldE9wYWNpdHkob3BhY2l0eSkge1xuICAgICAgICBsZXQgb3AgPSBpc05hTihvcGFjaXR5KSA/IDEgOiBvcGFjaXR5XG4gICAgICAgIHRoaXMuYSA9IE1hdGgubWluKG9wLCAxKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7e3I6bnVtYmVyLCBnOiBudW1iZXIsIGI6IG51bWJlciwgYTogbnVtYmVyfX0gY29sb3JDb25maWcgXG4gICAgICogQG1lbWJlcm9mIENvbG9yXG4gICAgICovXG4gICAgdXBkYXRlKGNvbG9yQ29uZmlnKSB7XG4gICAgICAgIHRoaXMuciA9IE1hdGgucm91bmQoY29sb3JDb25maWcuciB8fCB0aGlzLnIpXG4gICAgICAgIHRoaXMuZyA9IE1hdGgucm91bmQoY29sb3JDb25maWcuZyB8fCB0aGlzLmcpXG4gICAgICAgIHRoaXMuYiA9IE1hdGgucm91bmQoY29sb3JDb25maWcuYiB8fCB0aGlzLmIpXG4gICAgICAgIHRoaXMuYSA9IGlzTmFOKGNvbG9yQ29uZmlnLmEpID8gMSA6IE1hdGgubWluKGNvbG9yQ29uZmlnLmEsIHRoaXMuYSlcbiAgICB9XG5cbiAgICBnZXRBc0Nzc1ZhbHVlKCkge1xuICAgICAgICByZXR1cm4gYHJnYmEoJHt0aGlzLnJ9LCAke3RoaXMuZ30sICR7dGhpcy5ifSwgJHt0aGlzLmF9KWBcbiAgICB9XG4gICAgXG4gICAgLyoqXG4gICAgICogXG4gICAgICogXG4gICAgICogQHJldHVybnMgXG4gICAgICogQG1lbWJlcm9mIENvbG9yXG4gICAgICovXG4gICAgY29weSgpIHtcbiAgICAgICAgcmV0dXJuIENvbG9yLmZyb21PYmplY3QodGhpcylcbiAgICB9XG59XG5cbkNvbG9yLmZyb21PYmplY3QgPSBmdW5jdGlvbiBmcm9tT2JqZWN0KGNvbG9yKSB7XG4gICAgbGV0IHByb3RvID0gbmV3IENvbG9yKDEsMSwxKVxuICAgIHByb3RvLnVwZGF0ZShjb2xvcilcbiAgICByZXR1cm4gcHJvdG9cbn0iLCJpbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uL2NvbG9yL0NvbG9yJ1xuXG5leHBvcnQgY2xhc3MgU2V0dGluZyB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIENvbG9yLlxuICAgICAqIEBwYXJhbSB7Q29sb3J9IGNvbG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbmVXaWR0aFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbb3BhY2l0eV1cbiAgICAgKiBAbWVtYmVyb2YgQ29sb3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb2xvciwgbGluZVdpZHRoLCBvcGFjaXR5KSB7XG4gICAgICAgIGlmIChpc05hTihvcGFjaXR5KSkge1xuICAgICAgICAgICAgb3BhY2l0eSA9IGNvbG9yLmEgfHwgMVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29sb3IgPSBjb2xvclxuICAgICAgICB0aGlzLmxpbmVXaWR0aCA9IGxpbmVXaWR0aFxuICAgICAgICB0aGlzLm9wYWNpdHkgPSBvcGFjaXR5XG4gICAgICAgIGlmICghaXNOYU4ob3BhY2l0eSkpIHtcbiAgICAgICAgICAgIHRoaXMuY29sb3Iuc2V0T3BhY2l0eShvcGFjaXR5KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29weSB0byBuZXdcbiAgICAgKiBcbiAgICAgKiBAcmV0dXJucyB7U2V0dGluZ31cbiAgICAgKiBAbWVtYmVyb2YgU2V0dGluZ1xuICAgICAqL1xuICAgIGNvcHkoKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2V0dGluZyh0aGlzLmNvbG9yLmNvcHkoKSwgdGhpcy5saW5lV2lkdGgsIHRoaXMub3BhY2l0eSlcbiAgICB9XG59XG5cblNldHRpbmcuZnJvbU9iamVjdCA9IGZ1bmN0aW9uIGZyb21PYmplY3QgKHNldHRpbmdzKSB7XG4gICAgcmV0dXJuIG5ldyBTZXR0aW5nKENvbG9yLmZyb21PYmplY3Qoc2V0dGluZ3MuY29sb3IpLCBzZXR0aW5ncy5saW5lV2lkdGggfHwgNSlcbn1cbiIsImltcG9ydCB7IExvY2FsU3RvcmUgfSBmcm9tICcuLi9zdG9yYWdlL2xvY2FsU3RvcmFnZSdcbmltcG9ydCB7IFNldHRpbmcgfSBmcm9tICcuLi9zZXR0aW5ncy9TZXR0aW5nJ1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLi9jb2xvci9Db2xvcidcbmNvbnN0IHN0b3JlID0gbmV3IExvY2FsU3RvcmUoKVxuXG5leHBvcnQgY2xhc3MgUGF0aCB7XG5cbiAgY29uc3RydWN0b3IoY2FudmFzLCBjYW52YXNTY3JhdGNoLCBjbGVhcikge1xuICAgIHRoaXMuY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKVxuICAgIHRoaXMuc2NyYXRjaEN0eCA9IGNhbnZhc1NjcmF0Y2guZ2V0Q29udGV4dChcIjJkXCIpXG4gICAgdGhpcy5jbGVhciA9IGNsZWFyXG4gICAgdGhpcy5wYXRocyA9IFtdXG4gICAgdGhpcy5yZWRvID0gW11cbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhc1xuICAgIHRoaXMuY2FudmFzU2NyYXRjaCA9IGNhbnZhc1NjcmF0Y2hcbiAgICAvLyBzZXR0aW5nIGRlZmF1bHRzXG4gICAgdGhpcy5zZXR0aW5ncyA9IG5ldyBTZXR0aW5nKG5ldyBDb2xvcigyMCwgNDUsIDIwMCksIDUsIDEpXG4gICAgdGhpcy5yZXN0b3JlUGF0aCgpXG4gIH1cblxuICB1bmRvKCkge1xuICAgIHRoaXMuY2xlYXIodGhpcy5jdHgpXG4gICAgdGhpcy5yZWRvLnB1c2godGhpcy5wYXRocy5wb3AoKSlcbiAgICB0aGlzLmRyYXdBbGxQYXRocyh0aGlzLnBhdGhzKVxuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIGxpbmUgc2V0dGluZ3MgZm9yIHRoZSBwYXRoXG4gICAqIFxuICAgKiBAcGFyYW0ge3tbeDogc3RyaW5nXTogYW55fX0gIG5hbWVWYWx1ZVNldHRpbmcgXG4gICAqIEBtZW1iZXJvZiBQYXRoXG4gICAqL1xuICB1cGRhdGVTZXR0aW5ncyhuYW1lVmFsdWVTZXR0aW5nKSB7XG4gICAgdGhpcy5zZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24odGhpcy5zZXR0aW5ncywgbmFtZVZhbHVlU2V0dGluZylcbiAgICBpZiAobmFtZVZhbHVlU2V0dGluZy5jb2xvciAmJiBuYW1lVmFsdWVTZXR0aW5nLmNvbG9yLmEgIT09IDEpIHtcbiAgICAgIHRoaXMuc2V0dGluZ3Mub3BhY2l0eSA9IG5hbWVWYWx1ZVNldHRpbmcuY29sb3IuYVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBcbiAgICogQG1lbWJlcm9mIFBhdGhcbiAgICovXG4gIHN0YXJ0RHJhd2luZygpIHtcbiAgICBsZXQgcGF0aCA9IFtdXG4gICAgbGV0IGxhc3RFdmVudCA9IG51bGxcbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnQ6IChldiwgZWxlbSwgeHkpID0+IHtcbiAgICAgICAgcGF0aCA9IFt4eV1cbiAgICAgICAgbGFzdEV2ZW50ID0gT2JqZWN0LmFzc2lnbih7fSwgeHkpXG4gICAgICB9LFxuICAgICAgbW92ZTogKG1vdmVSRSwgbW92ZUVsZW0sIG1vdmVYWSkgPT4ge1xuICAgICAgICBtb3ZlUkUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBtb3ZlUkUuc3RvcFByb3BhZ2F0aW9uKClcbiAgICAgICAgcGF0aC5wdXNoKG1vdmVYWSlcbiAgICAgICAgdGhpcy5kcmF3TGluZShwYXRoLnNsaWNlKC0yKSwgdGhpcy5zZXR0aW5ncywgdGhpcy5zY3JhdGNoQ3R4LCB0aGlzLmNsZWFyKVxuICAgICAgfSxcbiAgICAgIGZpbmlzaDogKCkgPT4ge1xuICAgICAgICB0aGlzLnNhdmVQYXRoKHBhdGgsIHRoaXMuc2V0dGluZ3MpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERyYXcgTGluZVxuICAgKiBcbiAgICogQHBhcmFtIHthbnl9IHBvaW50cyBcbiAgICogQHBhcmFtIHtTZXR0aW5nfSBzZXR0aW5ncyBcbiAgICogQHBhcmFtIHt9XG4gICAqIEBtZW1iZXJvZiBQYXRoXG4gICAqL1xuICBkcmF3TGluZShwb2ludHMsIHNldHRpbmdzLCBjb250ZXh0LCBjbGVhcikge1xuICAgIGNvbnN0IGN0eCA9IGNvbnRleHQgfHwgdGhpcy5jdHhcbiAgICBpZiAoIXBvaW50cyB8fCAhcG9pbnRzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHBvaW50cyA9IHBvaW50cy5maWx0ZXIoZiA9PiAhIWYpXG4gICAgaWYgKHR5cGVvZiBjbGVhciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBjbGVhcihjdHgpXG4gICAgfVxuICAgIGN0eC5iZWdpblBhdGgoKVxuICAgIGN0eC5tb3ZlVG8ocG9pbnRzWzBdLngsIHBvaW50c1swXS55KVxuICAgIHBvaW50cy5mb3JFYWNoKChwb2ludHMpID0+IHtcbiAgICAgIGN0eC5saW5lVG8ocG9pbnRzLngsIHBvaW50cy55KVxuICAgIH0pXG4gICAgY3R4LmxpbmVXaWR0aCA9IHNldHRpbmdzLmxpbmVXaWR0aFxuICAgIGN0eC5saW5lQ2FwID0gJ3JvdW5kJ1xuICAgIGN0eC5zdHJva2VTdHlsZSA9IHNldHRpbmdzLmNvbG9yLmdldEFzQ3NzVmFsdWUoKVxuICAgIGN0eC5zdHJva2UoKVxuICB9XG5cbiAgLyoqXG4gICAqIFxuICAgKiBcbiAgICogQHBhcmFtIHthbnl9IHBhdGggXG4gICAqIEBwYXJhbSB7U2V0dGluZ30gc2V0dGluZ3MgXG4gICAqIEBtZW1iZXJvZiBQYXRoXG4gICAqL1xuICBzYXZlUGF0aChwYXRoLCBzZXR0aW5ncykge1xuICAgIHRoaXMucGF0aHMucHVzaCh7IHBhdGg6IHBhdGgsIHNldHRpbmdzOiBzZXR0aW5ncy5jb3B5KCkgfSlcbiAgICB0aGlzLmNsZWFyKHRoaXMuY3R4KVxuICAgIHRoaXMuY2xlYXIodGhpcy5zY3JhdGNoQ3R4KVxuICAgIHRoaXMuZHJhd0FsbFBhdGhzKHRoaXMucGF0aHMpXG4gICAgc3RvcmUuc2F2ZSgncGF0aHMnLCB0aGlzLnBhdGhzKVxuICB9XG5cbiAgcmVzdG9yZVBhdGgoKSB7XG4gICAgc3RvcmUubG9hZCgncGF0aHMnKVxuICAgICAgLnRoZW4oKHBhdGhzKSA9PiB7XG4gICAgICAgIHRoaXMucGF0aHMgPSBwYXRocyB8fCBbXVxuICAgICAgICB0aGlzLmRyYXdBbGxQYXRocyhwYXRocylcbiAgICAgIH0pXG4gIH1cblxuICBkcmF3QWxsUGF0aHMocGF0aHMsIGNvbnRleHQpIHtcbiAgICBpZiAoIXBhdGhzIHx8ICFwYXRocy5sZW5ndGgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBwYXRocy5mb3JFYWNoKChwYXRoRGVmKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhwYXRoRGVmKVxuICAgICAgbGV0IHNldHRpbmdzID0gU2V0dGluZy5mcm9tT2JqZWN0KHBhdGhEZWYuc2V0dGluZ3MpXG4gICAgICB0aGlzLmRyYXdMaW5lKHBhdGhEZWYucGF0aCwgc2V0dGluZ3MsIGNvbnRleHQpXG4gICAgfSlcbiAgfVxuXG4gIGNsZWFyQmFja3N0YWNrKCkge1xuICAgIHRoaXMucGF0aHMgPSBbXTtcbiAgfVxufVxuXG4iLCJleHBvcnQgY29uc3QgVE9VQ0hfRVZFTlRfTUFQID0ge1xuICBjbGljazogJ2NsaWNrJyxcbiAgbW91c2Vkb3duOiAndG91Y2hzdGFydCcsXG4gIG1vdXNldXA6ICd0b3VjaGVuZCcsXG4gIG1vdXNlbW92ZTogJ3RvdWNobW92ZSdcbn1cblxuZXhwb3J0IGNvbnN0IENVU1RPTV9EUkFHX0VWRU5UID0gJ29uY3VzdG9tZHJhZydcblxuLyoqXG4gKiBcbiAqIFxuICogQGV4cG9ydFxuICogQHBhcmFtIHt7ZWxlbWVudDogSFRNTEVsZW1lbnR9fSBjb250ZXh0XG4gKiBAcGFyYW0ge3tzdGFydDogZnVuY3Rpb24oRXZlbnQsIHtlbGVtZW50OiBIVE1MRWxlbWVudH0sIHt4OiBudW1iZXIsIHk6IG51bWJlcn0pLCBtb3ZlOiBmdW5jdGlvbihFdmVudCwge2VsZW1lbnQ6IEhUTUxFbGVtZW50fSwge3g6IG51bWJlciwgeTogbnVtYmVyfSksIGZpbmlzaDogZnVuY3Rpb24oRXZlbnQsIHtlbGVtZW50OiBIVE1MRWxlbWVudH0sIHt4OiBudW1iZXIsIHk6IG51bWJlcn0pfX0gaGFuZGxlclxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkRHJhZ0hhbmRsZXIoY29udGV4dCwgaGFuZGxlcikge1xuICBhZGRFdmVudChjb250ZXh0LCAnbW91c2Vkb3duJywgKGV2LCBlbGVtLCB4eSkgPT4ge1xuICAgIGhhbmRsZXIuc3RhcnQuY2FsbChjb250ZXh0LCBldiwgY29udGV4dCwgeHkpXG4gICAgbGV0IGZpbmlzaFRpbWVvdXQgPSBudWxsXG4gICAgbGV0IF9maW5pc2ggPSAoZW5kRXYsIGVsZW0sIGVuZFhZKSA9PiB7XG4gICAgICBjbGVhclRpbWVvdXQoZmluaXNoVGltZW91dClcbiAgICAgIGhhbmRsZXIuZmluaXNoLmNhbGwoY29udGV4dCwgZW5kRXYsIGVsZW0sIGVuZFhZKVxuICAgICAgcmVtb3ZlTW92ZUV2ZW50KClcbiAgICAgIHJlbW92ZVN0b3BFdmVudCgpXG4gICAgfVxuXG4gICAgbGV0IHJlbW92ZVN0b3BFdmVudCA9IGFkZEV2ZW50KGNvbnRleHQsICdtb3VzZXVwJywgX2ZpbmlzaCwgdHJ1ZSlcbiAgICBsZXQgcmVtb3ZlTW92ZUV2ZW50ID0gYWRkRXZlbnQoY29udGV4dCwgICdtb3VzZW1vdmUnLCAobUVWLCBlbGVtLCBtWFkpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dChmaW5pc2hUaW1lb3V0KVxuICAgICAgaGFuZGxlci5tb3ZlLmNhbGwoY29udGV4dCwgbUVWLCBlbGVtLCBtWFkpXG4gICAgICBmaW5pc2hUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIF9maW5pc2gobUVWLCBlbGVtLCBtWFkpXG4gICAgICB9LCA1MDApXG4gICAgfSwgdHJ1ZSlcbiAgfSwgdHJ1ZSlcbn1cblxuLyoqXG4gKiBcbiAqIFxuICogQGV4cG9ydFxuICogQHBhcmFtIHt7ZWxlbWVudDogSFRNTEVsZW1lbnR9fSBjb250ZXh0XG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnROYW1lIFxuICogQHBhcmFtIHtmdW5jdGlvbihFdmVudCwge2VsZW1lbnQ6IEhUTUxFbGVtZW50fSwge3g6IG51bWJlciwgeTogbnVtYmVyfSl9IGhhbmRsZXIgXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oKX0gcmVtb3ZlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRFdmVudChjb250ZXh0LCBldmVudE5hbWUsIGhhbmRsZXIsIHByZXZlbnREZWZhdWx0KSB7XG4gIGxldCBoYW5kbGUgPSAoZXYpID0+IHtcbiAgICBpZiAocHJldmVudERlZmF1bHQpIHtcbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcbiAgICB9XG4gICAgaGFuZGxlci5jYWxsKGNvbnRleHQsIGV2LCBjb250ZXh0LCBnZXRYWShldikpXG4gIH1cbiAgY29udGV4dC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGUpXG4gIGlmICghVE9VQ0hfRVZFTlRfTUFQW2V2ZW50TmFtZV0gfHwgVE9VQ0hfRVZFTlRfTUFQW2V2ZW50TmFtZV0gPT09IGV2ZW50TmFtZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICBjb250ZXh0LmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZSlcbiAgICB9XG4gIH1cbiAgY29udGV4dC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoVE9VQ0hfRVZFTlRfTUFQW2V2ZW50TmFtZV0sIGhhbmRsZSlcblxuICByZXR1cm4gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgIGNvbnRleHQuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlKVxuICAgIGNvbnRleHQuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFRPVUNIX0VWRU5UX01BUFtldmVudE5hbWVdLCBoYW5kbGUpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0WFkoZXYpIHtcbiAgaWYgKGV2LmNsaWVudFgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogZXYuY2xpZW50WCxcbiAgICAgIHk6IGV2LmNsaWVudFlcbiAgICB9XG4gIH0gZWxzZSBpZiAoZXYudHlwZS5pbmRleE9mKCd0b3VjaCcpID4gLTEgJiYgZXYudG91Y2hlcyAmJiBldi50b3VjaGVzWzBdKSB7XG4gICAgcmV0dXJuIGdldFRvdWNoWFkoZXYpXG4gIH1cbiAgcmV0dXJuIG51bGxcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHggYW4geSBjb29yZHMgb2YgYSB0b3VjaCBldmVudC5cbiAqIFxuICogQHBhcmFtIHtUb3VjaEV2ZW50fSBldiBcbiAqIEByZXR1cm5zIHt7eDogbnVtYmVyLCB5OiBudW1iZXJ9fVxuICovXG5mdW5jdGlvbiBnZXRUb3VjaFhZKGV2KSB7XG4gIGxldCB0b3VjaFggPSBldi50b3VjaGVzWzBdLmNsaWVudFhcbiAgbGV0IHRvdWNoWSA9IGV2LnRvdWNoZXNbMF0uY2xpZW50WVxuICBcbiAgLy8gSGVyZSB0byBhdHRlbXB0IHRvIGlnbm9yZSBpbmFkdmVydGVudCBlZGdlIGNsaWNrc1xuICBpZiAoZXYudG91Y2hlcy5sZW5ndGggPiAxKSB7XG4gICAgbGV0IHRvdWNoZXMgPSBBcnJheS5mcm9tKGV2LnRvdWNoZXMpLmZpbHRlcigodG91Y2gpID0+IHtcbiAgICAgIHJldHVybiBpbnNpZGVFZGdlVGhyZXNob2xkKHRvdWNoLmNsaWVudFgsIHdpbmRvdy5pbm5lcldpZHRoKSAmJlxuICAgICAgICBpbnNpZGVFZGdlVGhyZXNob2xkKHRvdWNoLmNsaWVudFksIHdpbmRvdy5pbm5lckhlaWdodClcbiAgICB9KVxuICAgIGlmICh0b3VjaGVzLmxlbmd0aCkge1xuICAgICAgdG91Y2hYID0gdG91Y2hlc1swXS5jbGllbnRYXG4gICAgICB0b3VjaFkgPSB0b3VjaGVzWzBdLmNsaWVudFlcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB4OiB0b3VjaFgsXG4gICAgeTogdG91Y2hZXG4gIH1cbn1cblxuLyoqXG4gKiBcbiAqIFxuICogQHBhcmFtIHtudW1iZXJ9IHBvaW50IFxuICogQHBhcmFtIHtudW1iZXJ9IHRvdGFsRGlzdFxuICovXG5mdW5jdGlvbiBpbnNpZGVFZGdlVGhyZXNob2xkKHBvaW50LCB0b3RhbERpc3QpIHtcbiAgbGV0IHRocmVzaG9sZCA9IDcwXG4gIHJldHVybiAocG9pbnQgPiB0aHJlc2hvbGQgJiYgcG9pbnQgPCAodG90YWxEaXN0ICAtIHRocmVzaG9sZCkpXG59IiwiaW1wb3J0IHsgUGF0aCB9IGZyb20gJy4vcGF0aCdcbmltcG9ydCB7IExvY2FsU3RvcmUgfSBmcm9tICcuLi9zdG9yYWdlL2xvY2FsU3RvcmFnZSdcbmltcG9ydCB7IGFkZERyYWdIYW5kbGVyIH0gZnJvbSAnLi4vZXZlbnRIYW5kbGluZy9ldmVudCdcbmNvbnN0IHN0b3JlID0gbmV3IExvY2FsU3RvcmUoKVxuXG5jb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJylcbmNvbnN0IGNhbnZhc1NjcmF0Y2ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzLXNjcmF0Y2gtcGFkJylcbmNvbnN0IHJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW87XG5jb25zdCBjYW52YXNIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5jb25zdCBjYW52YXNXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuc2V0dXBDYW52YXMoY2FudmFzKVxuc2V0dXBDYW52YXMoY2FudmFzU2NyYXRjaClcblxuZnVuY3Rpb24gc2V0dXBDYW52YXMoY3MpIHtcbiAgLy8gZmlsbCBzY3JlZW4gd2l0aCBjYW52YXNcbiAgY3Mud2lkdGggPSBjYW52YXNXaWR0aCAqIHJhdGlvO1xuICBjcy5oZWlnaHQgPSBjYW52YXNIZWlnaHQgKiByYXRpbztcbiAgY3Muc3R5bGUud2lkdGggPSBjYW52YXNXaWR0aCArIFwicHhcIjtcbiAgY3Muc3R5bGUuaGVpZ2h0ID0gY2FudmFzSGVpZ2h0ICsgXCJweFwiO1xuICBjb25zdCBjdHggPSBjcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gIGN0eC5zY2FsZShyYXRpbywgcmF0aW8pO1xuICByZXR1cm4gY3Ncbn1cbmNvbnN0IHBhdGggPSBuZXcgUGF0aChzZXR1cENhbnZhcyhjYW52YXMpLCBzZXR1cENhbnZhcyhjYW52YXNTY3JhdGNoKSwgY2xlYXIpXG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICBhZGREcmFnSGFuZGxlcih7IGVsZW1lbnQ6IGNhbnZhc1NjcmF0Y2ggfSwgcGF0aC5zdGFydERyYXdpbmcoKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyKGN0eCwgYWxsKSB7XG4gIGlmIChhbGwpIHtcbiAgICBwYXRoLmNsZWFyQmFja3N0YWNrKClcbiAgfVxuICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCAvIHJhdGlvLCBjYW52YXMuaGVpZ2h0IC8gcmF0aW8pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bmRvKCkge1xuICBwYXRoLnVuZG8oKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZG93bmxvYWRJbWFnZShldikge1xuICB0aGlzLmRvd25sb2FkID0gJ2ltYWdlLnBuZydcbiAgdGhpcy5ocmVmID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVNldHRpbmdzKG5ld1NldHRpbmcpIHtcbiAgcGF0aC51cGRhdGVTZXR0aW5ncyhuZXdTZXR0aW5nKVxufVxuIiwiaW1wb3J0IHsgb3ZlcnJpZGUsIGdldEhhbmRsZX0gZnJvbSAnZWxlLW1pbnQnXG5pbXBvcnQgeyBhZGREcmFnSGFuZGxlciwgYWRkRXZlbnQsIENVU1RPTV9EUkFHX0VWRU5UIH0gZnJvbSAnLi4vZXZlbnRIYW5kbGluZy9ldmVudCdcblxuY29uc3Qgb3ZlcnJpZGVzID0gZnVuY3Rpb24oKSB7fVxub3ZlcnJpZGVzLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lclxub3ZlcnJpZGVzLnByb3RvdHlwZS53aW5kb3dPZmZzZXQgPSB3aW5kb3dPZmZzZXRcbm92ZXJyaWRlcy5wcm90b3R5cGUuc2V0QWN0aXZlID0gc2V0QWN0aXZlXG5vdmVycmlkZXMucHJvdG90eXBlLmFkZENsYXNzID0gYWRkQ2xhc3Ncbm92ZXJyaWRlcy5wcm90b3R5cGUucmVtb3ZlQ2xhc3MgPSByZW1vdmVDbGFzc1xub3ZlcnJpZGVzLnByb3RvdHlwZS5jbG9uZSA9IGNsb25lXG5cbmNvbnN0IHJlZ2lzdGVyID0gb3ZlcnJpZGUob3ZlcnJpZGVzLnByb3RvdHlwZSlcbmNvbnN0IGVsZW1lbnRzID0gJ2F8YWJicnxhZGRyZXNzfGFyZWF8YXJ0aWNsZXxhc2lkZXxhdWRpb3xifGJhc2V8YmRpfGJkb3xibG9ja3F1b3RlfGJvZHl8YnJ8YnV0dG9ufGNhbnZhc3xjYXB0aW9ufGNpdGV8Y29kZXxjb2x8Y29sZ3JvdXB8ZGF0YXxkYXRhbGlzdHxkZHxkZWx8ZGV0YWlsc3xkZm58ZGl2fGRsfGR0fGVtfGVtYmVkfGZpZWxkc2V0fGZpZ2NhcHRpb258ZmlndXJlfGZvb3Rlcnxmb3JtfGgxfGgyfGgzfGg0fGg1fGg2fGhlYWR8aGVhZGVyfGhyfGh0bWx8aXxpZnJhbWV8aW1nfGlucHV0fGluc3xrYmR8bGFiZWx8bGVnZW5kfGxpfGxpbmt8bWFpbnxtYXB8bWFya3xtZXRhfG1ldGVyfG5hdnxub3NjcmlwdHxvYmplY3R8b2x8b3B0Z3JvdXB8b3B0aW9ufG91dHB1dHxwfHBhcmFtfHBpY3R1cmV8cHJlfHByb2dyZXNzfHF8cnB8cnR8cnRjfHJ1Ynl8c3xzYW1wfHNjcmlwdHxzZWN0aW9ufHNlbGVjdHxzbG90fHNtYWxsfHNvdXJjZXxzcGFufHN0cm9uZ3xzdHlsZXxzdWJ8c3VtbWFyeXxzdXB8dGFibGV8dGJvZHl8dGR8dGVtcGxhdGV8dGV4dGFyZWF8dGZvb3R8dGh8dGhlYWR8dGltZXx0aXRsZXx0cnx0cmFja3x1fHVsfHZhcnx2aWRlb3x3YnInLnNwbGl0KCd8JykucmVkdWNlKChhZ2csIG5leHQpID0+IHthZ2dbbmV4dF0gPSByZWdpc3RlcihuZXh0KTsgcmV0dXJuIGFnZzt9LCB7fSlcbmVsZW1lbnRzLnZpcnR1YWwgPSByZWdpc3RlcigndmlydHVhbCcsIHsgXG4gICAgYXR0YWNoOiBmdW5jdGlvbiBhdHRhY2gocGFyZW50RWxlbWVudCkge1xuICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQgPSBwYXJlbnRFbGVtZW50XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudEVsZW1lbnRcbiAgICB9XG59KVxuXG5leHBvcnQgY29uc3QgZSA9IHtcbiAgICByZWdpc3RlcixcbiAgICBlbGVtZW50czogZWxlbWVudHMsXG4gICAgZ2V0SGFuZGxlOiBnZXRIYW5kbGVcbn1cblxuZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldk5hbWUsIGhhbmRsZXIpIHtcbiAgICAvLyBzbGljZSBuZWVkZWQgYmVjYXVzZSB0aGUgYmFzZSBsaWJyYXJ5IHJlbW92ZXMgdGhlICdvbicgZnJvbSB0aGUgZXZlbnQgbmFtZS5cbiAgICBpZiAoZXZOYW1lID09PSBDVVNUT01fRFJBR19FVkVOVC5zbGljZSgyKSkge1xuICAgICAgICBhZGREcmFnSGFuZGxlcih0aGlzLCBoYW5kbGVyKVxuICAgICAgICByZXR1cm5cbiAgICB9XG4gICAgYWRkRXZlbnQodGhpcywgZXZOYW1lLCBoYW5kbGVyKVxufVxuXG5mdW5jdGlvbiBzZXRBY3RpdmUoYWN0aXZlKSB7XG4gICAgdGhpc1soYWN0aXZlKSA/ICdhZGRDbGFzcycgOiAncmVtb3ZlQ2xhc3MnXSgnYWN0aXZlJylcbn1cblxuLyoqXG4gKiBHZXRzIFggYW5kIFkgb2Zmc2V0IGZyb20gd2luZG93LlxuICogXG4gKiBAcmV0dXJucyB7e3g6IG51bWJlciwgeTogbnVtYmVyfX1cbiAqIEBtZW1iZXJvZiBFbGVtZW50RGVmaW5pdGlvblxuICovXG5mdW5jdGlvbiB3aW5kb3dPZmZzZXQoKSB7XG4gICAgbGV0IG9mZnNldCA9IHt4OiB0aGlzLmVsZW0ub2Zmc2V0TGVmdCwgeTogdGhpcy5lbGVtLm9mZnNldFRvcH1cbiAgICBsZXQgY3VycmVudCA9IHRoaXMucGFyZW50RWxlbWVudFxuICAgIHdoaWxlIChjdXJyZW50LnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgb2Zmc2V0LnggKz0gY3VycmVudC5vZmZzZXRMZWZ0XG4gICAgICAgIG9mZnNldC55ICs9IGN1cnJlbnQub2Zmc2V0VG9wXG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnBhcmVudEVsZW1lbnRcbiAgICB9XG4gICAgcmV0dXJuIG9mZnNldFxufVxuXG5mdW5jdGlvbiBjbG9uZShoYW5kbGUsIGF0dHJPdmVycmlkZXMpIHtcbiAgICBsZXQgY2hzID0gKHRoaXMuY2hpbGRyZW4gfHwgW10pLm1hcCgoZWwpID0+IGVsLmNsb25lKCkpXG4gICAgbGV0IG5lID0gcmVnaXN0ZXIodGhpcy50YWdOYW1lKShPYmplY3QuYXNzaWduKHt9LCB0aGlzLmF0dHIsIGF0dHJPdmVycmlkZXMpLCBjaHMpXG4gICAgdGhpcy5oYW5kbGUgPSBoYW5kbGVcbiAgICByZXR1cm4gbmVcbn1cbi8qKlxuICogQWRkIHNwZWNpZmllZCBjbGFzcyB0byB0aGUgZWxlbWVudFxuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lIFxuICogQG1lbWJlcm9mIEVsZW1lbnREZWZpbml0aW9uXG4gKi9cbmZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuICAgIGlmICghdGhpcy5jbGFzc05hbWUpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUodGhpcy5lbGVtLCAnY2xhc3NOYW1lJywgY2xhc3NOYW1lKVxuICAgICAgICByZXR1cm5cbiAgICB9XG4gICAgaWYgKHRoaXMuY2xhc3NOYW1lLnNwbGl0KCcgJykuaW5kZXhPZihjbGFzc05hbWUpID4gLTEpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHRoaXMuY2xhc3NOYW1lID0gW3RoaXMuY2xhc3NOYW1lLCBjbGFzc05hbWVdLmpvaW4oJyAnKVxufVxuXG4vKipcbiAqIFJlbW92ZSBzcGVjaWZpZWQgY2xhc3MgZnJvbSB0aGUgZWxlbWVudFxuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lIFxuICogQG1lbWJlcm9mIEVsZW1lbnREZWZpbml0aW9uXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge1xuICAgIGlmICghdGhpcy5jbGFzc05hbWUgfHwgdGhpcy5jbGFzc05hbWUuaW5kZXhPZihjbGFzc05hbWUpID09PSAtMSl7XG4gICAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLmNsYXNzTmFtZSA9IHRoaXMuY2xhc3NOYW1lLnNwbGl0KCcgJykuZmlsdGVyKChjbikgPT4gY24gIT09IGNsYXNzTmFtZSkuam9pbignICcpXG59XG4iLCJpbXBvcnQgeyBlIH0gZnJvbSAnLi4vdGVtcGxhdGVyL3JlbmRlcmVyJ1xuXG5jb25zdCB7IGRpdiwgYnV0dG9uIH0gPSBlLmVsZW1lbnRzXG5cbi8qKlxuICogXG4gKiBcbiAqIEBleHBvcnRcbiAqIEBwYXJhbSB7RWxlbWVudERlZmluaXRpb259IGVsZW1lbnQgXG4gKiBAcmV0dXJucyB7RWxlbWVudERlZmluaXRpb259XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgcmV0dXJuIGRpdih7XG4gICAgICAgICAgICBjbGFzczonYy1tb2RhbCcsIFxuICAgICAgICAgICAgICAgIGVfb25yZW1vdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZGl2KHtjbGFzczogJ2MtbW9kYWxfX292ZXJsYXkgby1mbGV4J30sXG4gICAgICAgICAgICBkaXYoe2NsYXNzOiAnYy1tb2RhbF9faW5uZXItY29udGFpbmVyJ30sXG4gICAgICAgICAgICAgICAgZGl2KHtjbGFzczogJ2MtbW9kYWxfX2NvbnRlbnQnfSxcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgZGl2KHtjbGFzczogJ2MtbW9kYWxfX2J0bi1jb250YWluZXInfSxcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uKHtjbGFzczogJ2J0biBjLW1vZGFsX19idG4tY2xvc2UnLCBvbmNsaWNrOiBmdW5jdGlvbigpIHsgdGhpcy5lbWl0KCdvbnJlbW92ZScpIH19LCAnT0snKVxuICAgICAgICAgICAgICAgICkgXG4gICAgICAgICAgICApXG4gICAgICAgIClcbiAgICApLnJlbmRlcihkb2N1bWVudC5ib2R5KVxuICAgIC8vIHJldHVybiBtb2RhbFxufSIsImltcG9ydCB7IGUgfSBmcm9tICcuLi90ZW1wbGF0ZXIvcmVuZGVyZXInXG5cbmNvbnN0IHsgZGl2LCBidXR0b24gfSA9IGUuZWxlbWVudHNcbmNvbnN0IGVUYWIgPSBlLnJlZ2lzdGVyKCdkLXRhYicpXG5cbi8qKlxuICogIFxuICogQGV4cG9ydFxuICogQHBhcmFtIHt7dGl0bGU6IHN0cmluZywgYWN0aXZlOiBib29sZWFufX0gdGFiQ29uZmlnIFxuICogQHBhcmFtIHtFbGVtZW50RGVmaW5pdGlvbltdfSB0YWJDb250ZW50c1xuICogQHJldHVybnMge0VsZW1lbnREZWZpbml0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gdGFiKHRhYkNvbmZpZywgLi4udGFiQ29udGVudHMpIHtcbiAgICByZXR1cm4gZVRhYih7XG4gICAgICAgICAgICBfaWQ6IHRhYkNvbmZpZy5pZCB8fCBTeW1ib2woJ3RhYicpLCBcbiAgICAgICAgICAgIGNsYXNzOiBgYy10YWItbGF5b3V0X190YWIkeyh0YWJDb25maWcuYWN0aXZlKT8gJyBhY3RpdmUnIDogJyd9YCxcbiAgICAgICAgICAgIF9hY3RpdmU6IHRhYkNvbmZpZy5hY3RpdmUsXG4gICAgICAgICAgICBfdGl0bGU6IHRhYkNvbmZpZy50aXRsZVxuICAgICAgICB9LFxuICAgICAgICB0YWJDb250ZW50c1xuICAgIClcbn1cbi8qKlxuICogXG4gKiBcbiAqIEBleHBvcnRcbiAqIEBwYXJhbSB7YW55fSBjb25maWcgXG4gKiBAcGFyYW0ge3tfdGl0bGU6IHN0cmluZywgX2FjdGl2ZTogYm9vbGVhbiwgc2V0QWN0aXZlOiBmdW5jdGlvbihib29sZWFuKX1bXX0gdGFicyBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRhYnMoY29uZmlnLCAuLi50YWJzKSB7XG4gICAgbGV0IHRhYkJ1dHRvbnMgPSB0YWJzLm1hcCgodCwgaWR4KSA9PiBnZXRCdXR0b24odCwgaWR4LCBzZXRUYWIpKVxuXG4gICAgZnVuY3Rpb24gc2V0VGFiKGluZGV4KSB7XG4gICAgICAgIHJldHVybiAoZXYpID0+IHtcbiAgICAgICAgICAgIHRhYnMuZm9yRWFjaCgodGFiLCBpZHgpID0+IHRhYi5zZXRBY3RpdmUoaWR4ID09PSBpbmRleCkpXG4gICAgICAgICAgICB0YWJCdXR0b25zLmZvckVhY2goKGJ0biwgaWR4KSA9PiBidG4uc2V0QWN0aXZlKGlkeCA9PT0gaW5kZXgpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRpdih7Y2xhc3M6J2MtdGFiLWxheW91dCd9LFxuICAgICAgICBkaXYoe2NsYXNzOiAnYy10YWItbGF5b3V0X19idXR0b24tY29udGFpbmVyJ30sIFxuICAgICAgICAgICAgdGFiQnV0dG9uc1xuICAgICAgICApLFxuICAgICAgICBkaXYoe2NsYXNzOiAnYy10YWItbGF5b3V0X19jb250YWluZXInfSxcbiAgICAgICAgICAgIHRhYnNcbiAgICAgICAgKVxuICAgIClcbn1cblxuLyoqXG4gKiBcbiAqIFxuICogQHBhcmFtIHt7X3RpdGxlOiBzdHJpbmcsIF9hY3RpdmU6IGJvb2xlYW59fSB0YWIgXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXggXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKG51bWJlcil9IHNldFRhYiBcbiAqL1xuZnVuY3Rpb24gZ2V0QnV0dG9uKHRhYiwgaW5kZXgsIHNldFRhYikge1xuXG4gICAgcmV0dXJuIGJ1dHRvbih7XG4gICAgICAgIGNsYXNzOiBgYy10YWItbGF5b3V0X19idXR0b24keyh0YWIuYXR0ci5fYWN0aXZlKT8gJyBhY3RpdmUnIDogJyd9YCxcbiAgICAgICAgb25jbGljazogc2V0VGFiKGluZGV4KVxuICAgIH0sIHRhYi5hdHRyLl90aXRsZSlcbn0iLCIvLyBzY3JhcGVkIGZyb20gbWF0ZXJpYWwgZGVzaWduXG5leHBvcnQgZGVmYXVsdCBbXG4gICAge3I6MjQ0LGc6NjcsYjo1NCxhOjF9LFxuICAgIHtyOjIzMyxnOjMwLGI6OTksYToxfSxcbiAgICB7cjoxNTYsZzozOSxiOjE3NixhOjF9LFxuICAgIHtyOjEwMyxnOjU4LGI6MTgzLGE6MX0sXG4gICAge3I6NjMsZzo4MSxiOjE4MSxhOjF9LFxuICAgIHtyOjMzLGc6MTUwLGI6MjQzLGE6MX0sXG4gICAge3I6MyxnOjE2OSxiOjI0NCxhOjF9LFxuICAgIHtyOjAsZzoxODgsYjoyMTIsYToxfSxcbiAgICB7cjowLGc6MTUwLGI6MTM2LGE6MX0sXG4gICAge3I6NzYsZzoxNzUsYjo4MCxhOjF9LFxuICAgIHtyOjEzOSxnOjE5NSxiOjc0LGE6MX0sXG4gICAge3I6MjA1LGc6MjIwLGI6NTcsYToxfSxcbiAgICB7cjoyNTUsZzoyMzUsYjo1OSxhOjF9LFxuICAgIHtyOjI1NSxnOjE5MyxiOjcsYToxfSxcbiAgICB7cjoyNTUsZzoxNTIsYjowLGE6MX0sXG4gICAge3I6MjU1LGc6ODcsYjozNCxhOjF9LFxuICAgIHtyOjEyMSxnOjg1LGI6NzIsYToxfSxcbiAgICB7cjoxNTgsZzoxNTgsYjoxNTgsYToxfSxcbiAgICB7cjo5NixnOjEyNSxiOjEzOSxhOjF9XG5dIiwiaW1wb3J0IHsgZSB9IGZyb20gJy4uL3RlbXBsYXRlci9yZW5kZXJlcidcbmltcG9ydCBtb2RhbCBmcm9tICcuL21vZGFsJ1xuaW1wb3J0IHt0YWIsIHRhYnN9IGZyb20gJy4vdGFicydcbmltcG9ydCBzd2F0Y2hlcyBmcm9tICcuLi9jb2xvci9zd2F0Y2hlcydcbmltcG9ydCB7IENvbG9yIH0gZnJvbSAnLi4vY29sb3IvQ29sb3InXG5cbmNvbnN0IHsgZGl2LCBpbnB1dCwgYnV0dG9uLCBwLCBsYWJlbCB9ID0gZS5lbGVtZW50c1xuY29uc3QgZ2V0SGFuZGxlID0gZS5nZXRIYW5kbGVcblxuY29uc3QgSURfTUFQID0ge1xuICAgICdyZWQnOiAncicsXG4gICAgJ2dyZWVuJzogJ2cnLFxuICAgICdibHVlJzogJ2InLFxuICAgICdvcGFjaXR5JzogJ2EnXG59XG5cbi8qKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHt7IGNvbG9yU2VsZWN0ZWQ6IGZ1bmN0aW9uKENvbG9yKSwgY3VycmVudENvbG9yOiBDb2xvcn19IGNvbmZpZ1xuICogQHJldHVybnMge0VsZW1lbnREZWZpbml0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29sb3JQaWNrZXIoY29uZmlnKSB7XG4gICAgcmV0dXJuIG1vZGFsKFxuICAgICAgICBkaXYoe1xuICAgICAgICAgICAgICAgIGNsYXNzOiAnYy1jb2xvci1waWNrZXJfX3RhYnMnLCBcbiAgICAgICAgICAgICAgICB2X2NvbG9yOiBjb25maWcuY3VycmVudENvbG9yLCBcbiAgICAgICAgICAgICAgICBlX29uQ29sb3JDaGFuZ2VkOiBmdW5jdGlvbihjb2xvcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnZfY29sb3IgPSBjb2xvclxuICAgICAgICAgICAgICAgICAgICBjb25maWcuY29sb3JTZWxlY3RlZChjb2xvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGFicyh7fSxcbiAgICAgICAgICAgICAgICB0YWIoe3RpdGxlOiAnc3dhdGNoZXMnLCBhY3RpdmU6IHRydWUgfSxcbiAgICAgICAgICAgICAgICAgICAgZGl2KHtjbGFzczogJ2MtY29sb3Itc3dhdGNoZXNfX2NvbnRhaW5lcid9LFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JQaWNrZXJEaXNwbGF5KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXYoe2NsYXNzOiAnYy1jb2xvci1zd2F0Y2hlcyd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3YXRjaGVzLm1hcChjb2xvclN3YXRjaClcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgdGFiKHt0aXRsZTogJ2N1c3RvbScsIGFjdGl2ZTogZmFsc2V9LFxuICAgICAgICAgICAgICAgICAgICBkaXYoe2NsYXNzOiAnYy1jb2xvci1waWNrZXInfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yUGlja2VyRGlzcGxheSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGl2KHtjbGFzczogJ2MtY29sb3ItcGlja2VyX19zbGlkZXJzJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoSURfTUFQKS5tYXAoZ2V0Q29sb3JTbGlkZXJzKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgKVxufVxuXG5mdW5jdGlvbiBjb2xvclBpY2tlckRpc3BsYXkoKSB7XG4gICAgcmV0dXJuIGRpdih7XG4gICAgICAgIGNsYXNzOiAnYy1jb2xvci1waWNrZXJfX2Rpc3BsYXknLCAgXG4gICAgICAgIHN0eWxlOiAnJyxcbiAgICAgICAgdl9jb2xvcjogbnVsbCxcbiAgICAgICAgc2V0X2NvbG9yOiBmdW5jdGlvbihjb2xvcikge1xuICAgICAgICAgICAgdGhpcy5zdHlsZSA9IGBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoaXMudl9jb2xvci5nZXRBc0Nzc1ZhbHVlKCl9YFxuICAgICAgICB9XG4gICAgfSlcbn1cblxuZnVuY3Rpb24gZ2V0Q29sb3JTbGlkZXJzKHByb3BOYW1lKSB7XG4gICAgbGV0IGtleSA9IElEX01BUFtwcm9wTmFtZV1cbiAgICBsZXQgbWF4ID0gKHByb3BOYW1lID09PSAnb3BhY2l0eScpID8gMSA6IDI1NlxuICAgIGxldCBzdGVwID0gKHByb3BOYW1lID09PSAnb3BhY2l0eScpID8gLjAxIDogMVxuICAgIHJldHVybiBkaXYoe2NsYXNzOiAnYy1jb2xvci1waWNrZXJfX29wdGlvbid9LFxuICAgICAgICBsYWJlbCh7Y2xhc3M6ICdjLWNvbG9yLXBpY2tlcl9fcmFuZ2UtbGFiZWwnfSwgcHJvcE5hbWUpLFxuICAgICAgICBpbnB1dCh7XG4gICAgICAgICAgICBjbGFzczogJ2MtY29sb3ItcGlja2VyX19yYW5nZScsIFxuICAgICAgICAgICAgdHlwZTogJ3JhbmdlJywgXG4gICAgICAgICAgICBtaW46IDAsIFxuICAgICAgICAgICAgbWF4OiBtYXgsIFxuICAgICAgICAgICAgc3RlcDogc3RlcCxcbiAgICAgICAgICAgIHZfY29sb3I6IG51bGwsXG4gICAgICAgICAgICBzZXRfY29sb3I6IGZ1bmN0aW9uKGNvbG9yKSB7IHRoaXMudmFsdWUgPSBjb2xvcltrZXldIH0sXG4gICAgICAgICAgICB2YWx1ZTogJycsIFxuICAgICAgICAgICAgb25pbnB1dDogcmFuZ2VWYWx1ZUNoYW5nZWQoa2V5KVxuICAgICAgICB9KVxuICAgIClcbn1cblxuLyoqXG4gKiBcbiAqIEBwYXJhbSB7e3I6bnVtYmVyLCBnOiBudW1iZXIsIGI6IG51bWJlciwgYTogbnVtYmVyfX0gY29sb3IgXG4gKiBAcmV0dXJucyB7RWxlbWVudERlZmluaXRpb259XG4gKi9cbmZ1bmN0aW9uIGNvbG9yU3dhdGNoKGNvbG9yKSB7XG4gICAgbGV0IGMgPSBDb2xvci5mcm9tT2JqZWN0KGNvbG9yKVxuICAgIHJldHVybiBidXR0b24oe1xuICAgICAgICBjbGFzczogJ2J0biBjaXJjbGUnLFxuICAgICAgICBvbmNsaWNrOiBzZXRDb2xvcihjKSxcbiAgICAgICAgc3R5bGU6IGBiYWNrZ3JvdW5kLWNvbG9yOiAke2MuZ2V0QXNDc3NWYWx1ZSgpfTtgXG4gICAgfSlcbn1cblxuXG5mdW5jdGlvbiBzZXRDb2xvcihjb2xvcikge1xuICAgIHJldHVybiBmdW5jdGlvbihldikge1xuICAgICAgICB0aGlzLmVtaXQoJ29uQ29sb3JDaGFuZ2VkJywgY29sb3IpXG4gICAgfVxufVxuXG5mdW5jdGlvbiByYW5nZVZhbHVlQ2hhbmdlZChjb2xvcktleSkge1xuICAgIHJldHVybiBmdW5jdGlvbihldikge1xuICAgICAgICB0aGlzLnZhbHVlID0gTnVtYmVyKGV2LnRhcmdldC52YWx1ZSlcbiAgICAgICAgbGV0IGNvbG9yID0gQ29sb3IuZnJvbU9iamVjdChPYmplY3QuYXNzaWduKHt9ICwgdGhpcy52X2NvbG9yLCB7W2NvbG9yS2V5XTogdGhpcy52YWx1ZX0pKVxuICAgICAgICB0aGlzLmVtaXQoJ29uQ29sb3JDaGFuZ2VkJywgY29sb3IpXG4gICAgfVxufSIsImltcG9ydCB7IGUgfSBmcm9tICcuLi90ZW1wbGF0ZXIvcmVuZGVyZXInXG5pbXBvcnQgeyBhZGREcmFnSGFuZGxlciwgYWRkRXZlbnQsIENVU1RPTV9EUkFHX0VWRU5UfSBmcm9tICcuLi9ldmVudEhhbmRsaW5nL2V2ZW50J1xuaW1wb3J0IHsgY29sb3JQaWNrZXIgfSBmcm9tICcuL2NvbG9yUGlja2VyJ1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLi9jb2xvci9Db2xvcidcbmNvbnN0IHsgYnV0dG9uLCBpLCBkaXYgfSA9IGUuZWxlbWVudHNcbmNvbnN0IGdldEhhbmRsZSA9IGUuZ2V0SGFuZGxlXG4vKipcbiAqIENvbG9yIEJ1dHRvbiBjb21wb25lbnRcbiAqIEhhbmRsZXMgc2V0dGluZyBjb2xvclxuICogXG4gKiBAZXhwb3J0XG4gKiBAcmV0dXJucyB7RWxlbWVudERlZmluaXRpb259XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2xvckJ1dHRvbigpIHtcbiAgICByZXR1cm4gYnV0dG9uKHtcbiAgICAgICAgICAgIGNsYXNzOiAnYnRuIGNpcmNsZSBjdXN0b20tY29sb3ItYnRuJywgXG4gICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoZXYsIGVsZW0pIHtcbiAgICAgICAgICAgICAgICAvLyBUeWluZyB0aGVzZSB0d28gZGlzcGFyYXRlIGNvbXBvbmVudHMgdG9nZXRoZXJcbiAgICAgICAgICAgICAgICBvcGVuQ29sb3JQaWNrZXIodGhpcy52X2NvbG9yLCAobmV3Q29sb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0KCd1cGRhdGVDb2xvcicsIG5ld0NvbG9yKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdl9jb2xvcjogbnVsbCxcbiAgICAgICAgICAgIHNldF9jb2xvcjogc2V0QmFja2dyb3VuZCxcbiAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogcmdiKDQwLDQwLDQwKScgXG4gICAgICAgIH0sXG4gICAgICAgIGkoeyBjbGFzczogJ21hdGVyaWFsLWljb25zIG1kLWxpZ2h0IG1kLTM2J30sICdicnVzaCcpXG4gICAgKVxuXG59XG5cbmZ1bmN0aW9uIHNldEJhY2tncm91bmQoKSB7XG4gICAgdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBgJHt0aGlzLnZfY29sb3IuZ2V0QXNDc3NWYWx1ZSgpfWBcbn1cblxuZnVuY3Rpb24gb3BlbkNvbG9yUGlja2VyKGN1cnJlbnRDb2xvciwgdXBkYXRlQ29sb3IpIHtcbiAgICBjb2xvclBpY2tlcih7Y29sb3JTZWxlY3RlZDogZnVuY3Rpb24gKGNvbG9yKSB7XG4gICAgICAgIHRoaXMudl9jb2xvciA9IGNvbG9yXG4gICAgICAgIHVwZGF0ZUNvbG9yKGNvbG9yKVxuICAgIH0sIGN1cnJlbnRDb2xvcjogY3VycmVudENvbG9yfSlcbn1cblxuXG4iLCJpbXBvcnQgeyBlIH0gZnJvbSAnLi4vdGVtcGxhdGVyL3JlbmRlcmVyJ1xuY29uc3QgeyBidXR0b24sIGksIGRpdiB9ID0gZS5lbGVtZW50c1xuY29uc3QgZ2V0SGFuZGxlID0gZS5nZXRIYW5kbGVcblxuLyoqXG4gKiBCcnVzaCBTaXplIEJ1dHRvbiBzZWxlY3RvciBjb21wb25lbnRcbiAqIFxuICogQGV4cG9ydFxuICogQHBhcmFtIHthbnl9IGNvbmZpZyBcbiAqIEBwYXJhbSB7RWxlbWVudERlZmluaXRpb259IG1haW5CdXR0b25cbiAqIEBwYXJhbSB7RWxlbWVudERlZmluaXRpb25bXX0gW292ZXJsYXlDb250ZW50XVxuICogQHJldHVybnMgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkcmFnQnV0dG9uKGNvbmZpZywgbWFpbkJ1dHRvbiwgLi4ub3ZlcmxheUNvbnRlbnQpIHtcblxuICAgIC8vIGRpdih7Y2xhc3M6ICdjLWJydXNoLXNpemVfX2RyYWctYXJyb3dzJ30sXG4gICAgLy8gICAgIGkoeyBjbGFzczogJ21hdGVyaWFsLWljb25zIG1kLWRhcmsgbWQtNDgnLCB0ZXh0Q29udGVudDogJ2tleWJvYXJkX2Fycm93X2xlZnQnIH0pLFxuICAgIC8vICAgICBpKHsgY2xhc3M6ICdtYXRlcmlhbC1pY29ucyBtZC1kYXJrIG1kLTQ4JywgdGV4dENvbnRlbnQ6ICdrZXlib2FyZF9hcnJvd19sZWZ0JyB9KVxuICAgIC8vIClcbiAgICBtYWluQnV0dG9uLnNldEF0dHJpYnV0ZSgndl9kcmFnZ2luZycsIGZhbHNlKVxuICAgIG1haW5CdXR0b24uc2V0QXR0cmlidXRlKCdzZXRfZHJhZ2dpbmcnLCBmdW5jdGlvbihkcmFnZ2luZykge1xuICAgICAgICB0aGlzWyhkcmFnZ2luZykgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oJ28taGlkZScpXG4gICAgfSlcbiAgICBjb25maWcgPSBPYmplY3QuYXNzaWduKGNvbmZpZywge1xuICAgICAgICBjbGFzczogJ28tcmVsYXRpdmUnLCBcbiAgICAgICAgdl9kcmFnZ2luZzogZmFsc2UsIFxuICAgICAgICBlX2RyYWdnaW5nOiBzZXREcmFnZ2luZyxcbiAgICAgICAgdl9kcmFnTG9jYXRpb246IG51bGwsXG4gICAgICAgIGVfb25EcmFnTG9jYXRpb25DaGFuZ2VkOiBmdW5jdGlvbihkcmFnTG9jYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMudl9kcmFnTG9jYXRpb24gPSBkcmFnTG9jYXRpb25cbiAgICAgICAgfVxuICAgICB9KVxuICAgIFxuICAgIHJldHVybiBkaXYoY29uZmlnLFxuICAgICAgICBtYWluQnV0dG9uLFxuICAgICAgICBkaXYoe1xuICAgICAgICAgICAgY2xhc3M6ICdjLWRyYWctb3ZlcmxheScsIFxuICAgICAgICAgICAgdl9kcmFnZ2luZzogZmFsc2UsXG4gICAgICAgICAgICBzZXRfZHJhZ2dpbmc6IGZ1bmN0aW9uKGRyYWdnaW5nKSB7IHRoaXMuc2V0QWN0aXZlKGRyYWdnaW5nKSB9LFxuICAgICAgICAgICAgb25jdXN0b21kcmFnOiBnZXREcmFnSGFuZGxlcihtYWluQnV0dG9uKSxcbiAgICAgICAgfSwgb3ZlcmxheUNvbnRlbnQpLFxuICAgICAgICBtYWluQnV0dG9uLmNsb25lKCdkcmFnYnV0dG9uJywgeyBcbiAgICAgICAgICAgIG9uUmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZENsYXNzKCdvLWZpeGVkIG8tbm9uZScpXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJycpXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3ZfZHJhZ0xvY2F0aW9uJywgbnVsbClcbiAgICAgICAgICAgICAgICB0aGlzLmFkZEVtaXRIYW5kbGVyKCdzZXRfZHJhZ2dpbmcnLCBmdW5jdGlvbihkcmFnZ2luZykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEFjdGl2ZShkcmFnZ2luZylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHRoaXMuYWRkRW1pdEhhbmRsZXIoJ3NldF9kcmFnTG9jYXRpb24nLCBmdW5jdGlvbih4eSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXh5KSB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHlsZSA9ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0eWxlID0gYGxlZnQ6ICR7eHkueH1weDsgdG9wOiAke3h5Lnl9cHg7YFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXREcmFnSGFuZGxlcihtYWluQnV0dG9uKSB7XG4gICAgLy8gaGVyZSB3ZSBuZWVkIHRvIGRldGVjdCBxdWljayBleGl0IGFuZCBhc3N1bWUgdGhhdCBpdCBpcyBhIGNsaWNrXG4gICAgbGV0IHNQb2ludCA9IHt3aW46IHt4OiAwLCB5OiAwfSwgdmlldzoge3g6IDAsIHk6MH19XG4gICAgbGV0IG1vdmluZyA9IGZhbHNlXG4gICAgbGV0IGlzQ2xpY2sgPSB0cnVlXG4gICAgbGV0IHRpbWVvdXRJZCA9IG51bGxcbiAgICBsZXQgZXZlbnRIYW5kbGVzID0ge1xuICAgICAgICBzdGFydDogZnVuY3Rpb24gKGV2LCBlbGVtLCB4eSkge1xuICAgICAgICAgICAgaXNDbGljayA9IHRydWVcbiAgICAgICAgICAgIG1vdmluZyA9IHRydWVcbiAgICAgICAgICAgIHNQb2ludC52aWV3ID0geHlcbiAgICAgICAgICAgIHNQb2ludC53aW4gPSB0aGlzLndpbmRvd09mZnNldCgpXG4gICAgICAgICAgICAvLyBzUG9pbnQud2luLnkgPSAzMDBcbiAgICAgICAgICAgIHNldEZpbmlzaERlbGF5LmNhbGwodGhpcywgZXYsIGVsZW0sIHh5LCA1MDApXG4gICAgICAgICAgICB0aGlzLmVtaXQoJ29uRHJhZ0xvY2F0aW9uQ2hhbmdlZCcsIHt4OiBzUG9pbnQud2luLngsICB5OiBzUG9pbnQud2luLnl9KVxuICAgICAgICAgICAgdGhpcy5lbWl0KCdkcmFnZ2luZycsIHRydWUpXG4gICAgICAgIH0sXG4gICAgICAgIG1vdmU6IGZ1bmN0aW9uKGV2LCBlbGVtLCB4eSkge1xuICAgICAgICAgICAgaWYgKCFtb3ZpbmcgfHwgIXh5KSB7IHJldHVybiB9XG4gICAgICAgICAgICBzZXRGaW5pc2hEZWxheS5jYWxsKHRoaXMsIGV2LCBlbGVtLCB4eSwgNTAwKVxuICAgICAgICAgICAgbGV0IG1vdmUgPSB4eS54IC0gc1BvaW50LnZpZXcueFxuICAgICAgICAgICAgbGV0IG1vdmVJbldpbiA9IG1vdmUgKyBzUG9pbnQud2luLnhcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhtb3ZlKSA+IDEwKSB7XG4gICAgICAgICAgICAgICAgaXNDbGljayA9IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ29uRHJhZ0xvY2F0aW9uQ2hhbmdlZCcsIHt4OiBtb3ZlSW5XaW4sICB5OiBzUG9pbnQud2luLnl9KVxuICAgICAgICAgICAgdGhpcy5lbWl0KCdvbk1vdmUnLCBldiwgeHkueCkgICAgICAgICAgICBcbiAgICAgICAgfSxcbiAgICAgICAgZmluaXNoOiBmdW5jdGlvbihldiwgZWxlbSwgeHkpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpXG4gICAgICAgICAgICBpZiAoIW1vdmluZykgeyByZXR1cm4gfVxuICAgICAgICAgICAgbW92aW5nID0gZmFsc2VcbiAgICAgICAgICAgIHRoaXMuZW1pdCgnZHJhZ2dpbmcnLCBmYWxzZSlcbiAgICAgICAgICAgIGlmIChpc0NsaWNrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdvbmxpY2snLCBldiwgbWFpbkJ1dHRvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZW1pdCgnb25EcmFnTG9jYXRpb25DaGFuZ2VkJywgbnVsbClcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRGaW5pc2hEZWxheShldiwgZWxlbSwgeHksIHRpbWVvdXQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZClcbiAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiBldmVudEhhbmRsZXMuZmluaXNoLmNhbGwodGhpcywgZXYsIGVsZW0sIHh5KSwgdGltZW91dClcbiAgICB9XG4gICAgcmV0dXJuIGV2ZW50SGFuZGxlc1xufVxuXG5mdW5jdGlvbiBzZXREcmFnZ2luZyhkcmFnZ2luZykge1xuICAgIHRoaXMudl9kcmFnZ2luZyA9IGRyYWdnaW5nXG59IFxuIiwiaW1wb3J0IHsgZSB9IGZyb20gJy4uL3RlbXBsYXRlci9yZW5kZXJlcidcbmltcG9ydCB7IGRyYWdCdXR0b24gfSBmcm9tICcuL2RyYWdCdXR0b24nXG5jb25zdCB7IGJ1dHRvbiwgaSwgZGl2IH0gPSBlLmVsZW1lbnRzXG5jb25zdCBnZXRIYW5kbGUgPSBlLmdldEhhbmRsZVxuXG4vKipcbiAqIEJydXNoIFNpemUgQnV0dG9uIHNlbGVjdG9yIGNvbXBvbmVudFxuICogXG4gKiBAZXhwb3J0XG4gKiBAcmV0dXJucyBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJydXNoU2l6ZUJ1dHRvbigpIHtcbiAgICBcbiAgICByZXR1cm4gZHJhZ0J1dHRvbih7ZV9vbk1vdmU6IGhhbmRsZU1vdmUsIGVfb25jbGljazogaGFuZGxlQ2xpY2ssIF91cGRhdGVTaXplOiB1cGRhdGVTaXplfSxcbiAgICAgICAgYnV0dG9uKHtjbGFzczogJ2J0biBjaXJjbGUgYnJ1c2gtc2l6ZS1idG4gby1mbGV4J30sXG4gICAgICAgICAgaSh7IGNsYXNzOiAnbWF0ZXJpYWwtaWNvbnMgbWQtbGlnaHQgbWQtMTgnfSwgJ2JydXNoJyksXG4gICAgICAgICAgaSh7IGNsYXNzOiAnbWF0ZXJpYWwtaWNvbnMgbWQtbGlnaHQgbWQtMzYnfSwgJ2JydXNoJyksXG4gICAgICAgICksXG4gICAgICAgIGRpdih7Y2xhc3M6ICdvLXdpZHRoLS0xMDAgby1oZWlnaHQtLTEwMCBvLXJlbGF0aXZlJ30sIFxuICAgICAgICAgIGRpdih7Y2xhc3M6ICdvLWZsZXgtLWNvbHVtbiBvLXdpZHRoLS0xMDAgby1oZWlnaHQtLTEwMCd9LFxuICAgICAgICAgICAgZGl2KHtjbGFzczogJ28tZmxleC0tY29sdW1uIG8tbWFyZ2luLS1hdXRvJ30sXG4gICAgICAgICAgICAgIGRpdih7Y2xhc3M6ICdjLWJydXNoLXNpemVfX2VkaXRpbmctb3ZlcmxheSd9LFxuICAgICAgICAgICAgICAgIGRpdih7XG4gICAgICAgICAgICAgICAgICBjbGFzczogJ2NpcmNsZSBvLWJrZy0tYmxhY2sgby1tYXJnaW4tLWgtYXV0byBvLW1hcmdpbi0tYi0yMCcsIFxuICAgICAgICAgICAgICAgICAgdl9zaXplOiAxLFxuICAgICAgICAgICAgICAgICAgc2V0X3NpemU6IGZ1bmN0aW9uKG5ld1NpemUpIHsgdGhpcy5zdHlsZSA9IGB3aWR0aDogJHtuZXdTaXplfXB4OyBoZWlnaHQ6ICR7bmV3U2l6ZX1weDtgIH0sXG4gICAgICAgICAgICAgICAgICBzdHlsZTogJycsXG4gICAgICAgICAgICAgICAgICBoYW5kbGU6ICdzaXplRGlzcGxheSdcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBkaXYoe1xuICAgICAgICAgICAgICAgICAgY2xhc3M6ICdoZGcgaGRnLS0yJyxcbiAgICAgICAgICAgICAgICAgIHZfc2l6ZTogMSxcbiAgICAgICAgICAgICAgICAgIHNldF9zaXplOiBmdW5jdGlvbihuZXdTaXplKSB7IHRoaXMudGV4dENvbnRlbnQgPSBgJHtuZXdTaXplfXB4IGxpbmUgd2lkdGhgIH0sXG4gICAgICAgICAgICAgICAgfSwgJycpXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICApLFxuICAgICAgICAgIGRpdih7Y2xhc3M6ICdjLWJydXNoLXNpemVfX2luZGljYXRvci1jb250YWluZXInfSxcbiAgICAgICAgICAgIGRpdih7Y2xhc3M6ICdjLWJydXNoLXNpemVfX2luZGljYXRvcid9LFxuICAgICAgICAgICAgICBbNTAsIDM5LCAyNywgMTUsIDNdLm1hcCgoc2l6ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBkaXYoe2NsYXNzOiAnY2lyY2xlIG8tYmtnLS1ibGFjayBvLW1hcmdpbi0tdC1hdXRvJywgc3R5bGU6IGB3aWR0aDogJHtzaXplfXB4OyBoZWlnaHQ6ICR7c2l6ZX1weGB9KVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGRpdih7Y2xhc3M6ICdjLWJydXNoLXNpemVfX2luZGljYXRvci1saW5lIG8tYmtnLS1ibGFjayd9KVxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgIClcblxufVxuXG5mdW5jdGlvbiBoYW5kbGVNb3ZlKGV2LCBtb3ZlWCkge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGluZ01vdmUnKVxuICAgIGxldCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoIC0gMTUwXG4gICAgbGV0IG11bHRpcGxpZXIgPSB3aWR0aCAvIDUwXG4gICAgaWYgKG1vdmVYID4gd2lkdGgpIHsgcmV0dXJuIH1cbiAgICBsZXQgYnJ1c2hTaXplID0gKHdpZHRoIC0gbW92ZVgpIC8gbXVsdGlwbGllclxuICAgIHRoaXMuX3VwZGF0ZVNpemUoYnJ1c2hTaXplKVxufVxuXG5mdW5jdGlvbiBoYW5kbGVDbGljayhldiwgZWxlbSkge1xuICAgIGNvbnNvbGUud2FybignY2xpY2tlZCEhIScpXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNpemUoc2l6ZSkge1xuICAgIHNpemUgPSBNYXRoLnJvdW5kKE1hdGgubWF4KHNpemUsIDEpKVxuICAgIHRoaXMuZW1pdCgndXBkYXRlU2l6ZScsIHNpemUpXG59XG4iLCJpbXBvcnQgeyBlIH0gZnJvbSAnLi4vdGVtcGxhdGVyL3JlbmRlcmVyJ1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLi9jb2xvci9Db2xvcidcbmltcG9ydCB7IGNvbG9yQnV0dG9uIH0gZnJvbSAnLi9jb2xvckJ1dHRvbidcbmltcG9ydCB7IGJydXNoU2l6ZUJ1dHRvbiB9IGZyb20gJy4vYnJ1c2hTaXplQnV0dG9uJ1xuaW1wb3J0IHsgU2V0dGluZyB9IGZyb20gJy4uL3NldHRpbmdzL1NldHRpbmcnXG5cbmNvbnN0IHsgZGl2LCBidXR0b24sIGksIHZpcnR1YWwgfSA9IGUuZWxlbWVudHNcbmNvbnN0IGdldEhhbmRsZSA9IGUuZ2V0SGFuZGxlXG5cbi8qKlxuICogQnJ1c2ggY29udHJvbCB2aXJ0dWFsIGNvbXBvbmVudFxuICogXG4gKiBAZXhwb3J0XG4gKiBAcmV0dXJucyB7RWxlbWVudERlZmluaXRpb259XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBicnVzaENvbnRyb2woKSB7XG5cbiAgICByZXR1cm4gdmlydHVhbCh7fSxcbiAgICAgICAgY29sb3JCdXR0b24oKSxcbiAgICAgICAgYnJ1c2hTaXplQnV0dG9uKClcbiAgICApXG59XG5cbiIsIlxuZXhwb3J0IGRlZmF1bHQge1xuICAgICQsICQkXG59XG5cbmZ1bmN0aW9uICQocXVlcnkpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihxdWVyeSlcbn1cblxuZnVuY3Rpb24gJCQocXVlcnkpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSU9TKCkge1xuICAgIHJldHVybiBbJ2lQaG9uZScsICdpUGFkJywgJ2lQb2QnXS5pbmNsdWRlcyhuYXZpZ2F0b3IucGxhdGZvcm0pXG59IiwiaW1wb3J0IHsgaW5pdCwgY2xlYXIsIHVuZG8sIHVwZGF0ZVNldHRpbmdzLCBkb3dubG9hZEltYWdlIH0gZnJvbSAnLi4vZHJhd2luZy9kcmF3aW5nJ1xuaW1wb3J0IHsgZSB9IGZyb20gJy4uL3RlbXBsYXRlci9yZW5kZXJlcidcbmltcG9ydCB7IGNvbG9yQnV0dG9uIH0gZnJvbSAnLi9jb2xvckJ1dHRvbidcbmltcG9ydCB7IGJydXNoQ29udHJvbCB9IGZyb20gJy4vYnJ1c2hDb250cm9sJ1xuaW1wb3J0IHsgU2V0dGluZyB9IGZyb20gJy4uL3NldHRpbmdzL1NldHRpbmcnXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uL2NvbG9yL0NvbG9yJ1xuaW1wb3J0IHsgaXNJT1MgfSBmcm9tICcuLi91dGlscyc7XG5cbmNvbnN0IHsgYnV0dG9uLCBpLCBkaXYsIGEgfSA9IGUuZWxlbWVudHNcbmNvbnN0IGdldEhhbmRsZSA9IGUuZ2V0SGFuZGxlXG5cbmxldCBzZXR0aW5nc1Nob3dpbmcgPSBmYWxzZVxubGV0IGNvbG9yID0gbG9hZFByZXZpb3VzQ29sb3IoKVxubGV0IHNpemUgPSBsb2FkUHJldmlvdXNTaXplKClcblxuLy8gaW5pdGlhbGl6ZSBkcmF3aW5nXG5pbml0KClcblxuZnVuY3Rpb24gc2hvd1NldHRpbmdzKGxheW91dHMpIHtcbiAgICBzZXR0aW5nc1Nob3dpbmcgPSAhc2V0dGluZ3NTaG93aW5nXG4gICAgbGF5b3V0cy5mb3JFYWNoKChsYXlvdXQpID0+IGxheW91dC5zZXRBY3RpdmUoc2V0dGluZ3NTaG93aW5nKSlcbiAgICBjb25zb2xlLmxvZygnc2V0dGluZ3MtY2xpY2tlZCcpXG59XG5cbi8qKlxuICogXG4gKiBcbiAqIEBleHBvcnRcbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnRyb2xPdmVybGF5KGNvbmZpZykge1xuICAgIGxldCBzZXR0aW5ncyA9IG5ldyBTZXR0aW5nKGNvbG9yLCBzaXplLCBjb2xvci5hKVxuICAgIHVwZGF0ZVNldHRpbmdzKHNldHRpbmdzKVxuXG4gICAgcmV0dXJuIGRpdih7XG4gICAgICAgIGNsYXNzOiAnYy1vdmVybGF5LWNvbnRhaW5lcicsXG4gICAgICAgIF91cGRhdGVTZXR0aW5nczogZnVuY3Rpb24gKCkgeyB1cGRhdGVTZXR0aW5ncyh0aGlzLnZfc2V0dGluZ3MpIH0sXG4gICAgICAgIHZfc2V0dGluZ3M6IHNldHRpbmdzLFxuICAgICAgICBzZXRfc2V0dGluZ3M6IHNldHRpbmdzQ2hhbmdlZCxcbiAgICAgICAgdl9jb2xvcjogY29sb3IsXG4gICAgICAgIHZfc2l6ZTogc2l6ZSxcbiAgICAgICAgZV91cGRhdGVDb2xvcjogc2V0Q2hhbmdlKCd2X2NvbG9yJyksXG4gICAgICAgIGVfdXBkYXRlU2l6ZTogc2V0Q2hhbmdlKCd2X3NpemUnKVxuICAgIH0sXG4gICAgICAgIGdldEJ1dHRvbnMoKVxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0QnV0dG9ucygpIHtcbiAgICBsZXQgYnV0dG9ucyA9IFtcbiAgICAgICAgZGl2KHsgY2xhc3M6ICdjLWVkaXRpbmctYnV0dG9ucycgfSxcbiAgICAgICAgICAgIGJ1dHRvbih7IGNsYXNzOiAnYnRuIGNpcmNsZSBjbGVhci1idG4nLCBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7IGNsZWFyKHRydWUpIH0gfSxcbiAgICAgICAgICAgICAgICBpKHsgY2xhc3M6ICdtYXRlcmlhbC1pY29ucyBtZC1saWdodCBtZC0zNicgfSwgJ2RlbGV0ZV9mb3JldmVyJylcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBidXR0b24oeyBjbGFzczogJ2J0biBjaXJjbGUgdW5kby1idG4nLCBvbmNsaWNrOiB1bmRvIH0sXG4gICAgICAgICAgICAgICAgaSh7IGNsYXNzOiAnbWF0ZXJpYWwtaWNvbnMgbWQtbGlnaHQgbWQtMzYnIH0sICd1bmRvJylcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBicnVzaENvbnRyb2woKVxuICAgICAgICApXG4gICAgXVxuICAgIGlmICghaXNJT1MoKSkge1xuICAgICAgICBidXR0b25zLnVuc2hpZnQoZG93bmxvYWRBbmNob3IoKSlcbiAgICB9XG4gICAgcmV0dXJuIGJ1dHRvbnNcbn1cblxuZnVuY3Rpb24gZG93bmxvYWRBbmNob3IoKSB7XG4gICAgcmV0dXJuIGEoeyBjbGFzczogJ2J0biBjaXJjbGUgZG93bmxvYWQtYnRuJywgaHJlZjogJyMnLCBkb3dubG9hZDogJ2RyYXdpbmcucG5nJywgb25jbGljazogZG93bmxvYWRJbWFnZSB9LFxuICAgICAgICBpKHsgY2xhc3M6ICdtYXRlcmlhbC1pY29ucyBtZC1saWdodCBtZC0zNicsIHRleHRDb250ZW50OiAnc2F2ZScgfSlcbiAgICApXG59XG5cbmZ1bmN0aW9uIHNldENoYW5nZShrZXkpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gc2V0VmFsdWUobmV3VmFsKSB7XG4gICAgICAgIHRoaXNba2V5XSA9IG5ld1ZhbFxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KG5ld1ZhbCkpXG4gICAgICAgIHRoaXMudl9zZXR0aW5ncyA9IG5ldyBTZXR0aW5nKHRoaXMudl9jb2xvciwgdGhpcy52X3NpemUsIHRoaXMudl9jb2xvci5hKVxuICAgICAgICB0aGlzLl91cGRhdGVTZXR0aW5ncygpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzZXR0aW5nc0NoYW5nZWQobmV3U2V0dGluZykge1xuICAgIHRoaXMudl9zZXR0aW5ncyA9IG5ld1NldHRpbmdcbiAgICB0aGlzLl91cGRhdGVTZXR0aW5ncygpXG59XG5cbmZ1bmN0aW9uIGxvYWRQcmV2aW91c0NvbG9yKCkge1xuICAgIGxldCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndl9jb2xvcicpXG4gICAgaWYgKHN0b3JlZCkge1xuICAgICAgICByZXR1cm4gQ29sb3IuZnJvbU9iamVjdChKU09OLnBhcnNlKHN0b3JlZCkpXG4gICAgfVxuICAgIHJldHVybiBuZXcgQ29sb3IoNDAsIDQwLCA0MCwgMSlcbn1cblxuZnVuY3Rpb24gbG9hZFByZXZpb3VzU2l6ZSgpIHtcbiAgICBsZXQgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Zfc2l6ZScpXG4gICAgaWYgKHN0b3JlZCkge1xuICAgICAgICByZXR1cm4gTnVtYmVyKHN0b3JlZClcbiAgICB9XG4gICAgcmV0dXJuIDVcbn1cblxuIiwiaW1wb3J0IHsgY29udHJvbE92ZXJsYXkgfSBmcm9tICcuL2NvbXBvbmVudHMvY29udHJvbE92ZXJsYXknXG5pbXBvcnQgdSBmcm9tICcuL3V0aWxzJ1xuaW1wb3J0IFwiLi4vYXBwLmNzc1wiXG5cbi8vIGluaXRpYWxpemUgZHJhd2luZ1xuc2V0dXAoKVxuXG5mdW5jdGlvbiBzZXR1cCgpIHtcbiAgY29udHJvbE92ZXJsYXkoKS5yZW5kZXIodS4kKCcjYXBwJykpXG4gIGFkZFNlcnZpY2VXb3JrZXIoKVxufVxuXG5mdW5jdGlvbiBhZGRTZXJ2aWNlV29ya2VyKCkge1xuICBpZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikge1xuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCcuL3N3LmpzJykudGhlbigocmVnaXN0cmF0aW9uKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnU2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uIHN1Y2NlZWRlZDonLCByZWdpc3RyYXRpb24pO1xuXG4gICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZygnU2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ1NlcnZpY2Ugd29ya2VycyBhcmUgbm90IHN1cHBvcnRlZC4nKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbmFibGVQdXNoKHNlcnZpY2VSZWdpc3RyYXRpb24pIHtcbiAgbGV0IG9wdGlvbnMgPSB7XG4gICAgdXNlclZpc2libGVPbmx5OiB0cnVlLFxuICAgIGFwcGxpY2F0aW9uU2VydmVyS2V5OiAnVEVTVERBVEEnXG4gIH1cbiAgc2VydmljZVJlZ2lzdHJhdGlvbi5wdXNoTWFuYWdlci5zdWJzY3JpYmUob3B0aW9ucykudGhlbihcbiAgICBmdW5jdGlvbiAocHVzaFN1YnNjcmlwdGlvbikge1xuICAgICAgY29uc29sZS5sb2cocHVzaFN1YnNjcmlwdGlvbi5lbmRwb2ludCk7XG4gICAgICAvLyBUaGUgcHVzaCBzdWJzY3JpcHRpb24gZGV0YWlscyBuZWVkZWQgYnkgdGhlIGFwcGxpY2F0aW9uXG4gICAgICAvLyBzZXJ2ZXIgYXJlIG5vdyBhdmFpbGFibGUsIGFuZCBjYW4gYmUgc2VudCB0byBpdCB1c2luZyxcbiAgICAgIC8vIGZvciBleGFtcGxlLCBhbiBYTUxIdHRwUmVxdWVzdC5cbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIC8vIER1cmluZyBkZXZlbG9wbWVudCBpdCBvZnRlbiBoZWxwcyB0byBsb2cgZXJyb3JzIHRvIHRoZVxuICAgICAgLy8gY29uc29sZS4gSW4gYSBwcm9kdWN0aW9uIGVudmlyb25tZW50IGl0IG1pZ2h0IG1ha2Ugc2Vuc2UgdG9cbiAgICAgIC8vIGFsc28gcmVwb3J0IGluZm9ybWF0aW9uIGFib3V0IGVycm9ycyBiYWNrIHRvIHRoZVxuICAgICAgLy8gYXBwbGljYXRpb24gc2VydmVyLlxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9