!function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=5)}([function(n,t,e){window,n.exports=function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";e.r(t),e.d(t,"register",(function(){return h})),e.d(t,"override",(function(){return f})),e.d(t,"e",(function(){return g})),e.d(t,"getHandle",(function(){return b}));const o={class:"className"},i="textContent|innerText|innerHTML|className|value|style".split("|").reduce((n,t)=>(n[t]=1,n),{}),r={},a={attach:function(n){this.parentElement=n;let t=this.elem;return t||(t=document.createElement(this.tagName),n.appendChild(t)),t},addEventListener:function(n,t){let e=this;this.elem.addEventListener(n,(function(n){t.apply(e,[n,e.elem])}))},setProp:function(n,t){this.elem[n]=t},addEmitHandler:function(n,t){this[n]=t},setAttribute:function(n,t){let e=o[n]||n;this.elem?function(n,t,e){let r=o[t]||t,a=p(t,"v_"),c=p(t,"_"),A=n.elem;if(c)return n[r]=e,e;var s={set:(o,r)=>{if(e!==o||r){if(a){n.setVirtual(t,o);let e=n=>(n.renderedChildren||[]).reduce((n,t)=>n.concat([t],e(t)),[]);e(n).forEach(n=>{if(!n.hasOwnProperty(t))return;n[t]=o;let e=t.replace("v_","set_");n[e]&&n[e].apply(n,[o])})}else i[t]||l(o)?n.setProp(t,o):A.setAttribute(t,o);e=o}},get:()=>"style"===t&&n.element&&n.element.style||e};Object.defineProperty(n,r,s),s.set(e,1),n[r]}(this,e,t):this.attr[n]=t},setVirtual:function(n,t){},renderChildren:function(n,t){return t.map(t=>(t.render||m("child must have render function"),t.parent=this,t.render(n)))},processRender:function(n){let t=this.attach(n,this);this.elem=t,this.element=t,d(this,A.ATTACH),this.renderedChildren=this.renderChildren(t,this.children);const e=n=>p(n,"e_")||p(n,"set_");return Object.getOwnPropertyNames(this.attr.__proto__).forEach(n=>{e(n)&&this.addEmitHandler(n,this.attr[n])}),Object.keys(this.attr).forEach(n=>{let t=this.attr[n];if(!(c.indexOf(n)>-1)&&n)return p(n,"on")?this.addEventListener(n.slice(2),t):e(n)?this.addEmitHandler(n,t):void this.setAttribute(n,t)}),d(this,A.RENDER),this},remove:function(){this.renderedChildren.forEach(n=>n.remove()),r[this.handle]=null;let n=this.parentElement;n&&n!==this.elem&&n.removeChild(this.elem),this.parent=null,this.parentElement=null,d(this,A.DESTROY)},emit:function(n){if(!this.parent)return;let t="e_"+n,e=Array.from(arguments);this.parent[t]&&this.parent[t].apply(this.parent,e.slice(1)),(this.parent||{}).emit&&this.parent.emit.apply(this.parent,e)}},c=["onRender","onAttach","onDestroy"],A={RENDER:c[0],ATTACH:c[1],DESTROY:c[2]},s=C("string"),l=(C("undefined"),C("boolean")),u=function(){};function d(n,t){n.attr[t]&&n.attr[t].call(n)}function h(n,t){return n||m("tagName must be defined"),function(e){e=e||{};let o=Array.from(arguments).slice(1);return e.render||Array.isArray(e)&&e[0].render?(o.unshift(e),e={}):s(e)?e={textContent:e}:s(o[0])&&(e.textContent=o[0],o=o.slice(1)),Object.assign({tagName:n,children:[].concat.apply([],o),attr:e||{},render:function(n){let t=this.processRender(n);return this.handle=this.handle||t.attr.id||t.attr._id||Symbol(t.tagName),t.elem&&(t.elem.remove=t.remove),r[this.handle]=t,t}},u.prototype,t)}}function p(n,t){return n.slice(0,t.length)===t}function f(n){return function(t,e){return h(t,Object.assign({},n,e))}}Object.keys(a).forEach(n=>u.prototype[n]=a[n]);const g=h;function b(n){return r[n]}function m(n){throw new Error(n)}function C(n){return function(t){return typeof t===n}}}])},function(n,t,e){"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=function(n,t){var e=n[1]||"",o=n[3];if(!o)return e;if(t&&"function"==typeof btoa){var i=(a=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(A," */")),r=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([i]).join("\n")}var a,c,A;return[e].join("\n")}(t,n);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,o){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(o)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&i[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),t.push(A))}},t}},function(n,t,e){var o=e(3),i=e(4);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var r={insert:"head",singleton:!1};o(i,r);n.exports=i.locals||{}},function(n,t,e){"use strict";var o,i=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},r=function(){var n={};return function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[t]=e}return n[t]}}(),a=[];function c(n){for(var t=-1,e=0;e<a.length;e++)if(a[e].identifier===n){t=e;break}return t}function A(n,t){for(var e={},o=[],i=0;i<n.length;i++){var r=n[i],A=t.base?r[0]+t.base:r[0],s=e[A]||0,l="".concat(A," ").concat(s);e[A]=s+1;var u=c(l),d={css:r[1],media:r[2],sourceMap:r[3]};-1!==u?(a[u].references++,a[u].updater(d)):a.push({identifier:l,updater:g(d,t),references:1}),o.push(l)}return o}function s(n){var t=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var i=e.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(n){t.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(t);else{var a=r(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var l,u=(l=[],function(n,t){return l[n]=t,l.filter(Boolean).join("\n")});function d(n,t,e,o){var i=e?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=u(t,i);else{var r=document.createTextNode(i),a=n.childNodes;a[t]&&n.removeChild(a[t]),a.length?n.insertBefore(r,a[t]):n.appendChild(r)}}function h(n,t,e){var o=e.css,i=e.media,r=e.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var p=null,f=0;function g(n,t){var e,o,i;if(t.singleton){var r=f++;e=p||(p=s(t)),o=d.bind(null,e,r,!1),i=d.bind(null,e,r,!0)}else e=s(t),o=h.bind(null,e,t),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return o(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;o(n=t)}else i()}}n.exports=function(n,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var e=A(n=n||[],t);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<e.length;o++){var i=c(e[o]);a[i].references--}for(var r=A(n,t),s=0;s<e.length;s++){var l=c(e[s]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}e=r}}}},function(n,t,e){"use strict";e.r(t);var o=e(1),i=e.n(o)()(!0);i.push([n.i,'*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  overflow: hidden;\n  font-family: "Helvetica";\n  font-size: 1rem;\n}\n\nbutton {\n  outline: none;\n  color: rgb(70, 70, 70);\n}\n\n#app {\n  pointer-events: none;\n  position: relative;\n  top: 0;\n  width: 100vw;\n  left: 0;\n  height: 100vh;\n  background-color: #fff;\n}\n\n.canvas {\n  position: fixed;\n  margin: auto;\n  background: transparent;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;\n}\n\n.canvas.base {\n  background: #fff;\n  z-index: 2;\n}\n\n/* Rules for sizing the icon. */\n.material-icons.md-13 {\n  font-size: 13px;\n}\n.material-icons.md-18 {\n  font-size: 18px;\n}\n.material-icons.md-24 {\n  font-size: 24px;\n}\n.material-icons.md-36 {\n  font-size: 36px;\n}\n.material-icons.md-48 {\n  font-size: 48px;\n}\n\n/* Rules for using icons as black on a light background. */\n.material-icons.md-dark {\n  color: rgba(0, 0, 0, 0.54);\n}\n.material-icons.md-dark.md-inactive {\n  color: rgba(0, 0, 0, 0.26);\n}\n\n/* Rules for using icons as white on a dark background. */\n.material-icons.md-light {\n  color: rgba(255, 255, 255, 1);\n}\n.material-icons.md-light.md-inactive {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.btn {\n  border-radius: 5px;\n  pointer-events: all;\n  font-size: 24px;\n  padding: 7px 20px;\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  outline: none;\n}\n\n.circle {\n  border-radius: 50%;\n}\n\n.btn.circle {\n  border-radius: 50%;\n  width: 55px;\n  height: 55px;\n  padding: 7px 5px 5px 5px;\n}\n\n.o-relative {\n  position: relative;\n}\n\n.o-absolute {\n  position: absolute;\n}\n\n.o-fixed {\n  position: fixed;\n}\n\n.o-hide {\n  opacity: 0;\n}\n\n.o-margin--auto {\n  margin: auto;\n}\n\n.o-margin--v-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.o-margin--t-auto {\n  margin-top: auto;\n}\n\n.o-margin--h-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.o-margin--b-20 {\n  margin-bottom: 20px;\n}\n\n.o-flex {\n  display: flex;\n}\n.o-flex--space-btw {\n  justify-content: space-between;\n}\n\n.o-flex--column {\n  display: flex;\n  flex-direction: column;\n}\n\n.o-none,\n.o-none.o-flex {\n  display: none;\n}\n.o-none.active {\n  display: block;\n}\n.o-none.o-flex.active {\n  display: flex;\n}\n\n.o-bkg--black {\n  background-color: #202020;\n}\n\n.o-width--100 {\n  width: 100%;\n}\n\n.o-height--100 {\n  height: 100%;\n}\n\n.o-width--80 {\n  width: 80%;\n}\n\n.o-height--80 {\n  height: 80%;\n}\n\n.o-width--20 {\n  width: 20%;\n}\n\n.o-height--20 {\n  height: 20%;\n}\n\n.o-hide.active {\n  opacity: 1;\n}\n\n.c-drag-overlay {\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  pointer-events: all;\n}\n.c-drag-overlay > * {\n  display: none;\n}\n\n.c-drag-overlay.active {\n  position: fixed;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(120, 120, 120, 0.5);\n  pointer-events: all;\n}\n\n.c-drag-overlay.active > * {\n  display: block;\n}\n\n.c-overlay-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  z-index: 4;\n  pointer-events: none;\n}\n\n.c-editing-buttons {\n  z-index: 10;\n  width: 60px;\n  position: absolute;\n  justify-content: center;\n  right: 15px;\n  bottom: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.c-editing-buttons .btn {\n  margin-top: 20px;\n}\n\n/** Brush size button**/\n.brush-size-btn {\n  padding: 5px;\n  background-color: rgb(120, 120, 120);\n}\n.brush-size-btn .md-18 {\n  margin-left: 6px;\n}\n.brush-size-btn .md-36 {\n  margin-left: -12px;\n}\n.brush-size-btn.active {\n  z-index: 4;\n  pointer-events: none;\n  padding-top: 6px;\n}\n\n.c-brush-size__editing-overlay {\n  display: flex;\n  padding: 35px;\n  border-radius: 5px;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n}\n\n.c-brush-size__indicator-container {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: calc(100% - 180px);\n  left: 20px;\n  bottom: 40px;\n  height: 100px;\n}\n\n.c-brush-size__indicator {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n}\n\n.c-brush-size__indicator-line {\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  border-radius: 1px;\n}\n\n.c-brush-size__drag-arrows {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 80px;\n  right: 80px;\n  bottom: 15px;\n  height: 50px;\n}\n\n.download-btn {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  background-color: rgb(102, 187, 106);\n}\n\n.download-btn i {\n  margin: 2px 0 0 3px;\n}\n\n.download-btn:hover,\n.download-btn:focus {\n  background-color: rgb(76, 175, 80);\n}\n\n.clear-btn {\n  background-color: rgb(200, 80, 80);\n}\n.clear-btn:hover,\n.clear-btn:focus {\n  background-color: rgba(200, 80, 80, 0.85);\n}\n\n.undo-btn {\n  background-color: rgb(120, 120, 120);\n}\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/* \n.color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 5px;\n  width: 0;\n  padding: 10px;\n  overflow: hidden;\n  transition: width 0.35s, opacity 0.85s ease-out;\n  opacity: 0;\n}\n\n.color-container.active {\n  opacity: 1;\n  width: calc(100vw - 80px);\n  transition: width 0.35s, opacity 0.05s ease-in;\n}\n\n.inner-color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  opacity: 1;\n  z-index: 0;\n} */\n\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/** modal **/\n\n.c-modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 10;\n  /* opacity: 0; */\n  transition: opacity 2s ease-in;\n}\n/* .c-modal:not(:empty) {\n  opacity: 1;\n} */\n\n.c-modal__overlay {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(120, 120, 120, 0.8);\n}\n.c-modal__inner-container {\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n  width: 400px;\n  height: 500px;\n  max-width: 79%;\n  max-height: 95%;\n}\n.c-modal__content {\n  width: 100%;\n  height: calc(100% - 60px);\n}\n.c-modal__btn-container {\n  display: flex;\n  width: 100%;\n}\n.c-modal__btn-close {\n  box-shadow: none;\n  width: 100%;\n  border-radius: 0;\n  height: 60px;\n  /*   background-color: rgba(40,90,190, .5) */\n}\n\n/** Tabs **/\n\n.c-tab-layout {\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.c-tab-layout__container {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.c-tab-layout__button-container {\n  display: flex;\n  width: 100%;\n}\n\n.c-tab-layout__tab {\n  display: none;\n}\n\n.c-tab-layout__tab.active {\n  display: block;\n  overflow: hidden;\n}\n\n.c-tab-layout__button {\n  display: flex;\n  flex-grow: 1;\n  margin: 0;\n  line-height: 20px;\n  font-size: 16px;\n  border: none;\n  padding: 15px;\n  background-color: rgba(90, 90, 90, 0.2);\n  text-transform: uppercase;\n  text-align: center;\n}\n\n.c-tab-layout__button {\n  border-right: solid 1px rgba(70, 70, 100, 0.5);\n}\n.c-tab-layout__button:last-child {\n  border-right: none;\n}\n\n.c-tab-layout__button.active {\n  /*   border-top: solid 5px rgb(95, 151, 224); */\n  background-color: #fff;\n}\n/** color picker **/\n\n.c-color-picker__tabs {\n  min-width: 250px;\n  min-height: 350px;\n  max-height: 100%;\n}\n\n.c-color-picker {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 10px auto;\n}\n\n.c-color-picker__display {\n  width: 130px;\n  height: 90px;\n  border-radius: 30px;\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  margin: 10px auto;\n}\n\n.c-color-picker__sliders {\n  display: flex;\n  flex-direction: column;\n  margin: 5px auto;\n}\n\n.c-color-picker__range-label {\n  display: block;\n}\n\n.c-color-picker__range {\n  display: block;\n  height: 20px;\n  width: 200px;\n}\n\n/** Swatches **/\n\n.c-color-swatches__container {\n  margin: 10px auto;\n  overflow: hidden;\n}\n\n.c-color-swatches {\n  overflow: auto;\n  max-height: 270px;\n  height: 100%;\n  padding: 5px 20px;\n  margin: 0 auto;\n}\n\n.c-color-swatches .btn {\n  margin: 5px;\n}\n\n.txt {\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n}\n\n.hdg {\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.hdg--1 {\n  font-size: 2rem;\n}\n\n.hdg--2 {\n  font-size: 1.5rem;\n}\n\n.hdg--3 {\n  font-size: 1.3rem;\n}\n',"",{version:3,sources:["webpack://app.css"],names:[],mappings:"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",sourcesContent:['*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  overflow: hidden;\n  font-family: "Helvetica";\n  font-size: 1rem;\n}\n\nbutton {\n  outline: none;\n  color: rgb(70, 70, 70);\n}\n\n#app {\n  pointer-events: none;\n  position: relative;\n  top: 0;\n  width: 100vw;\n  left: 0;\n  height: 100vh;\n  background-color: #fff;\n}\n\n.canvas {\n  position: fixed;\n  margin: auto;\n  background: transparent;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 3;\n}\n\n.canvas.base {\n  background: #fff;\n  z-index: 2;\n}\n\n/* Rules for sizing the icon. */\n.material-icons.md-13 {\n  font-size: 13px;\n}\n.material-icons.md-18 {\n  font-size: 18px;\n}\n.material-icons.md-24 {\n  font-size: 24px;\n}\n.material-icons.md-36 {\n  font-size: 36px;\n}\n.material-icons.md-48 {\n  font-size: 48px;\n}\n\n/* Rules for using icons as black on a light background. */\n.material-icons.md-dark {\n  color: rgba(0, 0, 0, 0.54);\n}\n.material-icons.md-dark.md-inactive {\n  color: rgba(0, 0, 0, 0.26);\n}\n\n/* Rules for using icons as white on a dark background. */\n.material-icons.md-light {\n  color: rgba(255, 255, 255, 1);\n}\n.material-icons.md-light.md-inactive {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.btn {\n  border-radius: 5px;\n  pointer-events: all;\n  font-size: 24px;\n  padding: 7px 20px;\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  outline: none;\n}\n\n.circle {\n  border-radius: 50%;\n}\n\n.btn.circle {\n  border-radius: 50%;\n  width: 55px;\n  height: 55px;\n  padding: 7px 5px 5px 5px;\n}\n\n.o-relative {\n  position: relative;\n}\n\n.o-absolute {\n  position: absolute;\n}\n\n.o-fixed {\n  position: fixed;\n}\n\n.o-hide {\n  opacity: 0;\n}\n\n.o-margin--auto {\n  margin: auto;\n}\n\n.o-margin--v-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.o-margin--t-auto {\n  margin-top: auto;\n}\n\n.o-margin--h-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.o-margin--b-20 {\n  margin-bottom: 20px;\n}\n\n.o-flex {\n  display: flex;\n}\n.o-flex--space-btw {\n  justify-content: space-between;\n}\n\n.o-flex--column {\n  display: flex;\n  flex-direction: column;\n}\n\n.o-none,\n.o-none.o-flex {\n  display: none;\n}\n.o-none.active {\n  display: block;\n}\n.o-none.o-flex.active {\n  display: flex;\n}\n\n.o-bkg--black {\n  background-color: #202020;\n}\n\n.o-width--100 {\n  width: 100%;\n}\n\n.o-height--100 {\n  height: 100%;\n}\n\n.o-width--80 {\n  width: 80%;\n}\n\n.o-height--80 {\n  height: 80%;\n}\n\n.o-width--20 {\n  width: 20%;\n}\n\n.o-height--20 {\n  height: 20%;\n}\n\n.o-hide.active {\n  opacity: 1;\n}\n\n.c-drag-overlay {\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  pointer-events: all;\n}\n.c-drag-overlay > * {\n  display: none;\n}\n\n.c-drag-overlay.active {\n  position: fixed;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(120, 120, 120, 0.5);\n  pointer-events: all;\n}\n\n.c-drag-overlay.active > * {\n  display: block;\n}\n\n.c-overlay-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  z-index: 4;\n  pointer-events: none;\n}\n\n.c-editing-buttons {\n  z-index: 10;\n  width: 60px;\n  position: absolute;\n  justify-content: center;\n  right: 15px;\n  bottom: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.c-editing-buttons .btn {\n  margin-top: 20px;\n}\n\n/** Brush size button**/\n.brush-size-btn {\n  padding: 5px;\n  background-color: rgb(120, 120, 120);\n}\n.brush-size-btn .md-18 {\n  margin-left: 6px;\n}\n.brush-size-btn .md-36 {\n  margin-left: -12px;\n}\n.brush-size-btn.active {\n  z-index: 4;\n  pointer-events: none;\n  padding-top: 6px;\n}\n\n.c-brush-size__editing-overlay {\n  display: flex;\n  padding: 35px;\n  border-radius: 5px;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n}\n\n.c-brush-size__indicator-container {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: calc(100% - 180px);\n  left: 20px;\n  bottom: 40px;\n  height: 100px;\n}\n\n.c-brush-size__indicator {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n}\n\n.c-brush-size__indicator-line {\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  border-radius: 1px;\n}\n\n.c-brush-size__drag-arrows {\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  width: 80px;\n  right: 80px;\n  bottom: 15px;\n  height: 50px;\n}\n\n.download-btn {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  background-color: rgb(102, 187, 106);\n}\n\n.download-btn i {\n  margin: 2px 0 0 3px;\n}\n\n.download-btn:hover,\n.download-btn:focus {\n  background-color: rgb(76, 175, 80);\n}\n\n.clear-btn {\n  background-color: rgb(200, 80, 80);\n}\n.clear-btn:hover,\n.clear-btn:focus {\n  background-color: rgba(200, 80, 80, 0.85);\n}\n\n.undo-btn {\n  background-color: rgb(120, 120, 120);\n}\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/* \n.color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 5px;\n  width: 0;\n  padding: 10px;\n  overflow: hidden;\n  transition: width 0.35s, opacity 0.85s ease-out;\n  opacity: 0;\n}\n\n.color-container.active {\n  opacity: 1;\n  width: calc(100vw - 80px);\n  transition: width 0.35s, opacity 0.05s ease-in;\n}\n\n.inner-color-container {\n  position: absolute;\n  right: 80px;\n  height: 60px;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  opacity: 1;\n  z-index: 0;\n} */\n\n.undo-btn:hover,\n.undo-btn:focus {\n  background-color: rgba(120, 120, 120, 0.85);\n}\n\n/** modal **/\n\n.c-modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 10;\n  /* opacity: 0; */\n  transition: opacity 2s ease-in;\n}\n/* .c-modal:not(:empty) {\n  opacity: 1;\n} */\n\n.c-modal__overlay {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(120, 120, 120, 0.8);\n}\n.c-modal__inner-container {\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  background-color: #fff;\n  width: 400px;\n  height: 500px;\n  max-width: 79%;\n  max-height: 95%;\n}\n.c-modal__content {\n  width: 100%;\n  height: calc(100% - 60px);\n}\n.c-modal__btn-container {\n  display: flex;\n  width: 100%;\n}\n.c-modal__btn-close {\n  box-shadow: none;\n  width: 100%;\n  border-radius: 0;\n  height: 60px;\n  /*   background-color: rgba(40,90,190, .5) */\n}\n\n/** Tabs **/\n\n.c-tab-layout {\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.c-tab-layout__container {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.c-tab-layout__button-container {\n  display: flex;\n  width: 100%;\n}\n\n.c-tab-layout__tab {\n  display: none;\n}\n\n.c-tab-layout__tab.active {\n  display: block;\n  overflow: hidden;\n}\n\n.c-tab-layout__button {\n  display: flex;\n  flex-grow: 1;\n  margin: 0;\n  line-height: 20px;\n  font-size: 16px;\n  border: none;\n  padding: 15px;\n  background-color: rgba(90, 90, 90, 0.2);\n  text-transform: uppercase;\n  text-align: center;\n}\n\n.c-tab-layout__button {\n  border-right: solid 1px rgba(70, 70, 100, 0.5);\n}\n.c-tab-layout__button:last-child {\n  border-right: none;\n}\n\n.c-tab-layout__button.active {\n  /*   border-top: solid 5px rgb(95, 151, 224); */\n  background-color: #fff;\n}\n/** color picker **/\n\n.c-color-picker__tabs {\n  min-width: 250px;\n  min-height: 350px;\n  max-height: 100%;\n}\n\n.c-color-picker {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 10px auto;\n}\n\n.c-color-picker__display {\n  width: 130px;\n  height: 90px;\n  border-radius: 30px;\n  box-shadow: 3px 3px 10px 3px rgba(164, 164, 165, 0.3);\n  border: solid 1px rgba(120, 120, 120, 0.3);\n  margin: 10px auto;\n}\n\n.c-color-picker__sliders {\n  display: flex;\n  flex-direction: column;\n  margin: 5px auto;\n}\n\n.c-color-picker__range-label {\n  display: block;\n}\n\n.c-color-picker__range {\n  display: block;\n  height: 20px;\n  width: 200px;\n}\n\n/** Swatches **/\n\n.c-color-swatches__container {\n  margin: 10px auto;\n  overflow: hidden;\n}\n\n.c-color-swatches {\n  overflow: auto;\n  max-height: 270px;\n  height: 100%;\n  padding: 5px 20px;\n  margin: 0 auto;\n}\n\n.c-color-swatches .btn {\n  margin: 5px;\n}\n\n.txt {\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n}\n\n.hdg {\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.hdg--1 {\n  font-size: 2rem;\n}\n\n.hdg--2 {\n  font-size: 1.5rem;\n}\n\n.hdg--3 {\n  font-size: 1.3rem;\n}\n'],sourceRoot:""}]),t.default=i},function(n,t,e){"use strict";function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function i(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}e.r(t);var r=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.storage=localStorage}var t,e,r;return t=n,(e=[{key:"save",value:function(n,t){var e=this;return this.verifyStorage().then((function(){return e.serialize(t)})).then((function(t){return e.insert(n,t)}))}},{key:"load",value:function(n){var t=this;return this.verifyStorage().then((function(){return t.storage.getItem(n)})).then((function(n){return n?t.deserialize(n):null}))}},{key:"clear",value:function(){return this.storage.clear(),Promise.resolve()}},{key:"remove",value:function(n){return this.storage.removeItem(n),Promise.resolve(!0)}},{key:"getKeys",value:function(){return Promise.resolve(Object.keys(this.storage))}},{key:"verifyStorage",value:function(){return this.storage?Promise.resolve():Promise.reject("localStorage is not available")}},{key:"serialize",value:function(n){return this.isDate(n)&&(n=n.toISOString()),"string"!=typeof n&&(n=JSON.stringify(n)),n}},{key:"deserialize",value:function(n){return n&&(n.indexOf("{")>-1||n.indexOf("[")>-1)?this.getObjectProps(JSON.parse(n)):"true"===n||"false"===n?"true"===n:isNaN(Number(n))?this.isSerializedDate(n)?this.convertToDate(n):"undefined"===n?null:n:Number(n)}},{key:"getObjectProps",value:function(n){var t=this;return Object.keys(n).map((function(e){n[e]=t.getPropValue(n[e])})),n}},{key:"getPropValue",value:function(n){var t=this;return this.isArray(n)?n.map((function(n){return t.getPropValue(n)})):"object"===o(n)?this.getObjectProps(n):"string"==typeof n&&this.isSerializedDate(n)?this.convertToDate(n):n}},{key:"convertToDate",value:function(n){var t=Date.parse(n);return isNaN(t)?n:new Date(t)}},{key:"isSerializedDate",value:function(n){var t=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/.test(n);return t||/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+/.test(n)}},{key:"insert",value:function(n,t){try{return this.storage.setItem(n,t),Promise.resolve(!0)}catch(n){return Promise.reject(n)}}},{key:"isDate",value:function(n){return"[object Date]"===Object.prototype.toString.call(n)}},{key:"isArray",value:function(n){return"[object Array]"===Object.prototype.toString.call(n)}}])&&i(t.prototype,e),r&&i(t,r),n}();function a(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}var c=function(){function n(t,e,o,i){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.r=Math.round(t),this.g=Math.round(e),this.b=Math.round(o),this.a=isNaN(i)?1:i}var t,e,o;return t=n,(e=[{key:"setOpacity",value:function(n){var t=isNaN(n)?1:n;this.a=Math.min(t,1)}},{key:"update",value:function(n){this.r=Math.round(n.r||this.r),this.g=Math.round(n.g||this.g),this.b=Math.round(n.b||this.b),this.a=isNaN(n.a)?1:Math.min(n.a,this.a)}},{key:"getAsCssValue",value:function(){return"rgba(".concat(this.r,", ").concat(this.g,", ").concat(this.b,", ").concat(this.a,")")}},{key:"copy",value:function(){return n.fromObject(this)}}])&&a(t.prototype,e),o&&a(t,o),n}();function A(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}c.fromObject=function(n){var t=new c(1,1,1);return t.update(n),t};var s=function(){function n(t,e,o){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),isNaN(o)&&(o=t.a||1),this.color=t,this.lineWidth=e,this.opacity=o,isNaN(o)||this.color.setOpacity(o)}var t,e,o;return t=n,(e=[{key:"copy",value:function(){return new n(this.color.copy(),this.lineWidth,this.opacity)}}])&&A(t.prototype,e),o&&A(t,o),n}();function l(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}s.fromObject=function(n){return new s(c.fromObject(n.color),n.lineWidth||5)};var u=new r,d=function(){function n(t,e,o){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.ctx=t.getContext("2d"),this.scratchCtx=e.getContext("2d"),this.clear=o,this.paths=[],this.redo=[],this.canvas=t,this.canvasScratch=e,this.settings=new s(new c(20,45,200),5,1),this.restorePath()}var t,e,o;return t=n,(e=[{key:"undo",value:function(){this.clear(this.ctx),this.redo.push(this.paths.pop()),this.drawAllPaths(this.paths)}},{key:"updateSettings",value:function(n){this.settings=Object.assign(this.settings,n),n.color&&1!==n.color.a&&(this.settings.opacity=n.color.a)}},{key:"startDrawing",value:function(){var n=this,t=[];return{start:function(n,e,o){t=[o],Object.assign({},o)},move:function(e,o,i){e.preventDefault(),e.stopPropagation(),t.push(i),n.drawLine(t,n.settings,n.scratchCtx,n.clear)},finish:function(){n.savePath(t,n.settings)}}}},{key:"drawLine",value:function(n,t,e,o){var i=e||this.ctx;n&&n.length&&(n=n.filter((function(n){return!!n})),"function"==typeof o&&n.length&&o(i),i.beginPath(),i.moveTo(n[0].x,n[0].y),n.forEach((function(n){i.lineTo(n.x,n.y)})),i.lineWidth=t.lineWidth,i.lineCap="round",i.strokeStyle=t.color.getAsCssValue(),i.stroke(),console.log("finished build",Date.now()))}},{key:"savePath",value:function(n,t){this.paths.push({path:n,settings:t.copy()}),this.clear(this.ctx),this.clear(this.scratchCtx),this.drawAllPaths(this.paths),u.save("paths",this.paths)}},{key:"restorePath",value:function(){var n=this;u.load("paths").then((function(t){n.paths=t||[],n.drawAllPaths(t)}))}},{key:"drawAllPaths",value:function(n){var t=this;n&&n.length&&n.forEach((function(n){var e=s.fromObject(n.settings);t.drawLine(n.path,e)}))}},{key:"clearBackstack",value:function(){this.paths=[]}}])&&l(t.prototype,e),o&&l(t,o),n}(),h={click:"click",mousedown:"touchstart",mouseup:"touchend",mousemove:"touchmove"};function p(n,t){f(n,"mousedown",(function(e,o,i){t.start.call(n,e,n,i);var r=null,a=function(e,o,i){clearTimeout(r),t.finish.call(n,e,o,i),A(),c()},c=f(n,"mouseup",a,!0),A=f(n,"mousemove",(function(e,o,i){clearTimeout(r),t.move.call(n,e,o,i),r=setTimeout((function(){a(e,o,i)}),500)}),!0)}),!0)}function f(n,t,e,o){var i=function(t){o&&t.preventDefault(),e.call(n,t,n,function(n){if(n.clientX)return{x:n.clientX,y:n.clientY};if(n.type.indexOf("touch")>-1&&n.touches&&n.touches[0])return function(n){var t=n.touches[0].clientX,e=n.touches[0].clientY;if(n.touches.length>1){var o=Array.from(n.touches).filter((function(n){return g(n.clientX,window.innerWidth)&&g(n.clientY,window.innerHeight)}));o.length&&(t=o[0].clientX,e=o[0].clientY)}return{x:t,y:e}}(n);return null}(t))};return n.element.addEventListener(t,i),h[t]&&h[t]!==t?(n.element.addEventListener(h[t],i),function(){n.element.removeEventListener(t,i),n.element.removeEventListener(h[t],i)}):function(){n.element.removeEventListener(t,i)}}function g(n,t){return n>70&&n<t-70}new r;var b=document.getElementById("canvas"),m=document.getElementById("canvas-scratch-pad"),C=window.devicePixelRatio,E=window.innerHeight,v=window.innerWidth;function x(n){return n.width=v*C,n.height=E*C,n.style.width=v+"px",n.style.height=E+"px",n.getContext("2d").scale(C,C),n}x(b),x(m);var y=new d(x(b),x(m),w);function B(){y.clearBackstack(),w(b.getContext("2d")),w(m.getContext("2d"))}function w(n){n.clearRect(0,0,b.width/C,b.height/C)}function _(){y.undo()}function k(n){this.download="image.png",this.href=b.toDataURL("image/png")}function j(n){y.updateSettings(n)}var z=e(0),O=function(){};O.prototype.addEventListener=function(n,t){if(n==="oncustomdrag".slice(2))return void p(this,t);f(this,n,t)},O.prototype.windowOffset=function(){var n={x:this.elem.offsetLeft,y:this.elem.offsetTop},t=this.parentElement;for(;t.parentElement;)n.x+=t.offsetLeft,n.y+=t.offsetTop,t=t.parentElement;return n},O.prototype.setActive=function(n){this[n?"addClass":"removeClass"]("active")},O.prototype.addClass=function(n){if(!this.className)return void this.setAttribute(this.elem,"className",n);if(this.className.split(" ").indexOf(n)>-1)return;this.className=[this.className,n].join(" ")},O.prototype.removeClass=function(n){if(!this.className||-1===this.className.indexOf(n))return;this.className=this.className.split(" ").filter((function(t){return t!==n})).join(" ")},O.prototype.clone=function(n,t){var e=(this.children||[]).map((function(n){return n.clone()})),o=S(this.tagName)(Object.assign({},this.attr,t),e);return this.handle=n,o};var S=Object(z.override)(O.prototype),Y="a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|rtc|ruby|s|samp|script|section|select|slot|small|source|span|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr".split("|").reduce((function(n,t){return n[t]=S(t),n}),{});Y.virtual=S("virtual",{attach:function(n){return this.parentElement=n,this.parentElement}});var W={register:S,elements:Y,getHandle:z.getHandle};var N=W.elements,P=N.div,M=N.button,T=W.elements,D=T.div,Z=T.button,H=W.register("d-tab");function L(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return H({_id:n.id||Symbol("tab"),class:"c-tab-layout__tab".concat(n.active?" active":""),_active:n.active,_title:n.title},e)}function U(n,t,e){return Z({class:"c-tab-layout__button".concat(n.attr._active?" active":""),onclick:e(t)},n.attr._title)}var R=[{r:244,g:67,b:54,a:1},{r:233,g:30,b:99,a:1},{r:156,g:39,b:176,a:1},{r:103,g:58,b:183,a:1},{r:63,g:81,b:181,a:1},{r:33,g:150,b:243,a:1},{r:3,g:169,b:244,a:1},{r:0,g:188,b:212,a:1},{r:0,g:150,b:136,a:1},{r:76,g:175,b:80,a:1},{r:139,g:195,b:74,a:1},{r:205,g:220,b:57,a:1},{r:255,g:235,b:59,a:1},{r:255,g:193,b:7,a:1},{r:255,g:152,b:0,a:1},{r:255,g:87,b:34,a:1},{r:121,g:85,b:72,a:1},{r:158,g:158,b:158,a:1},{r:96,g:125,b:139,a:1}];var X=W.elements,V=X.div,I=X.input,q=X.button,J=(X.p,X.label),G=(W.getHandle,{red:"r",green:"g",blue:"b",opacity:"a"});function $(n){return t=V({class:"c-color-picker__tabs",v_color:n.currentColor,e_onColorChanged:function(t){this.v_color=t,n.colorSelected(t)}},function(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];var i=e.map((function(n,t){return U(n,t,r)}));function r(n){return function(t){e.forEach((function(t,e){return t.setActive(e===n)})),i.forEach((function(t,e){return t.setActive(e===n)}))}}return D({class:"c-tab-layout"},D({class:"c-tab-layout__button-container"},i),D({class:"c-tab-layout__container"},e))}({},L({title:"swatches",active:!0},V({class:"c-color-swatches__container"},F(),V({class:"c-color-swatches"},R.map(Q)))),L({title:"custom",active:!1},V({class:"c-color-picker"},F(),V({class:"c-color-picker__sliders"},Object.keys(G).map(K)))))),P({class:"c-modal",e_onremove:function(){this.remove()}},P({class:"c-modal__overlay o-flex"},P({class:"c-modal__inner-container"},P({class:"c-modal__content"},t),P({class:"c-modal__btn-container"},M({class:"btn c-modal__btn-close",onclick:function(){this.emit("onremove")}},"OK"))))).render(document.body);var t}function F(){return V({class:"c-color-picker__display",style:"",v_color:null,set_color:function(n){this.style="background-color: ".concat(this.v_color.getAsCssValue())}})}function K(n){var t,e=G[n],o="opacity"===n?1:256,i="opacity"===n?.01:1;return V({class:"c-color-picker__option"},J({class:"c-color-picker__range-label"},n),I({class:"c-color-picker__range",type:"range",min:0,max:o,step:i,v_color:null,set_color:function(n){this.value=n[e]},value:"",oninput:(t=e,function(n){this.value=Number(n.target.value);var e=c.fromObject(Object.assign({},this.v_color,function(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}({},t,this.value)));this.emit("onColorChanged",e)})}))}function Q(n){var t=c.fromObject(n);return q({class:"btn circle",onclick:nn(t),style:"background-color: ".concat(t.getAsCssValue(),";")})}function nn(n){return function(t){this.emit("onColorChanged",n)}}var tn=W.elements,en=tn.button,on=tn.i;tn.div,W.getHandle;function rn(){return en({class:"btn circle custom-color-btn",onclick:function(n,t){var e,o,i=this;e=this.v_color,o=function(n){i.emit("updateColor",n)},$({colorSelected:function(n){this.v_color=n,o(n)},currentColor:e})},v_color:null,set_color:an,style:"background-color: rgb(40,40,40)"},on({class:"material-icons md-light md-36"},"brush"))}function an(){this.style.backgroundColor="".concat(this.v_color.getAsCssValue())}var cn=W.elements,An=(cn.button,cn.i,cn.div);W.getHandle;function sn(n){var t={win:{x:0,y:0},view:{x:0,y:0}},e=!1,o=!0,i=null,r={start:function(n,i,r){o=!0,e=!0,t.view=r,t.win=this.windowOffset(),a.call(this,n,i,r,500),this.emit("onDragLocationChanged",{x:t.win.x,y:t.win.y}),this.emit("dragging",!0)},move:function(n,i,r){if(e&&r){a.call(this,n,i,r,500);var c=r.x-t.view.x,A=c+t.win.x;Math.abs(c)>10&&(o=!1),this.emit("onDragLocationChanged",{x:A,y:t.win.y}),this.emit("onMove",n,r.x)}},finish:function(t,r,a){clearTimeout(i),e&&(e=!1,this.emit("dragging",!1),o&&this.emit("onlick",t,n),this.emit("onDragLocationChanged",null))}};function a(n,t,e,o){var a=this;clearTimeout(i),i=setTimeout((function(){return r.finish.call(a,n,t,e)}),o)}return r}function ln(n){this.v_dragging=n}var un=W.elements,dn=un.button,hn=un.i,pn=un.div;W.getHandle;function fn(){return function(n,t){t.setAttribute("v_dragging",!1),t.setAttribute("set_dragging",(function(n){this[n?"addClass":"removeClass"]("o-hide")})),n=Object.assign(n,{class:"o-relative",v_dragging:!1,e_dragging:ln,v_dragLocation:null,e_onDragLocationChanged:function(n){this.v_dragLocation=n}});for(var e=arguments.length,o=new Array(e>2?e-2:0),i=2;i<e;i++)o[i-2]=arguments[i];return An(n,t,An({class:"c-drag-overlay",v_dragging:!1,set_dragging:function(n){this.setActive(n)},oncustomdrag:sn(t)},o),t.clone("dragbutton",{onRender:function(){this.addClass("o-fixed o-none"),this.setAttribute("style",""),this.setAttribute("v_dragLocation",null),this.addEmitHandler("set_dragging",(function(n){this.setActive(n)})),this.addEmitHandler("set_dragLocation",(function(n){this.style=n?"left: ".concat(n.x,"px; top: ").concat(n.y,"px;"):""}))}}))}({e_onMove:gn,e_onclick:bn,_updateSize:mn},dn({class:"btn circle brush-size-btn o-flex"},hn({class:"material-icons md-light md-18"},"brush"),hn({class:"material-icons md-light md-36"},"brush")),pn({class:"o-width--100 o-height--100 o-relative"},pn({class:"o-flex--column o-width--100 o-height--100"},pn({class:"o-flex--column o-margin--auto"},pn({class:"c-brush-size__editing-overlay"},pn({class:"circle o-bkg--black o-margin--h-auto o-margin--b-20",v_size:1,set_size:function(n){this.style="width: ".concat(n,"px; height: ").concat(n,"px;")},style:"",handle:"sizeDisplay"}),pn({class:"hdg hdg--2",v_size:1,set_size:function(n){this.textContent="".concat(n,"px line width")}},"")))),pn({class:"c-brush-size__indicator-container"},pn({class:"c-brush-size__indicator"},[50,39,27,15,3].map((function(n){return pn({class:"circle o-bkg--black o-margin--t-auto",style:"width: ".concat(n,"px; height: ").concat(n,"px")})}))),pn({class:"c-brush-size__indicator-line o-bkg--black"}))))}function gn(n,t){console.log("handlingMove");var e=window.innerWidth-150;if(!(t>e)){var o=(e-t)/(e/50);this._updateSize(o)}}function bn(n,t){return console.warn("clicked!!!"),!1}function mn(n){n=Math.round(Math.max(n,1)),this.emit("updateSize",n)}var Cn=W.elements,En=(Cn.div,Cn.button,Cn.i,Cn.virtual);W.getHandle;var vn={$:function(n){return document.querySelector(n)},$$:function(n){return Array.from(document.querySelectorAll(n))}};var xn=W.elements,yn=xn.button,Bn=xn.i,wn=xn.div,_n=xn.a,kn=(W.getHandle,function(){var n=localStorage.getItem("v_color");if(n)return c.fromObject(JSON.parse(n));return new c(40,40,40,1)}()),jn=function(){var n=localStorage.getItem("v_size");if(n)return Number(n);return 5}();function zn(n){var t=new s(kn,jn,kn.a);return j(t),wn({class:"c-overlay-container",_updateSettings:function(){j(this.v_settings)},v_settings:t,set_settings:Sn,v_color:kn,v_size:jn,e_updateColor:On("v_color"),e_updateSize:On("v_size")},function(){var n=[wn({class:"c-editing-buttons"},yn({class:"btn circle clear-btn",onclick:B},Bn({class:"material-icons md-light md-36"},"delete_forever")),yn({class:"btn circle undo-btn",onclick:_},Bn({class:"material-icons md-light md-36"},"undo")),En({},rn(),fn()))];["iPhone","iPad","iPod"].includes(navigator.platform)||n.unshift(_n({class:"btn circle download-btn",href:"#",download:"drawing.png",onclick:k},Bn({class:"material-icons md-light md-36",textContent:"save"})));return n}())}function On(n){return function(t){this[n]=t,localStorage.setItem(n,JSON.stringify(t)),this.v_settings=new s(this.v_color,this.v_size,this.v_color.a),this._updateSettings()}}function Sn(n){this.v_settings=n,this._updateSettings()}p({element:m},y.startDrawing());e(2);zn().render(vn.$("#app")),"serviceWorker"in navigator?navigator.serviceWorker.register("./sw.js").then((function(n){console.log("Service worker registration succeeded:",n)})).catch((function(n){console.log("Service worker registration failed:",n)})):console.log("Service workers are not supported.")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,